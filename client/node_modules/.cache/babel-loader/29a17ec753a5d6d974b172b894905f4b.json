{"ast":null,"code":"// dedupe duplicated packages, or find them in the tree\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js');\n\nclass FindDupes extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Find duplication in the package tree';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'find-dupes';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get params() {\n    return ['global-style', 'legacy-bundling', 'strict-peer-deps', 'package-lock', 'omit', 'ignore-scripts', 'audit', 'bin-links', 'fund', ...super.params];\n  }\n\n  exec(args, cb) {\n    this.npm.config.set('dry-run', true);\n    this.npm.commands.dedupe([], cb);\n  }\n\n}\n\nmodule.exports = FindDupes;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/find-dupes.js"],"names":["ArboristWorkspaceCmd","require","FindDupes","description","name","params","exec","args","cb","npm","config","set","commands","dedupe","module","exports"],"mappings":"AAAA;AACA,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,8BAAD,CAApC;;AAEA,MAAMC,SAAN,SAAwBF,oBAAxB,CAA6C;AAC3C;AACsB,aAAXG,WAAW,GAAI;AACxB,WAAO,sCAAP;AACD;AAED;;;AACe,aAAJC,IAAI,GAAI;AACjB,WAAO,YAAP;AACD;AAED;;;AACiB,aAANC,MAAM,GAAI;AACnB,WAAO,CACL,cADK,EAEL,iBAFK,EAGL,kBAHK,EAIL,cAJK,EAKL,MALK,EAML,gBANK,EAOL,OAPK,EAQL,WARK,EASL,MATK,EAUL,GAAG,MAAMA,MAVJ,CAAP;AAYD;;AAEDC,EAAAA,IAAI,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACd,SAAKC,GAAL,CAASC,MAAT,CAAgBC,GAAhB,CAAoB,SAApB,EAA+B,IAA/B;AACA,SAAKF,GAAL,CAASG,QAAT,CAAkBC,MAAlB,CAAyB,EAAzB,EAA6BL,EAA7B;AACD;;AA9B0C;;AAgC7CM,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["// dedupe duplicated packages, or find them in the tree\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js')\n\nclass FindDupes extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Find duplication in the package tree'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'find-dupes'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'global-style',\n      'legacy-bundling',\n      'strict-peer-deps',\n      'package-lock',\n      'omit',\n      'ignore-scripts',\n      'audit',\n      'bin-links',\n      'fund',\n      ...super.params,\n    ]\n  }\n\n  exec (args, cb) {\n    this.npm.config.set('dry-run', true)\n    this.npm.commands.dedupe([], cb)\n  }\n}\nmodule.exports = FindDupes\n"]},"metadata":{},"sourceType":"script"}