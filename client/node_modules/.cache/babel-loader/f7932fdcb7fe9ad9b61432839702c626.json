{"ast":null,"code":"const isObj = val => !!val && !Array.isArray(val) && typeof val === 'object';\n\nconst compare = (ak, bk, prefKeys) => prefKeys.includes(ak) && !prefKeys.includes(bk) ? -1 : prefKeys.includes(bk) && !prefKeys.includes(ak) ? 1 : prefKeys.includes(ak) && prefKeys.includes(bk) ? prefKeys.indexOf(ak) - prefKeys.indexOf(bk) : ak.localeCompare(bk, 'en');\n\nconst sort = (replacer, seen) => (key, val) => {\n  const prefKeys = Array.isArray(replacer) ? replacer : [];\n  if (typeof replacer === 'function') val = replacer(key, val);\n  if (!isObj(val)) return val;\n  if (seen.has(val)) return seen.get(val);\n  const ret = Object.entries(val).sort(([ak, av], [bk, bv]) => isObj(av) === isObj(bv) ? compare(ak, bk, prefKeys) : isObj(av) ? 1 : -1).reduce((set, [k, v]) => {\n    set[k] = v;\n    return set;\n  }, {});\n  seen.set(val, ret);\n  return ret;\n};\n\nmodule.exports = (obj, replacer, space = 2) => JSON.stringify(obj, sort(replacer, new Map()), space) + (space ? '\\n' : '');","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/json-stringify-nice/index.js"],"names":["isObj","val","Array","isArray","compare","ak","bk","prefKeys","includes","indexOf","localeCompare","sort","replacer","seen","key","has","get","ret","Object","entries","av","bv","reduce","set","k","v","module","exports","obj","space","JSON","stringify","Map"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,GAAG,IAAI,CAAC,CAACA,GAAF,IAAS,CAACC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAV,IAAgC,OAAOA,GAAP,KAAe,QAApE;;AAEA,MAAMG,OAAO,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,QAAT,KACdA,QAAQ,CAACC,QAAT,CAAkBH,EAAlB,KAAyB,CAACE,QAAQ,CAACC,QAAT,CAAkBF,EAAlB,CAA1B,GAAkD,CAAC,CAAnD,GACEC,QAAQ,CAACC,QAAT,CAAkBF,EAAlB,KAAyB,CAACC,QAAQ,CAACC,QAAT,CAAkBH,EAAlB,CAA1B,GAAkD,CAAlD,GACAE,QAAQ,CAACC,QAAT,CAAkBH,EAAlB,KAAyBE,QAAQ,CAACC,QAAT,CAAkBF,EAAlB,CAAzB,GACEC,QAAQ,CAACE,OAAT,CAAiBJ,EAAjB,IAAuBE,QAAQ,CAACE,OAAT,CAAiBH,EAAjB,CADzB,GAEED,EAAE,CAACK,aAAH,CAAiBJ,EAAjB,EAAqB,IAArB,CALN;;AAOA,MAAMK,IAAI,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB,CAACC,GAAD,EAAMb,GAAN,KAAc;AAC7C,QAAMM,QAAQ,GAAGL,KAAK,CAACC,OAAN,CAAcS,QAAd,IAA0BA,QAA1B,GAAqC,EAAtD;AAEA,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EACEX,GAAG,GAAGW,QAAQ,CAACE,GAAD,EAAMb,GAAN,CAAd;AAEF,MAAI,CAACD,KAAK,CAACC,GAAD,CAAV,EACE,OAAOA,GAAP;AAEF,MAAIY,IAAI,CAACE,GAAL,CAASd,GAAT,CAAJ,EACE,OAAOY,IAAI,CAACG,GAAL,CAASf,GAAT,CAAP;AAEF,QAAMgB,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAelB,GAAf,EAAoBU,IAApB,CACV,CAAC,CAACN,EAAD,EAAKe,EAAL,CAAD,EAAW,CAACd,EAAD,EAAKe,EAAL,CAAX,KACErB,KAAK,CAACoB,EAAD,CAAL,KAAcpB,KAAK,CAACqB,EAAD,CAAnB,GAA0BjB,OAAO,CAACC,EAAD,EAAKC,EAAL,EAASC,QAAT,CAAjC,GACEP,KAAK,CAACoB,EAAD,CAAL,GAAY,CAAZ,GACA,CAAC,CAJK,EAKVE,MALU,CAKH,CAACC,GAAD,EAAM,CAACC,CAAD,EAAIC,CAAJ,CAAN,KAAiB;AACxBF,IAAAA,GAAG,CAACC,CAAD,CAAH,GAASC,CAAT;AACA,WAAOF,GAAP;AACD,GARW,EAQT,EARS,CAAZ;AAUAV,EAAAA,IAAI,CAACU,GAAL,CAAStB,GAAT,EAAcgB,GAAd;AACA,SAAOA,GAAP;AACD,CAxBD;;AA0BAS,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMhB,QAAN,EAAgBiB,KAAK,GAAG,CAAxB,KACfC,IAAI,CAACC,SAAL,CAAeH,GAAf,EAAoBjB,IAAI,CAACC,QAAD,EAAW,IAAIoB,GAAJ,EAAX,CAAxB,EAA+CH,KAA/C,KACGA,KAAK,GAAG,IAAH,GAAU,EADlB,CADF","sourcesContent":["const isObj = val => !!val && !Array.isArray(val) && typeof val === 'object'\n\nconst compare = (ak, bk, prefKeys) =>\n  prefKeys.includes(ak) && !prefKeys.includes(bk) ? -1\n  : prefKeys.includes(bk) && !prefKeys.includes(ak) ? 1\n  : prefKeys.includes(ak) && prefKeys.includes(bk)\n    ? prefKeys.indexOf(ak) - prefKeys.indexOf(bk)\n    : ak.localeCompare(bk, 'en')\n\nconst sort = (replacer, seen) => (key, val) => {\n  const prefKeys = Array.isArray(replacer) ? replacer : []\n\n  if (typeof replacer === 'function')\n    val = replacer(key, val)\n\n  if (!isObj(val))\n    return val\n\n  if (seen.has(val))\n    return seen.get(val)\n\n  const ret = Object.entries(val).sort(\n    ([ak, av], [bk, bv]) =>\n      isObj(av) === isObj(bv) ? compare(ak, bk, prefKeys)\n      : isObj(av) ? 1\n      : -1\n  ).reduce((set, [k, v]) => {\n    set[k] = v\n    return set\n  }, {})\n\n  seen.set(val, ret)\n  return ret\n}\n\nmodule.exports = (obj, replacer, space = 2) =>\n  JSON.stringify(obj, sort(replacer, new Map()), space)\n  + (space ? '\\n' : '')\n"]},"metadata":{},"sourceType":"script"}