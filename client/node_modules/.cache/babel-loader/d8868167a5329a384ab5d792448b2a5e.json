{"ast":null,"code":"'use strict';\n\nconst pacote = require('pacote');\n\nconst npa = require('npm-package-arg');\n\nconst runScript = require('@npmcli/run-script');\n\nmodule.exports = pack;\n\nasync function pack(spec = 'file:.', opts = {}) {\n  // gets spec\n  spec = npa(spec);\n  const manifest = await pacote.manifest(spec, opts); // Default to true if no log options passed, set to false if we're in silent\n  // mode\n\n  const banner = !opts.log || opts.log.level !== 'silent';\n\n  if (spec.type === 'directory') {\n    // prepack\n    await runScript({ ...opts,\n      event: 'prepack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner\n    });\n  } // packs tarball\n\n\n  const tarball = await pacote.tarball(manifest._resolved, { ...opts,\n    integrity: manifest._integrity\n  });\n\n  if (spec.type === 'directory') {\n    // postpack\n    await runScript({ ...opts,\n      event: 'postpack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n      env: {\n        npm_package_from: tarball.from,\n        npm_package_resolved: tarball.resolved,\n        npm_package_integrity: tarball.integrity\n      }\n    });\n  }\n\n  return tarball;\n}","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/libnpmpack/index.js"],"names":["pacote","require","npa","runScript","module","exports","pack","spec","opts","manifest","banner","log","level","type","event","path","fetchSpec","stdio","pkg","tarball","_resolved","integrity","_integrity","env","npm_package_from","from","npm_package_resolved","resolved","npm_package_integrity"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAzB;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,IAAjB;;AACA,eAAeA,IAAf,CAAqBC,IAAI,GAAG,QAA5B,EAAsCC,IAAI,GAAG,EAA7C,EAAiD;AAC/C;AACAD,EAAAA,IAAI,GAAGL,GAAG,CAACK,IAAD,CAAV;AAEA,QAAME,QAAQ,GAAG,MAAMT,MAAM,CAACS,QAAP,CAAgBF,IAAhB,EAAsBC,IAAtB,CAAvB,CAJ+C,CAM/C;AACA;;AACA,QAAME,MAAM,GAAG,CAACF,IAAI,CAACG,GAAN,IAAcH,IAAI,CAACG,GAAL,CAASC,KAAT,KAAmB,QAAhD;;AAEA,MAAIL,IAAI,CAACM,IAAL,KAAc,WAAlB,EAA+B;AAC7B;AACA,UAAMV,SAAS,CAAC,EACd,GAAGK,IADW;AAEdM,MAAAA,KAAK,EAAE,SAFO;AAGdC,MAAAA,IAAI,EAAER,IAAI,CAACS,SAHG;AAIdC,MAAAA,KAAK,EAAE,SAJO;AAKdC,MAAAA,GAAG,EAAET,QALS;AAMdC,MAAAA;AANc,KAAD,CAAf;AAQD,GApB8C,CAsB/C;;;AACA,QAAMS,OAAO,GAAG,MAAMnB,MAAM,CAACmB,OAAP,CAAeV,QAAQ,CAACW,SAAxB,EAAmC,EACvD,GAAGZ,IADoD;AAEvDa,IAAAA,SAAS,EAAEZ,QAAQ,CAACa;AAFmC,GAAnC,CAAtB;;AAKA,MAAIf,IAAI,CAACM,IAAL,KAAc,WAAlB,EAA+B;AAC7B;AACA,UAAMV,SAAS,CAAC,EACd,GAAGK,IADW;AAEdM,MAAAA,KAAK,EAAE,UAFO;AAGdC,MAAAA,IAAI,EAAER,IAAI,CAACS,SAHG;AAIdC,MAAAA,KAAK,EAAE,SAJO;AAKdC,MAAAA,GAAG,EAAET,QALS;AAMdC,MAAAA,MANc;AAOda,MAAAA,GAAG,EAAE;AACHC,QAAAA,gBAAgB,EAAEL,OAAO,CAACM,IADvB;AAEHC,QAAAA,oBAAoB,EAAEP,OAAO,CAACQ,QAF3B;AAGHC,QAAAA,qBAAqB,EAAET,OAAO,CAACE;AAH5B;AAPS,KAAD,CAAf;AAaD;;AAED,SAAOF,OAAP;AACD","sourcesContent":["'use strict'\n\nconst pacote = require('pacote')\nconst npa = require('npm-package-arg')\nconst runScript = require('@npmcli/run-script')\n\nmodule.exports = pack\nasync function pack (spec = 'file:.', opts = {}) {\n  // gets spec\n  spec = npa(spec)\n\n  const manifest = await pacote.manifest(spec, opts)\n\n  // Default to true if no log options passed, set to false if we're in silent\n  // mode\n  const banner = !opts.log || (opts.log.level !== 'silent')\n\n  if (spec.type === 'directory') {\n    // prepack\n    await runScript({\n      ...opts,\n      event: 'prepack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner\n    })\n  }\n\n  // packs tarball\n  const tarball = await pacote.tarball(manifest._resolved, {\n    ...opts,\n    integrity: manifest._integrity\n  })\n\n  if (spec.type === 'directory') {\n    // postpack\n    await runScript({\n      ...opts,\n      event: 'postpack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n      env: {\n        npm_package_from: tarball.from,\n        npm_package_resolved: tarball.resolved,\n        npm_package_integrity: tarball.integrity\n      }\n    })\n  }\n\n  return tarball\n}\n"]},"metadata":{},"sourceType":"script"}