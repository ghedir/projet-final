{"ast":null,"code":"'use strict';\n\nconst eu = encodeURIComponent;\n\nconst fetch = require('npm-registry-fetch');\n\nconst validate = require('aproba'); // From https://github.com/npm/registry/blob/master/docs/orgs/memberships.md\n\n\nconst cmd = module.exports;\n\nclass MembershipDetail {}\n\ncmd.set = (org, user, role, opts = {}) => {\n  if (typeof role === 'object' && Object.keys(opts).length === 0) {\n    opts = role;\n    role = undefined;\n  }\n\n  validate('SSSO|SSZO', [org, user, role, opts]);\n  user = user.replace(/^@?/, '');\n  org = org.replace(/^@?/, '');\n  return fetch.json(`/-/org/${eu(org)}/user`, { ...opts,\n    method: 'PUT',\n    body: {\n      user,\n      role\n    }\n  }).then(ret => Object.assign(new MembershipDetail(), ret));\n};\n\ncmd.rm = (org, user, opts = {}) => {\n  validate('SSO', [org, user, opts]);\n  user = user.replace(/^@?/, '');\n  org = org.replace(/^@?/, '');\n  return fetch(`/-/org/${eu(org)}/user`, { ...opts,\n    method: 'DELETE',\n    body: {\n      user\n    },\n    ignoreBody: true\n  }).then(() => null);\n};\n\nclass Roster {}\n\ncmd.ls = (org, opts = {}) => {\n  return cmd.ls.stream(org, opts).collect().then(data => data.reduce((acc, [key, val]) => {\n    if (!acc) {\n      acc = {};\n    }\n\n    acc[key] = val;\n    return acc;\n  }, null)).then(ret => Object.assign(new Roster(), ret));\n};\n\ncmd.ls.stream = (org, opts = {}) => {\n  validate('SO', [org, opts]);\n  org = org.replace(/^@?/, '');\n  return fetch.json.stream(`/-/org/${eu(org)}/user`, '*', { ...opts,\n    mapJSON: (value, [key]) => {\n      return [key, value];\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/libnpmorg/index.js"],"names":["eu","encodeURIComponent","fetch","require","validate","cmd","module","exports","MembershipDetail","set","org","user","role","opts","Object","keys","length","undefined","replace","json","method","body","then","ret","assign","rm","ignoreBody","Roster","ls","stream","collect","data","reduce","acc","key","val","mapJSON","value"],"mappings":"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","sourcesContent":["'use strict'\n\nconst eu = encodeURIComponent\nconst fetch = require('npm-registry-fetch')\nconst validate = require('aproba')\n\n// From https://github.com/npm/registry/blob/master/docs/orgs/memberships.md\nconst cmd = module.exports\n\nclass MembershipDetail {}\ncmd.set = (org, user, role, opts = {}) => {\n  if (\n    typeof role === 'object' &&\n    Object.keys(opts).length === 0\n  ) {\n    opts = role\n    role = undefined\n  }\n  validate('SSSO|SSZO', [org, user, role, opts])\n  user = user.replace(/^@?/, '')\n  org = org.replace(/^@?/, '')\n  return fetch.json(`/-/org/${eu(org)}/user`, {\n    ...opts,\n    method: 'PUT',\n    body: { user, role }\n  }).then(ret => Object.assign(new MembershipDetail(), ret))\n}\n\ncmd.rm = (org, user, opts = {}) => {\n  validate('SSO', [org, user, opts])\n  user = user.replace(/^@?/, '')\n  org = org.replace(/^@?/, '')\n  return fetch(`/-/org/${eu(org)}/user`, {\n    ...opts,\n    method: 'DELETE',\n    body: { user },\n    ignoreBody: true\n  }).then(() => null)\n}\n\nclass Roster {}\ncmd.ls = (org, opts = {}) => {\n  return cmd.ls.stream(org, opts)\n    .collect()\n    .then(data => data.reduce((acc, [key, val]) => {\n      if (!acc) {\n        acc = {}\n      }\n      acc[key] = val\n      return acc\n    }, null))\n    .then(ret => Object.assign(new Roster(), ret))\n}\n\ncmd.ls.stream = (org, opts = {}) => {\n  validate('SO', [org, opts])\n  org = org.replace(/^@?/, '')\n  return fetch.json.stream(`/-/org/${eu(org)}/user`, '*', {\n    ...opts,\n    mapJSON: (value, [key]) => {\n      return [key, value]\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}