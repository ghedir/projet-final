{"ast":null,"code":"'use strict';\n\nconst reporters = {\n  install: require('./reporters/install'),\n  detail: require('./reporters/detail'),\n  json: require('./reporters/json'),\n  quiet: require('./reporters/quiet')\n};\n\nconst exitCode = require('./exit-code.js');\n\nmodule.exports = Object.assign((data, options = {}) => {\n  const {\n    reporter = 'install',\n    color = true,\n    unicode = true,\n    indent = 2\n  } = options; // CLI defaults this to `null` so the defaulting method above doesn't work\n\n  const auditLevel = options.auditLevel || 'low';\n  if (!data) throw Object.assign(new TypeError('ENOAUDITDATA'), {\n    code: 'ENOAUDITDATA',\n    message: 'missing audit data'\n  });\n  if (typeof data.toJSON === 'function') data = data.toJSON();\n  return {\n    report: reporters[reporter](data, {\n      color,\n      unicode,\n      indent\n    }),\n    exitCode: exitCode(data, auditLevel)\n  };\n}, {\n  reporters\n});","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/npm-audit-report/lib/index.js"],"names":["reporters","install","require","detail","json","quiet","exitCode","module","exports","Object","assign","data","options","reporter","color","unicode","indent","auditLevel","TypeError","code","message","toJSON","report"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEC,OAAO,CAAC,qBAAD,CADA;AAEhBC,EAAAA,MAAM,EAAED,OAAO,CAAC,oBAAD,CAFC;AAGhBE,EAAAA,IAAI,EAAEF,OAAO,CAAC,kBAAD,CAHG;AAIhBG,EAAAA,KAAK,EAAEH,OAAO,CAAC,mBAAD;AAJE,CAAlB;;AAOA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,gBAAD,CAAxB;;AAEAK,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,MAAP,CAAc,CAACC,IAAD,EAAOC,OAAO,GAAG,EAAjB,KAAwB;AACrD,QAAM;AACJC,IAAAA,QAAQ,GAAG,SADP;AAEJC,IAAAA,KAAK,GAAG,IAFJ;AAGJC,IAAAA,OAAO,GAAG,IAHN;AAIJC,IAAAA,MAAM,GAAG;AAJL,MAKFJ,OALJ,CADqD,CAQrD;;AACA,QAAMK,UAAU,GAAGL,OAAO,CAACK,UAAR,IAAsB,KAAzC;AAEA,MAAI,CAACN,IAAL,EACE,MAAMF,MAAM,CAACC,MAAP,CACJ,IAAIQ,SAAJ,CAAc,cAAd,CADI,EAEJ;AACEC,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,OAAO,EAAE;AAFX,GAFI,CAAN;AAQF,MAAI,OAAOT,IAAI,CAACU,MAAZ,KAAuB,UAA3B,EACEV,IAAI,GAAGA,IAAI,CAACU,MAAL,EAAP;AAEF,SAAO;AACLC,IAAAA,MAAM,EAAEtB,SAAS,CAACa,QAAD,CAAT,CAAoBF,IAApB,EAA0B;AAAEG,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,KAA1B,CADH;AAELV,IAAAA,QAAQ,EAAEA,QAAQ,CAACK,IAAD,EAAOM,UAAP;AAFb,GAAP;AAID,CA3BgB,EA2Bd;AAAEjB,EAAAA;AAAF,CA3Bc,CAAjB","sourcesContent":["'use strict'\n\nconst reporters = {\n  install: require('./reporters/install'),\n  detail: require('./reporters/detail'),\n  json: require('./reporters/json'),\n  quiet: require('./reporters/quiet')\n}\n\nconst exitCode = require('./exit-code.js')\n\nmodule.exports = Object.assign((data, options = {}) => {\n  const {\n    reporter = 'install',\n    color = true,\n    unicode = true,\n    indent = 2,\n  } = options\n\n  // CLI defaults this to `null` so the defaulting method above doesn't work\n  const auditLevel = options.auditLevel || 'low'\n\n  if (!data)\n    throw Object.assign(\n      new TypeError('ENOAUDITDATA'),\n      {\n        code: 'ENOAUDITDATA',\n        message: 'missing audit data'\n      }\n    )\n\n  if (typeof data.toJSON === 'function')\n    data = data.toJSON()\n\n  return {\n    report: reporters[reporter](data, { color, unicode, indent }),\n    exitCode: exitCode(data, auditLevel)\n  }\n}, { reporters })\n"]},"metadata":{},"sourceType":"script"}