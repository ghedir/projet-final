{"ast":null,"code":"const URL = require('url').URL; // replaces auth info in an array of arguments or in a strings\n\n\nfunction replaceInfo(arg) {\n  const isArray = Array.isArray(arg);\n\n  const isString = str => typeof str === 'string';\n\n  if (!isArray && !isString(arg)) return arg;\n\n  const testUrlAndReplace = str => {\n    try {\n      const url = new URL(str);\n      return url.password === '' ? str : str.replace(url.password, '***');\n    } catch (e) {\n      return str;\n    }\n  };\n\n  const args = isString(arg) ? arg.split(' ') : arg;\n  const info = args.map(a => {\n    if (isString(a) && a.indexOf(' ') > -1) return a.split(' ').map(testUrlAndReplace).join(' ');\n    return testUrlAndReplace(a);\n  });\n  return isString(arg) ? info.join(' ') : info;\n}\n\nmodule.exports = replaceInfo;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/utils/replace-info.js"],"names":["URL","require","replaceInfo","arg","isArray","Array","isString","str","testUrlAndReplace","url","password","replace","e","args","split","info","map","a","indexOf","join","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAP,CAAeD,GAA3B,C,CAEA;;;AACA,SAASE,WAAT,CAAsBC,GAAtB,EAA2B;AACzB,QAAMC,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcD,GAAd,CAAhB;;AACA,QAAMG,QAAQ,GAAGC,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAvC;;AAEA,MAAI,CAACH,OAAD,IAAY,CAACE,QAAQ,CAACH,GAAD,CAAzB,EACE,OAAOA,GAAP;;AAEF,QAAMK,iBAAiB,GAAGD,GAAG,IAAI;AAC/B,QAAI;AACF,YAAME,GAAG,GAAG,IAAIT,GAAJ,CAAQO,GAAR,CAAZ;AACA,aAAOE,GAAG,CAACC,QAAJ,KAAiB,EAAjB,GAAsBH,GAAtB,GAA4BA,GAAG,CAACI,OAAJ,CAAYF,GAAG,CAACC,QAAhB,EAA0B,KAA1B,CAAnC;AACD,KAHD,CAGE,OAAOE,CAAP,EAAU;AACV,aAAOL,GAAP;AACD;AACF,GAPD;;AASA,QAAMM,IAAI,GAAGP,QAAQ,CAACH,GAAD,CAAR,GAAgBA,GAAG,CAACW,KAAJ,CAAU,GAAV,CAAhB,GAAiCX,GAA9C;AACA,QAAMY,IAAI,GAAGF,IAAI,CAACG,GAAL,CAASC,CAAC,IAAI;AACzB,QAAIX,QAAQ,CAACW,CAAD,CAAR,IAAeA,CAAC,CAACC,OAAF,CAAU,GAAV,IAAiB,CAAC,CAArC,EACE,OAAOD,CAAC,CAACH,KAAF,CAAQ,GAAR,EAAaE,GAAb,CAAiBR,iBAAjB,EAAoCW,IAApC,CAAyC,GAAzC,CAAP;AAEF,WAAOX,iBAAiB,CAACS,CAAD,CAAxB;AACD,GALY,CAAb;AAOA,SAAOX,QAAQ,CAACH,GAAD,CAAR,GAAgBY,IAAI,CAACI,IAAL,CAAU,GAAV,CAAhB,GAAiCJ,IAAxC;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBnB,WAAjB","sourcesContent":["const URL = require('url').URL\n\n// replaces auth info in an array of arguments or in a strings\nfunction replaceInfo (arg) {\n  const isArray = Array.isArray(arg)\n  const isString = str => typeof str === 'string'\n\n  if (!isArray && !isString(arg))\n    return arg\n\n  const testUrlAndReplace = str => {\n    try {\n      const url = new URL(str)\n      return url.password === '' ? str : str.replace(url.password, '***')\n    } catch (e) {\n      return str\n    }\n  }\n\n  const args = isString(arg) ? arg.split(' ') : arg\n  const info = args.map(a => {\n    if (isString(a) && a.indexOf(' ') > -1)\n      return a.split(' ').map(testUrlAndReplace).join(' ')\n\n    return testUrlAndReplace(a)\n  })\n\n  return isString(arg) ? info.join(' ') : info\n}\n\nmodule.exports = replaceInfo\n"]},"metadata":{},"sourceType":"script"}