{"ast":null,"code":"const inferOwner = require('infer-owner');\n\nconst mkdirp = require('mkdirp');\n\nconst {\n  promisify\n} = require('util');\n\nconst chownr = promisify(require('chownr'));\nconst platform = process.env.__TESTING_MKDIRP_INFER_OWNER_PLATFORM__ || process.platform;\nconst isWindows = platform === 'win32';\nconst isRoot = process.getuid && process.getuid() === 0;\nconst doChown = !isWindows && isRoot;\nmodule.exports = !doChown ? (path, opts) => mkdirp(path, opts) : (path, opts) => inferOwner(path).then(({\n  uid,\n  gid\n}) => mkdirp(path, opts).then(made => uid !== 0 || gid !== process.getgid() ? chownr(made || path, uid, gid).then(() => made) : made));\nmodule.exports.sync = !doChown ? (path, opts) => mkdirp.sync(path, opts) : (path, opts) => {\n  const {\n    uid,\n    gid\n  } = inferOwner.sync(path);\n  const made = mkdirp.sync(path);\n  if (uid !== 0 || gid !== process.getgid()) chownr.sync(made || path, uid, gid);\n  return made;\n};","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/mkdirp-infer-owner/index.js"],"names":["inferOwner","require","mkdirp","promisify","chownr","platform","process","env","__TESTING_MKDIRP_INFER_OWNER_PLATFORM__","isWindows","isRoot","getuid","doChown","module","exports","path","opts","then","uid","gid","made","getgid","sync"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAcF,OAAO,CAAC,MAAD,CAA3B;;AACA,MAAMG,MAAM,GAAGD,SAAS,CAACF,OAAO,CAAC,QAAD,CAAR,CAAxB;AAEA,MAAMI,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,uCAAZ,IACZF,OAAO,CAACD,QADb;AAEA,MAAMI,SAAS,GAAGJ,QAAQ,KAAK,OAA/B;AACA,MAAMK,MAAM,GAAGJ,OAAO,CAACK,MAAR,IAAkBL,OAAO,CAACK,MAAR,OAAqB,CAAtD;AACA,MAAMC,OAAO,GAAG,CAACH,SAAD,IAAcC,MAA9B;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAACF,OAAD,GAAW,CAACG,IAAD,EAAOC,IAAP,KAAgBd,MAAM,CAACa,IAAD,EAAOC,IAAP,CAAjC,GACb,CAACD,IAAD,EAAOC,IAAP,KAAgBhB,UAAU,CAACe,IAAD,CAAV,CAAiBE,IAAjB,CAAsB,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAD,KACtCjB,MAAM,CAACa,IAAD,EAAOC,IAAP,CAAN,CAAmBC,IAAnB,CAAwBG,IAAI,IAC1BF,GAAG,KAAK,CAAR,IAAaC,GAAG,KAAKb,OAAO,CAACe,MAAR,EAArB,GACEjB,MAAM,CAACgB,IAAI,IAAIL,IAAT,EAAeG,GAAf,EAAoBC,GAApB,CAAN,CAA+BF,IAA/B,CAAoC,MAAMG,IAA1C,CADF,GAEEA,IAHJ,CADgB,CADpB;AAOAP,MAAM,CAACC,OAAP,CAAeQ,IAAf,GAAsB,CAACV,OAAD,GAAW,CAACG,IAAD,EAAOC,IAAP,KAAgBd,MAAM,CAACoB,IAAP,CAAYP,IAAZ,EAAkBC,IAAlB,CAA3B,GAClB,CAACD,IAAD,EAAOC,IAAP,KAAgB;AAChB,QAAM;AAACE,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAanB,UAAU,CAACsB,IAAX,CAAgBP,IAAhB,CAAnB;AACA,QAAMK,IAAI,GAAGlB,MAAM,CAACoB,IAAP,CAAYP,IAAZ,CAAb;AACA,MAAIG,GAAG,KAAK,CAAR,IAAaC,GAAG,KAAKb,OAAO,CAACe,MAAR,EAAzB,EACEjB,MAAM,CAACkB,IAAP,CAAYF,IAAI,IAAIL,IAApB,EAA0BG,GAA1B,EAA+BC,GAA/B;AACF,SAAOC,IAAP;AACD,CAPH","sourcesContent":["const inferOwner = require('infer-owner')\nconst mkdirp = require('mkdirp')\nconst {promisify} = require('util')\nconst chownr = promisify(require('chownr'))\n\nconst platform = process.env.__TESTING_MKDIRP_INFER_OWNER_PLATFORM__\n  || process.platform\nconst isWindows = platform === 'win32'\nconst isRoot = process.getuid && process.getuid() === 0\nconst doChown = !isWindows && isRoot\n\nmodule.exports = !doChown ? (path, opts) => mkdirp(path, opts)\n  : (path, opts) => inferOwner(path).then(({uid, gid}) =>\n    mkdirp(path, opts).then(made =>\n      uid !== 0 || gid !== process.getgid()\n      ? chownr(made || path, uid, gid).then(() => made)\n      : made))\n\nmodule.exports.sync = !doChown ? (path, opts) => mkdirp.sync(path, opts)\n  : (path, opts) => {\n    const {uid, gid} = inferOwner.sync(path)\n    const made = mkdirp.sync(path)\n    if (uid !== 0 || gid !== process.getgid())\n      chownr.sync(made || path, uid, gid)\n    return made\n  }\n"]},"metadata":{},"sourceType":"script"}