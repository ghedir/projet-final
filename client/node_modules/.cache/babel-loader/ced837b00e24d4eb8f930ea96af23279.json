{"ast":null,"code":"'use strict';\n\nconst Minipass = require('minipass');\n\nconst npa = require('npm-package-arg');\n\nconst npmFetch = require('npm-registry-fetch');\n\nconst validate = require('aproba');\n\nconst eu = encodeURIComponent;\n\nconst npar = spec => {\n  spec = npa(spec);\n\n  if (!spec.registry) {\n    throw new Error('`spec` must be a registry spec');\n  }\n\n  return spec;\n};\n\nconst mapJSON = (value, [key]) => {\n  if (value === 'read') {\n    return [key, 'read-only'];\n  } else if (value === 'write') {\n    return [key, 'read-write'];\n  } else {\n    return [key, value];\n  }\n};\n\nconst cmd = module.exports = {};\n\ncmd.public = (spec, opts) => setAccess(spec, 'public', opts);\n\ncmd.restricted = (spec, opts) => setAccess(spec, 'restricted', opts);\n\nfunction setAccess(spec, access, opts = {}) {\n  return Promise.resolve().then(() => {\n    spec = npar(spec);\n    validate('OSO', [spec, access, opts]);\n    const uri = `/-/package/${eu(spec.name)}/access`;\n    return npmFetch(uri, { ...opts,\n      method: 'POST',\n      body: {\n        access\n      },\n      spec\n    }).then(() => true);\n  });\n}\n\ncmd.grant = (spec, entity, permissions, opts = {}) => {\n  return Promise.resolve().then(() => {\n    spec = npar(spec);\n    const {\n      scope,\n      team\n    } = splitEntity(entity);\n    validate('OSSSO', [spec, scope, team, permissions, opts]);\n\n    if (permissions !== 'read-write' && permissions !== 'read-only') {\n      throw new Error('`permissions` must be `read-write` or `read-only`. Got `' + permissions + '` instead');\n    }\n\n    const uri = `/-/team/${eu(scope)}/${eu(team)}/package`;\n    return npmFetch(uri, { ...opts,\n      method: 'PUT',\n      body: {\n        package: spec.name,\n        permissions\n      },\n      scope,\n      spec,\n      ignoreBody: true\n    }).then(() => true);\n  });\n};\n\ncmd.revoke = (spec, entity, opts = {}) => {\n  return Promise.resolve().then(() => {\n    spec = npar(spec);\n    const {\n      scope,\n      team\n    } = splitEntity(entity);\n    validate('OSSO', [spec, scope, team, opts]);\n    const uri = `/-/team/${eu(scope)}/${eu(team)}/package`;\n    return npmFetch(uri, { ...opts,\n      method: 'DELETE',\n      body: {\n        package: spec.name\n      },\n      scope,\n      spec,\n      ignoreBody: true\n    }).then(() => true);\n  });\n};\n\ncmd.lsPackages = (entity, opts) => {\n  return cmd.lsPackages.stream(entity, opts).collect().then(data => {\n    return data.reduce((acc, [key, val]) => {\n      if (!acc) {\n        acc = {};\n      }\n\n      acc[key] = val;\n      return acc;\n    }, null);\n  });\n};\n\ncmd.lsPackages.stream = (entity, opts = {}) => {\n  validate('SO|SZ', [entity, opts]);\n  const {\n    scope,\n    team\n  } = splitEntity(entity);\n  let uri;\n\n  if (team) {\n    uri = `/-/team/${eu(scope)}/${eu(team)}/package`;\n  } else {\n    uri = `/-/org/${eu(scope)}/package`;\n  }\n\n  const nextOpts = { ...opts,\n    query: {\n      format: 'cli'\n    },\n    mapJSON\n  };\n  const ret = new Minipass({\n    objectMode: true\n  });\n  npmFetch.json.stream(uri, '*', nextOpts).on('error', err => {\n    if (err.code === 'E404' && !team) {\n      uri = `/-/user/${eu(scope)}/package`;\n      npmFetch.json.stream(uri, '*', nextOpts).on('error', err => ret.emit('error', err)).pipe(ret);\n    } else {\n      ret.emit('error', err);\n    }\n  }).pipe(ret);\n  return ret;\n};\n\ncmd.lsCollaborators = (spec, user, opts) => {\n  return Promise.resolve().then(() => {\n    return cmd.lsCollaborators.stream(spec, user, opts).collect().then(data => {\n      return data.reduce((acc, [key, val]) => {\n        if (!acc) {\n          acc = {};\n        }\n\n        acc[key] = val;\n        return acc;\n      }, null);\n    });\n  });\n};\n\ncmd.lsCollaborators.stream = (spec, user, opts) => {\n  if (typeof user === 'object' && !opts) {\n    opts = user;\n    user = undefined;\n  } else if (!opts) {\n    opts = {};\n  }\n\n  spec = npar(spec);\n  validate('OSO|OZO', [spec, user, opts]);\n  const uri = `/-/package/${eu(spec.name)}/collaborators`;\n  return npmFetch.json.stream(uri, '*', { ...opts,\n    query: {\n      format: 'cli',\n      user: user || undefined\n    },\n    mapJSON\n  });\n};\n\ncmd.tfaRequired = (spec, opts) => setRequires2fa(spec, true, opts);\n\ncmd.tfaNotRequired = (spec, opts) => setRequires2fa(spec, false, opts);\n\nfunction setRequires2fa(spec, required, opts = {}) {\n  return Promise.resolve().then(() => {\n    spec = npar(spec);\n    validate('OBO', [spec, required, opts]);\n    const uri = `/-/package/${eu(spec.name)}/access`;\n    return npmFetch(uri, { ...opts,\n      method: 'POST',\n      body: {\n        publish_requires_tfa: required\n      },\n      spec,\n      ignoreBody: true\n    }).then(() => true);\n  });\n}\n\ncmd.edit = () => {\n  throw new Error('Not implemented yet');\n};\n\nfunction splitEntity(entity = '') {\n  const [, scope, team] = entity.match(/^@?([^:]+)(?::(.*))?$/) || [];\n  return {\n    scope,\n    team\n  };\n}","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/libnpmaccess/index.js"],"names":["Minipass","require","npa","npmFetch","validate","eu","encodeURIComponent","npar","spec","registry","Error","mapJSON","value","key","cmd","module","exports","public","opts","setAccess","restricted","access","Promise","resolve","then","uri","name","method","body","grant","entity","permissions","scope","team","splitEntity","package","ignoreBody","revoke","lsPackages","stream","collect","data","reduce","acc","val","nextOpts","query","format","ret","objectMode","json","on","err","code","emit","pipe","lsCollaborators","user","undefined","tfaRequired","setRequires2fa","tfaNotRequired","required","publish_requires_tfa","edit","match"],"mappings":"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","sourcesContent":["'use strict'\n\nconst Minipass = require('minipass')\nconst npa = require('npm-package-arg')\nconst npmFetch = require('npm-registry-fetch')\nconst validate = require('aproba')\n\nconst eu = encodeURIComponent\nconst npar = spec => {\n  spec = npa(spec)\n  if (!spec.registry) {\n    throw new Error('`spec` must be a registry spec')\n  }\n  return spec\n}\nconst mapJSON = (value, [key]) => {\n  if (value === 'read') {\n    return [key, 'read-only']\n  } else if (value === 'write') {\n    return [key, 'read-write']\n  } else {\n    return [key, value]\n  }\n}\n\nconst cmd = module.exports = {}\n\ncmd.public = (spec, opts) => setAccess(spec, 'public', opts)\ncmd.restricted = (spec, opts) => setAccess(spec, 'restricted', opts)\nfunction setAccess (spec, access, opts = {}) {\n  return Promise.resolve().then(() => {\n    spec = npar(spec)\n    validate('OSO', [spec, access, opts])\n    const uri = `/-/package/${eu(spec.name)}/access`\n    return npmFetch(uri, {\n      ...opts,\n      method: 'POST',\n      body: { access },\n      spec\n    }).then(() => true)\n  })\n}\n\ncmd.grant = (spec, entity, permissions, opts = {}) => {\n  return Promise.resolve().then(() => {\n    spec = npar(spec)\n    const { scope, team } = splitEntity(entity)\n    validate('OSSSO', [spec, scope, team, permissions, opts])\n    if (permissions !== 'read-write' && permissions !== 'read-only') {\n      throw new Error('`permissions` must be `read-write` or `read-only`. Got `' + permissions + '` instead')\n    }\n    const uri = `/-/team/${eu(scope)}/${eu(team)}/package`\n    return npmFetch(uri, {\n      ...opts,\n      method: 'PUT',\n      body: { package: spec.name, permissions },\n      scope,\n      spec,\n      ignoreBody: true\n    })\n      .then(() => true)\n  })\n}\n\ncmd.revoke = (spec, entity, opts = {}) => {\n  return Promise.resolve().then(() => {\n    spec = npar(spec)\n    const { scope, team } = splitEntity(entity)\n    validate('OSSO', [spec, scope, team, opts])\n    const uri = `/-/team/${eu(scope)}/${eu(team)}/package`\n    return npmFetch(uri, {\n      ...opts,\n      method: 'DELETE',\n      body: { package: spec.name },\n      scope,\n      spec,\n      ignoreBody: true\n    })\n      .then(() => true)\n  })\n}\n\ncmd.lsPackages = (entity, opts) => {\n  return cmd.lsPackages.stream(entity, opts)\n    .collect()\n    .then(data => {\n      return data.reduce((acc, [key, val]) => {\n        if (!acc) {\n          acc = {}\n        }\n        acc[key] = val\n        return acc\n      }, null)\n    })\n}\n\ncmd.lsPackages.stream = (entity, opts = {}) => {\n  validate('SO|SZ', [entity, opts])\n  const { scope, team } = splitEntity(entity)\n  let uri\n  if (team) {\n    uri = `/-/team/${eu(scope)}/${eu(team)}/package`\n  } else {\n    uri = `/-/org/${eu(scope)}/package`\n  }\n  const nextOpts = {\n    ...opts,\n    query: { format: 'cli' },\n    mapJSON\n  }\n  const ret = new Minipass({ objectMode: true })\n  npmFetch.json.stream(uri, '*', nextOpts)\n    .on('error', err => {\n      if (err.code === 'E404' && !team) {\n        uri = `/-/user/${eu(scope)}/package`\n        npmFetch.json.stream(uri, '*', nextOpts)\n          .on('error', err => ret.emit('error', err))\n          .pipe(ret)\n      } else {\n        ret.emit('error', err)\n      }\n    })\n    .pipe(ret)\n  return ret\n}\n\ncmd.lsCollaborators = (spec, user, opts) => {\n  return Promise.resolve().then(() => {\n    return cmd.lsCollaborators.stream(spec, user, opts)\n      .collect()\n      .then(data => {\n        return data.reduce((acc, [key, val]) => {\n          if (!acc) {\n            acc = {}\n          }\n          acc[key] = val\n          return acc\n        }, null)\n      })\n  })\n}\n\ncmd.lsCollaborators.stream = (spec, user, opts) => {\n  if (typeof user === 'object' && !opts) {\n    opts = user\n    user = undefined\n  } else if (!opts) {\n    opts = {}\n  }\n  spec = npar(spec)\n  validate('OSO|OZO', [spec, user, opts])\n  const uri = `/-/package/${eu(spec.name)}/collaborators`\n  return npmFetch.json.stream(uri, '*', {\n    ...opts,\n    query: { format: 'cli', user: user || undefined },\n    mapJSON\n  })\n}\n\ncmd.tfaRequired = (spec, opts) => setRequires2fa(spec, true, opts)\ncmd.tfaNotRequired = (spec, opts) => setRequires2fa(spec, false, opts)\nfunction setRequires2fa (spec, required, opts = {}) {\n  return Promise.resolve().then(() => {\n    spec = npar(spec)\n    validate('OBO', [spec, required, opts])\n    const uri = `/-/package/${eu(spec.name)}/access`\n    return npmFetch(uri, {\n      ...opts,\n      method: 'POST',\n      body: { publish_requires_tfa: required },\n      spec,\n      ignoreBody: true\n    }).then(() => true)\n  })\n}\n\ncmd.edit = () => {\n  throw new Error('Not implemented yet')\n}\n\nfunction splitEntity (entity = '') {\n  const [, scope, team] = entity.match(/^@?([^:]+)(?::(.*))?$/) || []\n  return { scope, team }\n}\n"]},"metadata":{},"sourceType":"script"}