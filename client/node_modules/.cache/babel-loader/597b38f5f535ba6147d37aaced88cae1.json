{"ast":null,"code":"'use strict';\n\nconst http = require('http');\n\nconst {\n  STATUS_CODES\n} = http;\n\nconst Headers = require('./headers.js');\n\nconst Body = require('./body.js');\n\nconst {\n  clone,\n  extractContentType\n} = Body;\nconst INTERNALS = Symbol('Response internals');\n\nclass Response extends Body {\n  constructor(body = null, opts = {}) {\n    super(body, opts);\n    const status = opts.status || 200;\n    const headers = new Headers(opts.headers);\n\n    if (body !== null && body !== undefined && !headers.has('Content-Type')) {\n      const contentType = extractContentType(body);\n      if (contentType) headers.append('Content-Type', contentType);\n    }\n\n    this[INTERNALS] = {\n      url: opts.url,\n      status,\n      statusText: opts.statusText || STATUS_CODES[status],\n      headers,\n      counter: opts.counter,\n      trailer: Promise.resolve(opts.trailer || new Headers())\n    };\n  }\n\n  get trailer() {\n    return this[INTERNALS].trailer;\n  }\n\n  get url() {\n    return this[INTERNALS].url || '';\n  }\n\n  get status() {\n    return this[INTERNALS].status;\n  }\n\n  get ok() {\n    return this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n  }\n\n  get redirected() {\n    return this[INTERNALS].counter > 0;\n  }\n\n  get statusText() {\n    return this[INTERNALS].statusText;\n  }\n\n  get headers() {\n    return this[INTERNALS].headers;\n  }\n\n  clone() {\n    return new Response(clone(this), {\n      url: this.url,\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n      ok: this.ok,\n      redirected: this.redirected,\n      trailer: this.trailer\n    });\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Response';\n  }\n\n}\n\nmodule.exports = Response;\nObject.defineProperties(Response.prototype, {\n  url: {\n    enumerable: true\n  },\n  status: {\n    enumerable: true\n  },\n  ok: {\n    enumerable: true\n  },\n  redirected: {\n    enumerable: true\n  },\n  statusText: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  }\n});","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/minipass-fetch/lib/response.js"],"names":["http","require","STATUS_CODES","Headers","Body","clone","extractContentType","INTERNALS","Symbol","Response","constructor","body","opts","status","headers","undefined","has","contentType","append","url","statusText","counter","trailer","Promise","resolve","ok","redirected","toStringTag","module","exports","Object","defineProperties","prototype","enumerable"],"mappings":"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","sourcesContent":["'use strict'\nconst http = require('http')\nconst { STATUS_CODES } = http\n\nconst Headers = require('./headers.js')\nconst Body = require('./body.js')\nconst { clone, extractContentType } = Body\n\nconst INTERNALS = Symbol('Response internals')\n\nclass Response extends Body {\n  constructor (body = null, opts = {}) {\n    super(body, opts)\n\n    const status = opts.status || 200\n    const headers = new Headers(opts.headers)\n\n    if (body !== null && body !== undefined && !headers.has('Content-Type')) {\n      const contentType = extractContentType(body)\n      if (contentType)\n        headers.append('Content-Type', contentType)\n    }\n\n    this[INTERNALS] = {\n      url: opts.url,\n      status,\n      statusText: opts.statusText || STATUS_CODES[status],\n      headers,\n      counter: opts.counter,\n      trailer: Promise.resolve(opts.trailer || new Headers()),\n    }\n  }\n\n  get trailer () {\n    return this[INTERNALS].trailer\n  }\n\n  get url () {\n    return this[INTERNALS].url || ''\n  }\n\n  get status () {\n    return this[INTERNALS].status\n  }\n\n  get ok ()  {\n    return this[INTERNALS].status >= 200 && this[INTERNALS].status < 300\n  }\n\n  get redirected () {\n    return this[INTERNALS].counter > 0\n  }\n\n  get statusText () {\n    return this[INTERNALS].statusText\n  }\n\n  get headers () {\n    return this[INTERNALS].headers\n  }\n\n  clone () {\n    return new Response(clone(this), {\n      url: this.url,\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n      ok: this.ok,\n      redirected: this.redirected,\n      trailer: this.trailer,\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Response'\n  }\n}\n\nmodule.exports = Response\n\nObject.defineProperties(Response.prototype, {\n  url: { enumerable: true },\n  status: { enumerable: true },\n  ok: { enumerable: true },\n  redirected: { enumerable: true },\n  statusText: { enumerable: true },\n  headers: { enumerable: true },\n  clone: { enumerable: true },\n})\n"]},"metadata":{},"sourceType":"script"}