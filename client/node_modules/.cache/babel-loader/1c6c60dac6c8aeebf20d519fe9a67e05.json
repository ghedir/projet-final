{"ast":null,"code":"const log = require('npmlog');\n\nconst npa = require('npm-package-arg');\n\nconst regFetch = require('npm-registry-fetch');\n\nconst semver = require('semver');\n\nconst otplease = require('./utils/otplease.js');\n\nconst readPackageName = require('./utils/read-package-name.js');\n\nconst BaseCommand = require('./base-command.js');\n\nclass DistTag extends BaseCommand {\n  static get description() {\n    return 'Modify package distribution tags';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get params() {\n    return ['workspace', 'workspaces'];\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'dist-tag';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get usage() {\n    return ['add <pkg>@<version> [<tag>]', 'rm <pkg> <tag>', 'ls [<pkg>]'];\n  }\n\n  async completion(opts) {\n    const argv = opts.conf.argv.remain;\n    if (argv.length === 2) return ['add', 'rm', 'ls'];\n\n    switch (argv[2]) {\n      default:\n        return [];\n    }\n  }\n\n  exec(args, cb) {\n    this.distTag(args).then(() => cb()).catch(cb);\n  }\n\n  async distTag([cmdName, pkg, tag]) {\n    const opts = this.npm.flatOptions;\n    if (['add', 'a', 'set', 's'].includes(cmdName)) return this.add(pkg, tag, opts);\n    if (['rm', 'r', 'del', 'd', 'remove'].includes(cmdName)) return this.remove(pkg, tag, opts);\n    if (['ls', 'l', 'sl', 'list'].includes(cmdName)) return this.list(pkg, opts);\n\n    if (!pkg) {\n      // when only using the pkg name the default behavior\n      // should be listing the existing tags\n      return this.list(cmdName, opts);\n    } else throw this.usageError();\n  }\n\n  execWorkspaces(args, filters, cb) {\n    this.distTagWorkspaces(args, filters).then(() => cb()).catch(cb);\n  }\n\n  async distTagWorkspaces([cmdName, pkg, tag], filters) {\n    // cmdName is some form of list\n    // pkg is one of:\n    // - unset\n    // - .\n    // - .@version\n    if (['ls', 'l', 'sl', 'list'].includes(cmdName) && (!pkg || pkg === '.' || /^\\.@/.test(pkg))) return this.listWorkspaces(filters); // pkg is unset\n    // cmdName is one of:\n    // - unset\n    // - .\n    // - .@version\n\n    if (!pkg && (!cmdName || cmdName === '.' || /^\\.@/.test(cmdName))) return this.listWorkspaces(filters); // anything else is just a regular dist-tag command\n    // so we fallback to the non-workspaces implementation\n\n    log.warn('Ignoring workspaces for specified package');\n    return this.distTag([cmdName, pkg, tag]);\n  }\n\n  async add(spec, tag, opts) {\n    spec = npa(spec || '');\n    const version = spec.rawSpec;\n    const defaultTag = tag || this.npm.config.get('tag');\n    log.verbose('dist-tag add', defaultTag, 'to', spec.name + '@' + version);\n    if (!spec.name || !version || !defaultTag) throw this.usageError();\n    const t = defaultTag.trim();\n    if (semver.validRange(t)) throw new Error('Tag name must not be a valid SemVer range: ' + t);\n    const tags = await this.fetchTags(spec, opts);\n\n    if (tags[t] === version) {\n      log.warn('dist-tag add', t, 'is already set to version', version);\n      return;\n    }\n\n    tags[t] = version;\n    const url = `/-/package/${spec.escapedName}/dist-tags/${encodeURIComponent(t)}`;\n    const reqOpts = { ...opts,\n      method: 'PUT',\n      body: JSON.stringify(version),\n      headers: {\n        'content-type': 'application/json'\n      },\n      spec\n    };\n    await otplease(reqOpts, reqOpts => regFetch(url, reqOpts));\n    this.npm.output(`+${t}: ${spec.name}@${version}`);\n  }\n\n  async remove(spec, tag, opts) {\n    spec = npa(spec || '');\n    log.verbose('dist-tag del', tag, 'from', spec.name);\n    if (!spec.name) throw this.usageError();\n    const tags = await this.fetchTags(spec, opts);\n\n    if (!tags[tag]) {\n      log.info('dist-tag del', tag, 'is not a dist-tag on', spec.name);\n      throw new Error(tag + ' is not a dist-tag on ' + spec.name);\n    }\n\n    const version = tags[tag];\n    delete tags[tag];\n    const url = `/-/package/${spec.escapedName}/dist-tags/${encodeURIComponent(tag)}`;\n    const reqOpts = { ...opts,\n      method: 'DELETE',\n      spec\n    };\n    await otplease(reqOpts, reqOpts => regFetch(url, reqOpts));\n    this.npm.output(`-${tag}: ${spec.name}@${version}`);\n  }\n\n  async list(spec, opts) {\n    if (!spec) {\n      if (this.npm.config.get('global')) throw this.usageError();\n      const pkg = await readPackageName(this.npm.prefix);\n      if (!pkg) throw this.usageError();\n      return this.list(pkg, opts);\n    }\n\n    spec = npa(spec);\n\n    try {\n      const tags = await this.fetchTags(spec, opts);\n      const msg = Object.keys(tags).map(k => `${k}: ${tags[k]}`).sort().join('\\n');\n      this.npm.output(msg);\n      return tags;\n    } catch (err) {\n      log.error('dist-tag ls', \"Couldn't get dist-tag data for\", spec);\n      throw err;\n    }\n  }\n\n  async listWorkspaces(filters) {\n    await this.setWorkspaces(filters);\n\n    for (const name of this.workspaceNames) {\n      try {\n        this.npm.output(`${name}:`);\n        await this.list(npa(name), this.npm.flatOptions);\n      } catch (err) {\n        // set the exitCode directly, but ignore the error\n        // since it will have already been logged by this.list()\n        process.exitCode = 1;\n      }\n    }\n  }\n\n  async fetchTags(spec, opts) {\n    const data = await regFetch.json(`/-/package/${spec.escapedName}/dist-tags`, { ...opts,\n      'prefer-online': true,\n      spec\n    });\n    if (data && typeof data === 'object') delete data._etag;\n    if (!data || !Object.keys(data).length) throw new Error('No dist-tags found for ' + spec.name);\n    return data;\n  }\n\n}\n\nmodule.exports = DistTag;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/dist-tag.js"],"names":["log","require","npa","regFetch","semver","otplease","readPackageName","BaseCommand","DistTag","description","params","name","usage","completion","opts","argv","conf","remain","length","exec","args","cb","distTag","then","catch","cmdName","pkg","tag","npm","flatOptions","includes","add","remove","list","usageError","execWorkspaces","filters","distTagWorkspaces","test","listWorkspaces","warn","spec","version","rawSpec","defaultTag","config","get","verbose","t","trim","validRange","Error","tags","fetchTags","url","escapedName","encodeURIComponent","reqOpts","method","body","JSON","stringify","headers","output","info","prefix","msg","Object","keys","map","k","sort","join","err","error","setWorkspaces","workspaceNames","process","exitCode","data","json","_etag","module","exports"],"mappings":"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","sourcesContent":["const log = require('npmlog')\nconst npa = require('npm-package-arg')\nconst regFetch = require('npm-registry-fetch')\nconst semver = require('semver')\n\nconst otplease = require('./utils/otplease.js')\nconst readPackageName = require('./utils/read-package-name.js')\nconst BaseCommand = require('./base-command.js')\n\nclass DistTag extends BaseCommand {\n  static get description () {\n    return 'Modify package distribution tags'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['workspace', 'workspaces']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'dist-tag'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return [\n      'add <pkg>@<version> [<tag>]',\n      'rm <pkg> <tag>',\n      'ls [<pkg>]',\n    ]\n  }\n\n  async completion (opts) {\n    const argv = opts.conf.argv.remain\n    if (argv.length === 2)\n      return ['add', 'rm', 'ls']\n\n    switch (argv[2]) {\n      default:\n        return []\n    }\n  }\n\n  exec (args, cb) {\n    this.distTag(args).then(() => cb()).catch(cb)\n  }\n\n  async distTag ([cmdName, pkg, tag]) {\n    const opts = this.npm.flatOptions\n\n    if (['add', 'a', 'set', 's'].includes(cmdName))\n      return this.add(pkg, tag, opts)\n\n    if (['rm', 'r', 'del', 'd', 'remove'].includes(cmdName))\n      return this.remove(pkg, tag, opts)\n\n    if (['ls', 'l', 'sl', 'list'].includes(cmdName))\n      return this.list(pkg, opts)\n\n    if (!pkg) {\n      // when only using the pkg name the default behavior\n      // should be listing the existing tags\n      return this.list(cmdName, opts)\n    } else\n      throw this.usageError()\n  }\n\n  execWorkspaces (args, filters, cb) {\n    this.distTagWorkspaces(args, filters).then(() => cb()).catch(cb)\n  }\n\n  async distTagWorkspaces ([cmdName, pkg, tag], filters) {\n    // cmdName is some form of list\n    // pkg is one of:\n    // - unset\n    // - .\n    // - .@version\n    if (['ls', 'l', 'sl', 'list'].includes(cmdName) && (!pkg || pkg === '.' || /^\\.@/.test(pkg)))\n      return this.listWorkspaces(filters)\n\n    // pkg is unset\n    // cmdName is one of:\n    // - unset\n    // - .\n    // - .@version\n    if (!pkg && (!cmdName || cmdName === '.' || /^\\.@/.test(cmdName)))\n      return this.listWorkspaces(filters)\n\n    // anything else is just a regular dist-tag command\n    // so we fallback to the non-workspaces implementation\n    log.warn('Ignoring workspaces for specified package')\n    return this.distTag([cmdName, pkg, tag])\n  }\n\n  async add (spec, tag, opts) {\n    spec = npa(spec || '')\n    const version = spec.rawSpec\n    const defaultTag = tag || this.npm.config.get('tag')\n\n    log.verbose('dist-tag add', defaultTag, 'to', spec.name + '@' + version)\n\n    if (!spec.name || !version || !defaultTag)\n      throw this.usageError()\n\n    const t = defaultTag.trim()\n\n    if (semver.validRange(t))\n      throw new Error('Tag name must not be a valid SemVer range: ' + t)\n\n    const tags = await this.fetchTags(spec, opts)\n    if (tags[t] === version) {\n      log.warn('dist-tag add', t, 'is already set to version', version)\n      return\n    }\n    tags[t] = version\n    const url =\n      `/-/package/${spec.escapedName}/dist-tags/${encodeURIComponent(t)}`\n    const reqOpts = {\n      ...opts,\n      method: 'PUT',\n      body: JSON.stringify(version),\n      headers: {\n        'content-type': 'application/json',\n      },\n      spec,\n    }\n    await otplease(reqOpts, reqOpts => regFetch(url, reqOpts))\n    this.npm.output(`+${t}: ${spec.name}@${version}`)\n  }\n\n  async remove (spec, tag, opts) {\n    spec = npa(spec || '')\n    log.verbose('dist-tag del', tag, 'from', spec.name)\n\n    if (!spec.name)\n      throw this.usageError()\n\n    const tags = await this.fetchTags(spec, opts)\n    if (!tags[tag]) {\n      log.info('dist-tag del', tag, 'is not a dist-tag on', spec.name)\n      throw new Error(tag + ' is not a dist-tag on ' + spec.name)\n    }\n    const version = tags[tag]\n    delete tags[tag]\n    const url =\n      `/-/package/${spec.escapedName}/dist-tags/${encodeURIComponent(tag)}`\n    const reqOpts = {\n      ...opts,\n      method: 'DELETE',\n      spec,\n    }\n    await otplease(reqOpts, reqOpts => regFetch(url, reqOpts))\n    this.npm.output(`-${tag}: ${spec.name}@${version}`)\n  }\n\n  async list (spec, opts) {\n    if (!spec) {\n      if (this.npm.config.get('global'))\n        throw this.usageError()\n      const pkg = await readPackageName(this.npm.prefix)\n      if (!pkg)\n        throw this.usageError()\n\n      return this.list(pkg, opts)\n    }\n    spec = npa(spec)\n\n    try {\n      const tags = await this.fetchTags(spec, opts)\n      const msg =\n        Object.keys(tags).map(k => `${k}: ${tags[k]}`).sort().join('\\n')\n      this.npm.output(msg)\n      return tags\n    } catch (err) {\n      log.error('dist-tag ls', \"Couldn't get dist-tag data for\", spec)\n      throw err\n    }\n  }\n\n  async listWorkspaces (filters) {\n    await this.setWorkspaces(filters)\n\n    for (const name of this.workspaceNames) {\n      try {\n        this.npm.output(`${name}:`)\n        await this.list(npa(name), this.npm.flatOptions)\n      } catch (err) {\n        // set the exitCode directly, but ignore the error\n        // since it will have already been logged by this.list()\n        process.exitCode = 1\n      }\n    }\n  }\n\n  async fetchTags (spec, opts) {\n    const data = await regFetch.json(\n      `/-/package/${spec.escapedName}/dist-tags`,\n      { ...opts, 'prefer-online': true, spec }\n    )\n    if (data && typeof data === 'object')\n      delete data._etag\n    if (!data || !Object.keys(data).length)\n      throw new Error('No dist-tags found for ' + spec.name)\n\n    return data\n  }\n}\nmodule.exports = DistTag\n"]},"metadata":{},"sourceType":"script"}