{"ast":null,"code":"const chalk = require('chalk');\n\nconst readPackageJson = require('read-package-json-fast');\n\nconst nocolor = {\n  dim: s => s,\n  green: s => s\n};\n\nconst getLocationMsg = async ({\n  color,\n  path\n}) => {\n  const colorize = color ? chalk : nocolor;\n  const {\n    _id\n  } = await readPackageJson(`${path}/package.json`).catch(() => ({}));\n  const workspaceMsg = _id ? ` in workspace ${colorize.green(_id)}` : ` in a ${colorize.green('new')} workspace`;\n  const locationMsg = ` at location:\\n${colorize.dim(path)}`;\n  return `${workspaceMsg}${locationMsg}`;\n};\n\nmodule.exports = getLocationMsg;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/exec/get-workspace-location-msg.js"],"names":["chalk","require","readPackageJson","nocolor","dim","s","green","getLocationMsg","color","path","colorize","_id","catch","workspaceMsg","locationMsg","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,wBAAD,CAA/B;;AAEA,MAAME,OAAO,GAAG;AACdC,EAAAA,GAAG,EAAEC,CAAC,IAAIA,CADI;AAEdC,EAAAA,KAAK,EAAED,CAAC,IAAIA;AAFE,CAAhB;;AAKA,MAAME,cAAc,GAAG,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA2B;AAChD,QAAMC,QAAQ,GAAGF,KAAK,GAAGR,KAAH,GAAWG,OAAjC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MACJ,MAAMT,eAAe,CAAE,GAAEO,IAAK,eAAT,CAAf,CACHG,KADG,CACG,OAAO,EAAP,CADH,CADR;AAIA,QAAMC,YAAY,GAAGF,GAAG,GACnB,iBAAgBD,QAAQ,CAACJ,KAAT,CAAeK,GAAf,CAAoB,EADjB,GAEnB,SAAQD,QAAQ,CAACJ,KAAT,CAAe,KAAf,CAAsB,YAFnC;AAGA,QAAMQ,WAAW,GAAI,kBACnBJ,QAAQ,CAACN,GAAT,CAAaK,IAAb,CACD,EAFD;AAIA,SAAQ,GAAEI,YAAa,GAAEC,WAAY,EAArC;AACD,CAdD;;AAgBAC,MAAM,CAACC,OAAP,GAAiBT,cAAjB","sourcesContent":["const chalk = require('chalk')\nconst readPackageJson = require('read-package-json-fast')\n\nconst nocolor = {\n  dim: s => s,\n  green: s => s,\n}\n\nconst getLocationMsg = async ({ color, path }) => {\n  const colorize = color ? chalk : nocolor\n  const { _id } =\n    await readPackageJson(`${path}/package.json`)\n      .catch(() => ({}))\n\n  const workspaceMsg = _id\n    ? ` in workspace ${colorize.green(_id)}`\n    : ` in a ${colorize.green('new')} workspace`\n  const locationMsg = ` at location:\\n${\n    colorize.dim(path)\n  }`\n\n  return `${workspaceMsg}${locationMsg}`\n}\n\nmodule.exports = getLocationMsg\n"]},"metadata":{},"sourceType":"script"}