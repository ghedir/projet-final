{"ast":null,"code":"const updateScripts = ({\n  content,\n  originalContent = {}\n}) => {\n  const newScripts = content.scripts;\n  if (!newScripts) return originalContent; // validate scripts content being appended\n\n  const hasInvalidScripts = () => Object.entries(newScripts).some(([key, value]) => typeof key !== 'string' || typeof value !== 'string');\n\n  if (hasInvalidScripts()) {\n    throw Object.assign(new TypeError('package.json scripts should be a key-value pair of strings.'), {\n      code: 'ESCRIPTSINVALID'\n    });\n  }\n\n  return { ...originalContent,\n    scripts: { ...newScripts\n    }\n  };\n};\n\nmodule.exports = updateScripts;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/@npmcli/package-json/lib/update-scripts.js"],"names":["updateScripts","content","originalContent","newScripts","scripts","hasInvalidScripts","Object","entries","some","key","value","assign","TypeError","code","module","exports"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,eAAe,GAAG;AAA7B,CAAD,KAAuC;AAC3D,QAAMC,UAAU,GAAGF,OAAO,CAACG,OAA3B;AAEA,MAAI,CAACD,UAAL,EACE,OAAOD,eAAP,CAJyD,CAM3D;;AACA,QAAMG,iBAAiB,GAAG,MACxBC,MAAM,CAACC,OAAP,CAAeJ,UAAf,EACGK,IADH,CACQ,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACJ,OAAOD,GAAP,KAAe,QAAf,IAA2B,OAAOC,KAAP,KAAiB,QAFhD,CADF;;AAIA,MAAIL,iBAAiB,EAArB,EAAyB;AACvB,UAAMC,MAAM,CAACK,MAAP,CACJ,IAAIC,SAAJ,CACE,6DADF,CADI,EAGJ;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAHI,CAAN;AAKD;;AAED,SAAO,EACL,GAAGX,eADE;AAELE,IAAAA,OAAO,EAAE,EACP,GAAGD;AADI;AAFJ,GAAP;AAMD,CAzBD;;AA2BAW,MAAM,CAACC,OAAP,GAAiBf,aAAjB","sourcesContent":["const updateScripts = ({ content, originalContent = {} }) => {\n  const newScripts = content.scripts\n\n  if (!newScripts)\n    return originalContent\n\n  // validate scripts content being appended\n  const hasInvalidScripts = () =>\n    Object.entries(newScripts)\n      .some(([key, value]) =>\n        typeof key !== 'string' || typeof value !== 'string')\n  if (hasInvalidScripts()) {\n    throw Object.assign(\n      new TypeError(\n        'package.json scripts should be a key-value pair of strings.'),\n      { code: 'ESCRIPTSINVALID' }\n    )\n  }\n\n  return {\n    ...originalContent,\n    scripts: {\n      ...newScripts,\n    },\n  }\n}\n\nmodule.exports = updateScripts\n"]},"metadata":{},"sourceType":"script"}