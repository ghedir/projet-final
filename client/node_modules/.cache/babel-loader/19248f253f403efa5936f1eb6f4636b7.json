{"ast":null,"code":"const crypto = require('crypto');\n\nconst {\n  resolve\n} = require('path');\n\nconst cacheInstallDir = ({\n  npxCache,\n  packages\n}) => {\n  if (!npxCache) throw new Error('Must provide a valid npxCache path'); // only packages not found in ${prefix}/node_modules\n\n  return resolve(npxCache, getHash(packages));\n};\n\nconst getHash = packages => crypto.createHash('sha512').update(packages.sort((a, b) => a.localeCompare(b, 'en')).join('\\n')).digest('hex').slice(0, 16);\n\nmodule.exports = cacheInstallDir;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/libnpmexec/lib/cache-install-dir.js"],"names":["crypto","require","resolve","cacheInstallDir","npxCache","packages","Error","getHash","createHash","update","sort","a","b","localeCompare","join","digest","slice","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,OAAO,CAAC,MAAD,CAA3B;;AAEA,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAClD,MAAI,CAACD,QAAL,EACE,MAAM,IAAIE,KAAJ,CAAU,oCAAV,CAAN,CAFgD,CAIlD;;AACA,SAAOJ,OAAO,CAACE,QAAD,EAAWG,OAAO,CAACF,QAAD,CAAlB,CAAd;AACD,CAND;;AAQA,MAAME,OAAO,GAAIF,QAAD,IACdL,MAAM,CAACQ,UAAP,CAAkB,QAAlB,EACGC,MADH,CACUJ,QAAQ,CAACK,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,EAAmB,IAAnB,CAAxB,EAAkDE,IAAlD,CAAuD,IAAvD,CADV,EAEGC,MAFH,CAEU,KAFV,EAGGC,KAHH,CAGS,CAHT,EAGY,EAHZ,CADF;;AAMAC,MAAM,CAACC,OAAP,GAAiBf,eAAjB","sourcesContent":["const crypto = require('crypto')\n\nconst { resolve } = require('path')\n\nconst cacheInstallDir = ({ npxCache, packages }) => {\n  if (!npxCache)\n    throw new Error('Must provide a valid npxCache path')\n\n  // only packages not found in ${prefix}/node_modules\n  return resolve(npxCache, getHash(packages))\n}\n\nconst getHash = (packages) =>\n  crypto.createHash('sha512')\n    .update(packages.sort((a, b) => a.localeCompare(b, 'en')).join('\\n'))\n    .digest('hex')\n    .slice(0, 16)\n\nmodule.exports = cacheInstallDir\n"]},"metadata":{},"sourceType":"script"}