{"ast":null,"code":"//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of \n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n// Modified to work in node for this project (and some refactoring)\n//---------------------------------------------------------------------\nvar QR8bitByte = require('./QR8bitByte');\n\nvar QRUtil = require('./QRUtil');\n\nvar QRPolynomial = require('./QRPolynomial');\n\nvar QRRSBlock = require('./QRRSBlock');\n\nvar QRBitBuffer = require('./QRBitBuffer');\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n}\n\nQRCode.prototype = {\n  addData: function (data) {\n    var newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  },\n  isDark: function (row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + \",\" + col);\n    }\n\n    return this.modules[row][col];\n  },\n  getModuleCount: function () {\n    return this.moduleCount;\n  },\n  make: function () {\n    // Calculate automatically typeNumber if provided is < 1\n    if (this.typeNumber < 1) {\n      var typeNumber = 1;\n\n      for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n        var buffer = new QRBitBuffer();\n        var totalDataCount = 0;\n\n        for (var i = 0; i < rsBlocks.length; i++) {\n          totalDataCount += rsBlocks[i].dataCount;\n        }\n\n        for (var x = 0; x < this.dataList.length; x++) {\n          var data = this.dataList[x];\n          buffer.put(data.mode, 4);\n          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n          data.write(buffer);\n        }\n\n        if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n      }\n\n      this.typeNumber = typeNumber;\n    }\n\n    this.makeImpl(false, this.getBestMaskPattern());\n  },\n  makeImpl: function (test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n\n    for (var row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n\n      for (var col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null; //(col + row) % 3;\n      }\n    }\n\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n\n    if (this.dataCache === null) {\n      this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n\n    this.mapData(this.dataCache, maskPattern);\n  },\n  setupPositionProbePattern: function (row, col) {\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n        if (0 <= r && r <= 6 && (c === 0 || c === 6) || 0 <= c && c <= 6 && (r === 0 || r === 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n          this.modules[row + r][col + c] = true;\n        } else {\n          this.modules[row + r][col + c] = false;\n        }\n      }\n    }\n  },\n  getBestMaskPattern: function () {\n    var minLostPoint = 0;\n    var pattern = 0;\n\n    for (var i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      var lostPoint = QRUtil.getLostPoint(this);\n\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n\n    return pattern;\n  },\n  createMovieClip: function (target_mc, instance_name, depth) {\n    var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    var cs = 1;\n    this.make();\n\n    for (var row = 0; row < this.modules.length; row++) {\n      var y = row * cs;\n\n      for (var col = 0; col < this.modules[row].length; col++) {\n        var x = col * cs;\n        var dark = this.modules[row][col];\n\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n\n    return qr_mc;\n  },\n  setupTimingPattern: function () {\n    for (var r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] !== null) {\n        continue;\n      }\n\n      this.modules[r][6] = r % 2 === 0;\n    }\n\n    for (var c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] !== null) {\n        continue;\n      }\n\n      this.modules[6][c] = c % 2 === 0;\n    }\n  },\n  setupPositionAdjustPattern: function () {\n    var pos = QRUtil.getPatternPosition(this.typeNumber);\n\n    for (var i = 0; i < pos.length; i++) {\n      for (var j = 0; j < pos.length; j++) {\n        var row = pos[i];\n        var col = pos[j];\n\n        if (this.modules[row][col] !== null) {\n          continue;\n        }\n\n        for (var r = -2; r <= 2; r++) {\n          for (var c = -2; c <= 2; c++) {\n            if (Math.abs(r) === 2 || Math.abs(c) === 2 || r === 0 && c === 0) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  },\n  setupTypeNumber: function (test) {\n    var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n    var mod;\n\n    for (var i = 0; i < 18; i++) {\n      mod = !test && (bits >> i & 1) === 1;\n      this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n    }\n\n    for (var x = 0; x < 18; x++) {\n      mod = !test && (bits >> x & 1) === 1;\n      this.modules[x % 3 + this.moduleCount - 8 - 3][Math.floor(x / 3)] = mod;\n    }\n  },\n  setupTypeInfo: function (test, maskPattern) {\n    var data = this.errorCorrectLevel << 3 | maskPattern;\n    var bits = QRUtil.getBCHTypeInfo(data);\n    var mod; // vertical\t\t\n\n    for (var v = 0; v < 15; v++) {\n      mod = !test && (bits >> v & 1) === 1;\n\n      if (v < 6) {\n        this.modules[v][8] = mod;\n      } else if (v < 8) {\n        this.modules[v + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + v][8] = mod;\n      }\n    } // horizontal\n\n\n    for (var h = 0; h < 15; h++) {\n      mod = !test && (bits >> h & 1) === 1;\n\n      if (h < 8) {\n        this.modules[8][this.moduleCount - h - 1] = mod;\n      } else if (h < 9) {\n        this.modules[8][15 - h - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - h - 1] = mod;\n      }\n    } // fixed module\n\n\n    this.modules[this.moduleCount - 8][8] = !test;\n  },\n  mapData: function (data, maskPattern) {\n    var inc = -1;\n    var row = this.moduleCount - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n\n    for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col === 6) col--;\n\n      while (true) {\n        for (var c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] === null) {\n            var dark = false;\n\n            if (byteIndex < data.length) {\n              dark = (data[byteIndex] >>> bitIndex & 1) === 1;\n            }\n\n            var mask = QRUtil.getMask(maskPattern, row, col - c);\n\n            if (mask) {\n              dark = !dark;\n            }\n\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n\n        row += inc;\n\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n};\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new QRBitBuffer();\n\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  } // calc num max data.\n\n\n  var totalDataCount = 0;\n\n  for (var x = 0; x < rsBlocks.length; x++) {\n    totalDataCount += rsBlocks[x].dataCount;\n  }\n\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n  } // end code\n\n\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  } // padding\n\n\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(false);\n  } // padding\n\n\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD0, 8);\n\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD1, 8);\n  }\n\n  return QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n\n    offset += dcCount;\n    var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n\n    for (var x = 0; x < ecdata[r].length; x++) {\n      var modIndex = x + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][x] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n\n  var totalCodeCount = 0;\n\n  for (var y = 0; y < rsBlocks.length; y++) {\n    totalCodeCount += rsBlocks[y].totalCount;\n  }\n\n  var data = new Array(totalCodeCount);\n  var index = 0;\n\n  for (var z = 0; z < maxDcCount; z++) {\n    for (var s = 0; s < rsBlocks.length; s++) {\n      if (z < dcdata[s].length) {\n        data[index++] = dcdata[s][z];\n      }\n    }\n  }\n\n  for (var xx = 0; xx < maxEcCount; xx++) {\n    for (var t = 0; t < rsBlocks.length; t++) {\n      if (xx < ecdata[t].length) {\n        data[index++] = ecdata[t][xx];\n      }\n    }\n  }\n\n  return data;\n};\n\nmodule.exports = QRCode;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/qrcode-terminal/vendor/QRCode/index.js"],"names":["QR8bitByte","require","QRUtil","QRPolynomial","QRRSBlock","QRBitBuffer","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","prototype","addData","data","newData","push","isDark","row","col","Error","getModuleCount","make","rsBlocks","getRSBlocks","buffer","totalDataCount","i","length","dataCount","x","put","mode","getLength","getLengthInBits","write","makeImpl","getBestMaskPattern","test","maskPattern","Array","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","Math","abs","bits","getBCHTypeNumber","mod","floor","getBCHTypeInfo","v","h","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","get","totalCodeCount","index","z","s","xx","t","module","exports"],"mappings":"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","sourcesContent":["//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of \n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n// Modified to work in node for this project (and some refactoring)\n//---------------------------------------------------------------------\n\nvar QR8bitByte = require('./QR8bitByte');\nvar QRUtil = require('./QRUtil');\nvar QRPolynomial = require('./QRPolynomial');\nvar QRRSBlock = require('./QRRSBlock');\nvar QRBitBuffer = require('./QRBitBuffer');\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = [];\n}\n\nQRCode.prototype = {\n\t\n\taddData : function(data) {\n\t\tvar newData = new QR8bitByte(data);\n\t\tthis.dataList.push(newData);\n\t\tthis.dataCache = null;\n\t},\n\t\n\tisDark : function(row, col) {\n\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\t\tthrow new Error(row + \",\" + col);\n\t\t}\n\t\treturn this.modules[row][col];\n\t},\n\n\tgetModuleCount : function() {\n\t\treturn this.moduleCount;\n\t},\n\t\n\tmake : function() {\n\t\t// Calculate automatically typeNumber if provided is < 1\n\t\tif (this.typeNumber < 1 ){\n\t\t\tvar typeNumber = 1;\n\t\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\t\tvar buffer = new QRBitBuffer();\n\t\t\t\tvar totalDataCount = 0;\n\t\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t\t}\n\n\t\t\t\tfor (var x = 0; x < this.dataList.length; x++) {\n\t\t\t\t\tvar data = this.dataList[x];\n\t\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\t\tdata.write(buffer);\n\t\t\t\t}\n\t\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.typeNumber = typeNumber;\n\t\t}\n\t\tthis.makeImpl(false, this.getBestMaskPattern() );\n\t},\n\t\n\tmakeImpl : function(test, maskPattern) {\n\t\t\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\n\t\tthis.modules = new Array(this.moduleCount);\n\t\t\n\t\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\t\n\t\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\t\n\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t\t}\n\t\t}\n\t\n\t\tthis.setupPositionProbePattern(0, 0);\n\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\t\tthis.setupPositionAdjustPattern();\n\t\tthis.setupTimingPattern();\n\t\tthis.setupTypeInfo(test, maskPattern);\n\t\t\n\t\tif (this.typeNumber >= 7) {\n\t\t\tthis.setupTypeNumber(test);\n\t\t}\n\t\n\t\tif (this.dataCache === null) {\n\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t\t}\n\t\n\t\tthis.mapData(this.dataCache, maskPattern);\n\t},\n\n\tsetupPositionProbePattern : function(row, col)  {\n\t\t\n\t\tfor (var r = -1; r <= 7; r++) {\n\t\t\t\n\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\t\n\t\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\t\n\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\t\n\t\t\t\tif ( (0 <= r && r <= 6 && (c === 0 || c === 6) ) || \n                     (0 <= c && c <= 6 && (r === 0 || r === 6) ) || \n                     (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\t\t\n\t},\n\t\n\tgetBestMaskPattern : function() {\n\t\n\t\tvar minLostPoint = 0;\n\t\tvar pattern = 0;\n\t\n\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\n\t\t\tthis.makeImpl(true, i);\n\t\n\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\n\t\n\t\t\tif (i === 0 || minLostPoint >  lostPoint) {\n\t\t\t\tminLostPoint = lostPoint;\n\t\t\t\tpattern = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn pattern;\n\t},\n\t\n\tcreateMovieClip : function(target_mc, instance_name, depth) {\n\t\n\t\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\t\tvar cs = 1;\n\t\n\t\tthis.make();\n\n\t\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\t\n\t\t\tvar y = row * cs;\n\t\t\t\n\t\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\t\n\t\t\t\tvar x = col * cs;\n\t\t\t\tvar dark = this.modules[row][col];\n\t\t\t\n\t\t\t\tif (dark) {\n\t\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\t\tqr_mc.endFill();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn qr_mc;\n\t},\n\n\tsetupTimingPattern : function() {\n\t\t\n\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\t\tif (this.modules[r][6] !== null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[r][6] = (r % 2 === 0);\n\t\t}\n\t\n\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\t\tif (this.modules[6][c] !== null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[6][c] = (c % 2 === 0);\n\t\t}\n\t},\n\t\n\tsetupPositionAdjustPattern : function() {\n\t\n\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\n\t\t\n\t\tfor (var i = 0; i < pos.length; i++) {\n\t\t\n\t\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\t\n\t\t\t\tvar row = pos[i];\n\t\t\t\tvar col = pos[j];\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col] !== null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\t\n\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\t\n\t\t\t\t\t\tif (Math.abs(r) === 2 || \n                            Math.abs(c) === 2 ||\n                            (r === 0 && c === 0) ) {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\tsetupTypeNumber : function(test) {\n\t\n\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n        var mod;\n\t\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tmod = (!test && ( (bits >> i) & 1) === 1);\n\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t\t}\n\t\n\t\tfor (var x = 0; x < 18; x++) {\n\t\t\tmod = (!test && ( (bits >> x) & 1) === 1);\n\t\t\tthis.modules[x % 3 + this.moduleCount - 8 - 3][Math.floor(x / 3)] = mod;\n\t\t}\n\t},\n\t\n\tsetupTypeInfo : function(test, maskPattern) {\n\t\n\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\t\tvar bits = QRUtil.getBCHTypeInfo(data);\n        var mod;\n\t\n\t\t// vertical\t\t\n\t\tfor (var v = 0; v < 15; v++) {\n\t\n\t\t\tmod = (!test && ( (bits >> v) & 1) === 1);\n\t\n\t\t\tif (v < 6) {\n\t\t\t\tthis.modules[v][8] = mod;\n\t\t\t} else if (v < 8) {\n\t\t\t\tthis.modules[v + 1][8] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[this.moduleCount - 15 + v][8] = mod;\n\t\t\t}\n\t\t}\n\t\n\t\t// horizontal\n\t\tfor (var h = 0; h < 15; h++) {\n\t\n\t\t\tmod = (!test && ( (bits >> h) & 1) === 1);\n\t\t\t\n\t\t\tif (h < 8) {\n\t\t\t\tthis.modules[8][this.moduleCount - h - 1] = mod;\n\t\t\t} else if (h < 9) {\n\t\t\t\tthis.modules[8][15 - h - 1 + 1] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[8][15 - h - 1] = mod;\n\t\t\t}\n\t\t}\n\t\n\t\t// fixed module\n\t\tthis.modules[this.moduleCount - 8][8] = (!test);\n\t\n\t},\n\t\n\tmapData : function(data, maskPattern) {\n\t\t\n\t\tvar inc = -1;\n\t\tvar row = this.moduleCount - 1;\n\t\tvar bitIndex = 7;\n\t\tvar byteIndex = 0;\n\t\t\n\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\t\n\t\t\tif (col === 6) col--;\n\t\n\t\t\twhile (true) {\n\t\n\t\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\t\n\t\t\t\t\tif (this.modules[row][col - c] === null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar dark = false;\n\t\n\t\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) === 1);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\n\t\n\t\t\t\t\t\tif (mask) {\n\t\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\t\tbitIndex--;\n\t\n\t\t\t\t\t\tif (bitIndex === -1) {\n\t\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\trow += inc;\n\t\n\t\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\t\trow -= inc;\n\t\t\t\t\tinc = -inc;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new QRBitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var x = 0; x < rsBlocks.length; x++) {\n\t\ttotalDataCount += rsBlocks[x].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\" + \n            buffer.getLengthInBits() + \n            \">\" +  \n            totalDataCount * 8 + \n            \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 !== 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD1, 8);\n\t}\n\n\treturn QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new Array(rsBlocks.length);\n\tvar ecdata = new Array(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new Array(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\tfor (var x = 0; x < ecdata[r].length; x++) {\n            var modIndex = x + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][x] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var y = 0; y < rsBlocks.length; y++) {\n\t\ttotalCodeCount += rsBlocks[y].totalCount;\n\t}\n\n\tvar data = new Array(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var z = 0; z < maxDcCount; z++) {\n\t\tfor (var s = 0; s < rsBlocks.length; s++) {\n\t\t\tif (z < dcdata[s].length) {\n\t\t\t\tdata[index++] = dcdata[s][z];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var xx = 0; xx < maxEcCount; xx++) {\n\t\tfor (var t = 0; t < rsBlocks.length; t++) {\n\t\t\tif (xx < ecdata[t].length) {\n\t\t\t\tdata[index++] = ecdata[t][xx];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n\n};\n\nmodule.exports = QRCode;\n"]},"metadata":{},"sourceType":"script"}