{"ast":null,"code":"const colors = require('../colors.js');\n\nconst calculate = (data, {\n  color\n}) => {\n  const c = colors(color);\n  const output = [];\n  const {\n    metadata: {\n      vulnerabilities\n    }\n  } = data;\n  const vulnCount = vulnerabilities.total;\n  let someFixable = false;\n  let someForceFixable = false;\n  let forceFixSemVerMajor = false;\n  let someUnfixable = false;\n\n  if (vulnCount === 0) {\n    output.push(`found ${c.green('0')} vulnerabilities`);\n  } else {\n    for (const [name, vuln] of Object.entries(data.vulnerabilities)) {\n      const {\n        fixAvailable\n      } = vuln;\n      someFixable = someFixable || fixAvailable === true;\n      someUnfixable = someUnfixable || fixAvailable === false;\n\n      if (typeof fixAvailable === 'object') {\n        someForceFixable = true;\n        forceFixSemVerMajor = forceFixSemVerMajor || fixAvailable.isSemVerMajor;\n      }\n    }\n\n    const total = vulnerabilities.total;\n    const sevs = Object.entries(vulnerabilities).filter(([s, count]) => {\n      return (s === 'low' || s === 'moderate' || s === 'high' || s === 'critical') && count > 0;\n    });\n\n    if (sevs.length > 1) {\n      const severities = sevs.map(([s, count]) => {\n        return `${count} ${c.severity(s)}`;\n      }).join(', ');\n      output.push(`${c.red(total)} vulnerabilities (${severities})`);\n    } else {\n      const [sev, count] = sevs[0];\n      output.push(`${count} ${c.severity(sev)} severity vulnerabilit${count === 1 ? 'y' : 'ies'}`);\n    } // XXX use a different footer line if some aren't fixable easily.\n    // just 'run `npm audit` for details' maybe?\n\n\n    if (someFixable) {\n      output.push('', 'To address ' + (someForceFixable || someUnfixable ? 'issues that do not require attention' : 'all issues') + ', run:\\n  npm audit fix');\n    }\n\n    if (someForceFixable) {\n      output.push('', 'To address all issues' + (someUnfixable ? ' possible' : '') + (forceFixSemVerMajor ? ' (including breaking changes)' : '') + ', run:\\n  npm audit fix --force');\n    }\n\n    if (someUnfixable) {\n      output.push('', 'Some issues need review, and may require choosing', 'a different dependency.');\n    }\n  }\n\n  const summary = output.join('\\n');\n  return {\n    summary,\n    report: vulnCount > 0 ? `${summary}\\n\\nRun \\`npm audit\\` for details.` : summary\n  };\n};\n\nmodule.exports = Object.assign((data, opt) => calculate(data, opt).report, {\n  summary: (data, opt) => calculate(data, opt).summary\n});","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/npm-audit-report/lib/reporters/install.js"],"names":["colors","require","calculate","data","color","c","output","metadata","vulnerabilities","vulnCount","total","someFixable","someForceFixable","forceFixSemVerMajor","someUnfixable","push","green","name","vuln","Object","entries","fixAvailable","isSemVerMajor","sevs","filter","s","count","length","severities","map","severity","join","red","sev","summary","report","module","exports","assign","opt"],"mappings":"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","sourcesContent":["const colors = require('../colors.js')\n\nconst calculate = (data, { color }) => {\n  const c = colors(color)\n  const output = []\n  const { metadata: { vulnerabilities }} = data\n  const vulnCount = vulnerabilities.total\n\n  let someFixable = false\n  let someForceFixable = false\n  let forceFixSemVerMajor = false\n  let someUnfixable = false\n\n  if (vulnCount === 0) {\n    output.push(`found ${c.green('0')} vulnerabilities`)\n  } else {\n    for (const [name, vuln] of Object.entries(data.vulnerabilities)) {\n      const { fixAvailable } = vuln\n      someFixable = someFixable || fixAvailable === true\n      someUnfixable = someUnfixable || fixAvailable === false\n      if (typeof fixAvailable === 'object') {\n        someForceFixable = true\n        forceFixSemVerMajor = forceFixSemVerMajor || fixAvailable.isSemVerMajor\n      }\n    }\n    const total = vulnerabilities.total\n    const sevs = Object.entries(vulnerabilities).filter(([s, count]) => {\n      return (s === 'low' || s === 'moderate' || s === 'high' || s === 'critical') &&\n        count > 0\n    })\n\n    if (sevs.length > 1) {\n      const severities = sevs.map(([s, count]) => {\n        return `${count} ${c.severity(s)}`\n      }).join(', ')\n      output.push(`${c.red(total)} vulnerabilities (${severities})`)\n    } else {\n      const [sev, count] = sevs[0]\n      output.push(`${count} ${c.severity(sev)} severity vulnerabilit${count === 1 ? 'y' : 'ies'}`)\n    }\n\n    // XXX use a different footer line if some aren't fixable easily.\n    // just 'run `npm audit` for details' maybe?\n\n    if (someFixable) {\n      output.push('', 'To address ' +\n        (someForceFixable || someUnfixable ? 'issues that do not require attention'\n          : 'all issues') + ', run:\\n  npm audit fix')\n    }\n\n    if (someForceFixable) {\n      output.push('', 'To address all issues' +\n        (someUnfixable ? ' possible' : '') +\n        (forceFixSemVerMajor ? ' (including breaking changes)' : '') +\n        ', run:\\n  npm audit fix --force')\n    }\n\n    if (someUnfixable) {\n      output.push('',\n        'Some issues need review, and may require choosing',\n        'a different dependency.')\n    }\n  }\n\n  const summary = output.join('\\n')\n  return {\n    summary,\n    report: vulnCount > 0 ? `${summary}\\n\\nRun \\`npm audit\\` for details.`\n      : summary\n  }\n}\n\nmodule.exports = Object.assign((data, opt) => calculate(data, opt).report, {\n  summary: (data, opt) => calculate(data, opt).summary\n})\n"]},"metadata":{},"sourceType":"script"}