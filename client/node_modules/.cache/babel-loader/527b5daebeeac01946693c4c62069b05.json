{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghedi\\\\Documents\\\\GhedBlog\\\\client\\\\src\\\\pages\\\\home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Posts from \"../../components/posts/Posts\";\nimport SideBar from \"../../components/sidebar/Sidebar\";\nimport Header from \"../../components/header/Header\";\nimport \"./home.css\";\nimport { useLocation } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport getPosts from \"../../redux/actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const posts = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const {\n    search\n  } = useLocation();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch, search]);\n\n  if (posts === null) {\n    /*#__PURE__*/\n    _jsxDEV(\"h1\", {\n      children: \"Loading posts... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [Array.isArray(posts) && /*#__PURE__*/_jsxDEV(Posts, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"sROSgGNpbTIpZvwFcrR8y6p+mZY=\", false, function () {\n  return [useSelector, useDispatch, useLocation];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/client/src/pages/home/Home.js"],"names":["React","useEffect","useState","Posts","SideBar","Header","useLocation","useDispatch","useSelector","getPosts","Home","posts","state","dispatch","search","Array","isArray"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAO,YAAP;AAEA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,KAAK,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaR,WAAW,EAA9B;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,EAAWC,MAAX,CAFM,CAAT;;AAIA,MAAIH,KAAK,KAAK,IAAd,EAAoB;AAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBACGI,KAAK,CAACC,OAAN,CAAcL,KAAd,kBAAwB,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,cAD3B,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AASD;;GApBuBD,I;UACRF,W,EACGD,W,EACED,W;;;KAHGI,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Posts from \"../../components/posts/Posts\";\r\nimport SideBar from \"../../components/sidebar/Sidebar\";\r\nimport Header from \"../../components/header/Header\";\r\nimport \"./home.css\";\r\n\r\nimport { useLocation } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport getPosts from \"../../redux/actions/posts\";\r\n\r\nexport default function Home() {\r\n  const posts = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const { search } = useLocation();\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [dispatch, search]);\r\n\r\n  if (posts === null) {\r\n    <h1>Loading posts... </h1>;\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"home\">\r\n        {Array.isArray(posts) && <Posts posts={posts} />}\r\n        <SideBar />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}