{"ast":null,"code":"module.exports = filter;\n\nfunction filter(data, include, exclude, opts) {\n  return typeof data === 'object' && filterWords(data, include, exclude, opts);\n}\n\nfunction getWords(data, opts) {\n  return [data.name].concat(opts && opts.description ? data.description : []).concat((data.maintainers || []).map(m => `=${m.name}`)).concat(data.versions && data.versions.length && data.url && '<' + data.url + '>').concat(data.keywords || []).map(f => f && f.trim && f.trim()).filter(f => f).join(' ').toLowerCase();\n}\n\nfunction filterWords(data, include, exclude, opts) {\n  var words = getWords(data, opts);\n\n  for (var i = 0, l = include.length; i < l; i++) {\n    if (!match(words, include[i])) return false;\n  }\n\n  for (i = 0, l = exclude.length; i < l; i++) {\n    if (match(words, exclude[i])) return false;\n  }\n\n  return true;\n}\n\nfunction match(words, pattern) {\n  if (pattern.charAt(0) === '/') {\n    pattern = pattern.replace(/\\/$/, '');\n    pattern = new RegExp(pattern.substr(1, pattern.length - 1));\n    return words.match(pattern);\n  }\n\n  return words.indexOf(pattern) !== -1;\n}","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/search/package-filter.js"],"names":["module","exports","filter","data","include","exclude","opts","filterWords","getWords","name","concat","description","maintainers","map","m","versions","length","url","keywords","f","trim","join","toLowerCase","words","i","l","match","pattern","charAt","replace","RegExp","substr","indexOf"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;;AACA,SAASA,MAAT,CAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+C;AAC7C,SAAO,OAAOH,IAAP,KAAgB,QAAhB,IACAI,WAAW,CAACJ,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,EAAyBC,IAAzB,CADlB;AAED;;AAED,SAASE,QAAT,CAAmBL,IAAnB,EAAyBG,IAAzB,EAA+B;AAC7B,SAAO,CAACH,IAAI,CAACM,IAAN,EACJC,MADI,CACIJ,IAAI,IAAIA,IAAI,CAACK,WAAd,GAA6BR,IAAI,CAACQ,WAAlC,GAAgD,EADnD,EAEJD,MAFI,CAEG,CAACP,IAAI,CAACS,WAAL,IAAoB,EAArB,EAAyBC,GAAzB,CAA6BC,CAAC,IAAK,IAAGA,CAAC,CAACL,IAAK,EAA7C,CAFH,EAGJC,MAHI,CAGGP,IAAI,CAACY,QAAL,IAAiBZ,IAAI,CAACY,QAAL,CAAcC,MAA/B,IAAyCb,IAAI,CAACc,GAA9C,IAAsD,MAAMd,IAAI,CAACc,GAAX,GAAiB,GAH1E,EAIJP,MAJI,CAIGP,IAAI,CAACe,QAAL,IAAiB,EAJpB,EAKJL,GALI,CAKAM,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACC,IAAP,IAAeD,CAAC,CAACC,IAAF,EALpB,EAMJlB,MANI,CAMGiB,CAAC,IAAIA,CANR,EAOJE,IAPI,CAOC,GAPD,EAQJC,WARI,EAAP;AASD;;AAED,SAASf,WAAT,CAAsBJ,IAAtB,EAA4BC,OAA5B,EAAqCC,OAArC,EAA8CC,IAA9C,EAAoD;AAClD,MAAIiB,KAAK,GAAGf,QAAQ,CAACL,IAAD,EAAOG,IAAP,CAApB;;AACA,OAAK,IAAIkB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGrB,OAAO,CAACY,MAA5B,EAAoCQ,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,QAAI,CAACE,KAAK,CAACH,KAAD,EAAQnB,OAAO,CAACoB,CAAD,CAAf,CAAV,EACE,OAAO,KAAP;AACH;;AAED,OAAKA,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGpB,OAAO,CAACW,MAAxB,EAAgCQ,CAAC,GAAGC,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,QAAIE,KAAK,CAACH,KAAD,EAAQlB,OAAO,CAACmB,CAAD,CAAf,CAAT,EACE,OAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACD;;AAED,SAASE,KAAT,CAAgBH,KAAhB,EAAuBI,OAAvB,EAAgC;AAC9B,MAAIA,OAAO,CAACC,MAAR,CAAe,CAAf,MAAsB,GAA1B,EAA+B;AAC7BD,IAAAA,OAAO,GAAGA,OAAO,CAACE,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAV;AACAF,IAAAA,OAAO,GAAG,IAAIG,MAAJ,CAAWH,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkBJ,OAAO,CAACX,MAAR,GAAiB,CAAnC,CAAX,CAAV;AACA,WAAOO,KAAK,CAACG,KAAN,CAAYC,OAAZ,CAAP;AACD;;AACD,SAAOJ,KAAK,CAACS,OAAN,CAAcL,OAAd,MAA2B,CAAC,CAAnC;AACD","sourcesContent":["module.exports = filter\nfunction filter (data, include, exclude, opts) {\n  return typeof data === 'object' &&\n         filterWords(data, include, exclude, opts)\n}\n\nfunction getWords (data, opts) {\n  return [data.name]\n    .concat((opts && opts.description) ? data.description : [])\n    .concat((data.maintainers || []).map(m => `=${m.name}`))\n    .concat(data.versions && data.versions.length && data.url && ('<' + data.url + '>'))\n    .concat(data.keywords || [])\n    .map(f => f && f.trim && f.trim())\n    .filter(f => f)\n    .join(' ')\n    .toLowerCase()\n}\n\nfunction filterWords (data, include, exclude, opts) {\n  var words = getWords(data, opts)\n  for (var i = 0, l = include.length; i < l; i++) {\n    if (!match(words, include[i]))\n      return false\n  }\n\n  for (i = 0, l = exclude.length; i < l; i++) {\n    if (match(words, exclude[i]))\n      return false\n  }\n\n  return true\n}\n\nfunction match (words, pattern) {\n  if (pattern.charAt(0) === '/') {\n    pattern = pattern.replace(/\\/$/, '')\n    pattern = new RegExp(pattern.substr(1, pattern.length - 1))\n    return words.match(pattern)\n  }\n  return words.indexOf(pattern) !== -1\n}\n"]},"metadata":{},"sourceType":"script"}