{"ast":null,"code":"const pacote = require('pacote');\n\nconst formatDiff = require('./lib/format-diff.js');\n\nconst getTarball = require('./lib/tarball.js');\n\nconst untar = require('./lib/untar.js');\n\nconst argsError = () => Object.assign(new TypeError('libnpmdiff needs two arguments to compare'), {\n  code: 'EDIFFARGS'\n});\n\nconst diff = async (specs, opts = {}) => {\n  if (specs.length !== 2) throw argsError();\n  const [aManifest, bManifest] = await Promise.all(specs.map(spec => pacote.manifest(spec, opts)));\n  const versions = {\n    a: aManifest.version,\n    b: bManifest.version\n  }; // fetches tarball using pacote\n\n  const [a, b] = await Promise.all([getTarball(aManifest, opts), getTarball(bManifest, opts)]); // read all files\n  // populates `files` and `refs`\n\n  const {\n    files,\n    refs\n  } = await untar([{\n    prefix: 'a/',\n    item: a\n  }, {\n    prefix: 'b/',\n    item: b\n  }], opts);\n  return formatDiff({\n    files,\n    opts,\n    refs,\n    versions\n  });\n};\n\nmodule.exports = diff;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/libnpmdiff/index.js"],"names":["pacote","require","formatDiff","getTarball","untar","argsError","Object","assign","TypeError","code","diff","specs","opts","length","aManifest","bManifest","Promise","all","map","spec","manifest","versions","a","version","b","files","refs","prefix","item","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,kBAAD,CAA1B;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,gBAAD,CAArB;;AAEA,MAAMI,SAAS,GAAG,MAChBC,MAAM,CAACC,MAAP,CACE,IAAIC,SAAJ,CAAc,2CAAd,CADF,EAEE;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAFF,CADF;;AAKA,MAAMC,IAAI,GAAG,OAAOC,KAAP,EAAcC,IAAI,GAAG,EAArB,KAA4B;AACvC,MAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EACE,MAAMR,SAAS,EAAf;AAEF,QAAM,CACJS,SADI,EAEJC,SAFI,IAIJ,MAAMC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAInB,MAAM,CAACoB,QAAP,CAAgBD,IAAhB,EAAsBP,IAAtB,CAAlB,CAAZ,CAJR;AAMA,QAAMS,QAAQ,GAAG;AACfC,IAAAA,CAAC,EAAER,SAAS,CAACS,OADE;AAEfC,IAAAA,CAAC,EAAET,SAAS,CAACQ;AAFE,GAAjB,CAVuC,CAevC;;AACA,QAAM,CAACD,CAAD,EAAIE,CAAJ,IAAS,MAAMR,OAAO,CAACC,GAAR,CAAY,CAC/Bd,UAAU,CAACW,SAAD,EAAYF,IAAZ,CADqB,EAE/BT,UAAU,CAACY,SAAD,EAAYH,IAAZ,CAFqB,CAAZ,CAArB,CAhBuC,CAqBvC;AACA;;AACA,QAAM;AACJa,IAAAA,KADI;AAEJC,IAAAA;AAFI,MAGF,MAAMtB,KAAK,CAAC,CACd;AACEuB,IAAAA,MAAM,EAAE,IADV;AAEEC,IAAAA,IAAI,EAAEN;AAFR,GADc,EAKd;AACEK,IAAAA,MAAM,EAAE,IADV;AAEEC,IAAAA,IAAI,EAAEJ;AAFR,GALc,CAAD,EASZZ,IATY,CAHf;AAcA,SAAOV,UAAU,CAAC;AAChBuB,IAAAA,KADgB;AAEhBb,IAAAA,IAFgB;AAGhBc,IAAAA,IAHgB;AAIhBL,IAAAA;AAJgB,GAAD,CAAjB;AAMD,CA3CD;;AA6CAQ,MAAM,CAACC,OAAP,GAAiBpB,IAAjB","sourcesContent":["const pacote = require('pacote')\n\nconst formatDiff = require('./lib/format-diff.js')\nconst getTarball = require('./lib/tarball.js')\nconst untar = require('./lib/untar.js')\n\nconst argsError = () =>\n  Object.assign(\n    new TypeError('libnpmdiff needs two arguments to compare'),\n    { code: 'EDIFFARGS' }\n  )\nconst diff = async (specs, opts = {}) => {\n  if (specs.length !== 2)\n    throw argsError()\n\n  const [\n    aManifest,\n    bManifest,\n  ] =\n    await Promise.all(specs.map(spec => pacote.manifest(spec, opts)))\n\n  const versions = {\n    a: aManifest.version,\n    b: bManifest.version,\n  }\n\n  // fetches tarball using pacote\n  const [a, b] = await Promise.all([\n    getTarball(aManifest, opts),\n    getTarball(bManifest, opts),\n  ])\n\n  // read all files\n  // populates `files` and `refs`\n  const {\n    files,\n    refs,\n  } = await untar([\n    {\n      prefix: 'a/',\n      item: a,\n    },\n    {\n      prefix: 'b/',\n      item: b,\n    },\n  ], opts)\n\n  return formatDiff({\n    files,\n    opts,\n    refs,\n    versions,\n  })\n}\n\nmodule.exports = diff\n"]},"metadata":{},"sourceType":"script"}