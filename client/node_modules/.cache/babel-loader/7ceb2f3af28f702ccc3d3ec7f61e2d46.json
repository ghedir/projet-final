{"ast":null,"code":"// Sometimes we need to actually do a walk from the root, because you can\n// have a cycle of deps that all depend on each other, but no path from root.\n// Also, since the ideal tree is loaded from the shrinkwrap, it had extraneous\n// flags set false that might now be actually extraneous, and dev/optional\n// flags that are also now incorrect.  This method sets all flags to true, so\n// we can find the set that is actually extraneous.\nmodule.exports = tree => {\n  for (const node of tree.inventory.values()) {\n    node.extraneous = true;\n    node.dev = true;\n    node.devOptional = true;\n    node.peer = true;\n    node.optional = true;\n  }\n};","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/@npmcli/arborist/lib/reset-dep-flags.js"],"names":["module","exports","tree","node","inventory","values","extraneous","dev","devOptional","peer","optional"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiBC,IAAI,IAAI;AACvB,OAAK,MAAMC,IAAX,IAAmBD,IAAI,CAACE,SAAL,CAAeC,MAAf,EAAnB,EAA4C;AAC1CF,IAAAA,IAAI,CAACG,UAAL,GAAkB,IAAlB;AACAH,IAAAA,IAAI,CAACI,GAAL,GAAW,IAAX;AACAJ,IAAAA,IAAI,CAACK,WAAL,GAAmB,IAAnB;AACAL,IAAAA,IAAI,CAACM,IAAL,GAAY,IAAZ;AACAN,IAAAA,IAAI,CAACO,QAAL,GAAgB,IAAhB;AACD;AACF,CARD","sourcesContent":["// Sometimes we need to actually do a walk from the root, because you can\n// have a cycle of deps that all depend on each other, but no path from root.\n// Also, since the ideal tree is loaded from the shrinkwrap, it had extraneous\n// flags set false that might now be actually extraneous, and dev/optional\n// flags that are also now incorrect.  This method sets all flags to true, so\n// we can find the set that is actually extraneous.\nmodule.exports = tree => {\n  for (const node of tree.inventory.values()) {\n    node.extraneous = true\n    node.dev = true\n    node.devOptional = true\n    node.peer = true\n    node.optional = true\n  }\n}\n"]},"metadata":{},"sourceType":"script"}