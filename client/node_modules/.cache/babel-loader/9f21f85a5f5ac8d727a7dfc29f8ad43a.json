{"ast":null,"code":"const nopt = require('nopt');\n\nconst {\n  Umask,\n  validate: validateUmask\n} = require('./umask.js');\n\nconst semver = require('semver');\n\nconst validateSemver = (data, k, val) => {\n  const valid = semver.valid(val);\n  if (!valid) return false;\n  data[k] = valid;\n};\n\nconst noptValidatePath = nopt.typeDefs.path.validate;\n\nconst validatePath = (data, k, val) => {\n  if (typeof val !== 'string') return false;\n  return noptValidatePath(data, k, val);\n}; // add descriptions so we can validate more usefully\n\n\nmodule.exports = { ...nopt.typeDefs,\n  semver: {\n    type: semver,\n    validate: validateSemver,\n    description: 'full valid SemVer string'\n  },\n  Umask: {\n    type: Umask,\n    validate: validateUmask,\n    description: 'octal number in range 0o000..0o777 (0..511)'\n  },\n  url: { ...nopt.typeDefs.url,\n    description: 'full url with \"http://\"'\n  },\n  path: { ...nopt.typeDefs.path,\n    validate: validatePath,\n    description: 'valid filesystem path'\n  },\n  Number: { ...nopt.typeDefs.Number,\n    description: 'numeric value'\n  },\n  Boolean: { ...nopt.typeDefs.Boolean,\n    description: 'boolean value (true or false)'\n  },\n  Date: { ...nopt.typeDefs.Date,\n    description: 'valid Date string'\n  }\n}; // TODO: make nopt less of a global beast so this kludge isn't necessary\n\nnopt.typeDefs = module.exports;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/@npmcli/config/lib/type-defs.js"],"names":["nopt","require","Umask","validate","validateUmask","semver","validateSemver","data","k","val","valid","noptValidatePath","typeDefs","path","validatePath","module","exports","type","description","url","Number","Boolean","Date"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAQ,EAAEC;AAAnB,IAAqCH,OAAO,CAAC,YAAD,CAAlD;;AAEA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMK,cAAc,GAAG,CAACC,IAAD,EAAOC,CAAP,EAAUC,GAAV,KAAkB;AACvC,QAAMC,KAAK,GAAGL,MAAM,CAACK,KAAP,CAAaD,GAAb,CAAd;AACA,MAAI,CAACC,KAAL,EACE,OAAO,KAAP;AACFH,EAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUE,KAAV;AACD,CALD;;AAOA,MAAMC,gBAAgB,GAAGX,IAAI,CAACY,QAAL,CAAcC,IAAd,CAAmBV,QAA5C;;AACA,MAAMW,YAAY,GAAG,CAACP,IAAD,EAAOC,CAAP,EAAUC,GAAV,KAAkB;AACrC,MAAI,OAAOA,GAAP,KAAe,QAAnB,EACE,OAAO,KAAP;AACF,SAAOE,gBAAgB,CAACJ,IAAD,EAAOC,CAAP,EAAUC,GAAV,CAAvB;AACD,CAJD,C,CAMA;;;AACAM,MAAM,CAACC,OAAP,GAAiB,EACf,GAAGhB,IAAI,CAACY,QADO;AAEfP,EAAAA,MAAM,EAAE;AACNY,IAAAA,IAAI,EAAEZ,MADA;AAENF,IAAAA,QAAQ,EAAEG,cAFJ;AAGNY,IAAAA,WAAW,EAAE;AAHP,GAFO;AAOfhB,EAAAA,KAAK,EAAE;AACLe,IAAAA,IAAI,EAAEf,KADD;AAELC,IAAAA,QAAQ,EAAEC,aAFL;AAGLc,IAAAA,WAAW,EAAE;AAHR,GAPQ;AAYfC,EAAAA,GAAG,EAAE,EACH,GAAGnB,IAAI,CAACY,QAAL,CAAcO,GADd;AAEHD,IAAAA,WAAW,EAAE;AAFV,GAZU;AAgBfL,EAAAA,IAAI,EAAE,EACJ,GAAGb,IAAI,CAACY,QAAL,CAAcC,IADb;AAEJV,IAAAA,QAAQ,EAAEW,YAFN;AAGJI,IAAAA,WAAW,EAAE;AAHT,GAhBS;AAqBfE,EAAAA,MAAM,EAAE,EACN,GAAGpB,IAAI,CAACY,QAAL,CAAcQ,MADX;AAENF,IAAAA,WAAW,EAAE;AAFP,GArBO;AAyBfG,EAAAA,OAAO,EAAE,EACP,GAAGrB,IAAI,CAACY,QAAL,CAAcS,OADV;AAEPH,IAAAA,WAAW,EAAE;AAFN,GAzBM;AA6BfI,EAAAA,IAAI,EAAE,EACJ,GAAGtB,IAAI,CAACY,QAAL,CAAcU,IADb;AAEJJ,IAAAA,WAAW,EAAE;AAFT;AA7BS,CAAjB,C,CAmCA;;AACAlB,IAAI,CAACY,QAAL,GAAgBG,MAAM,CAACC,OAAvB","sourcesContent":["const nopt = require('nopt')\n\nconst { Umask, validate: validateUmask } = require('./umask.js')\n\nconst semver = require('semver')\nconst validateSemver = (data, k, val) => {\n  const valid = semver.valid(val)\n  if (!valid)\n    return false\n  data[k] = valid\n}\n\nconst noptValidatePath = nopt.typeDefs.path.validate\nconst validatePath = (data, k, val) => {\n  if (typeof val !== 'string')\n    return false\n  return noptValidatePath(data, k, val)\n}\n\n// add descriptions so we can validate more usefully\nmodule.exports = {\n  ...nopt.typeDefs,\n  semver: {\n    type: semver,\n    validate: validateSemver,\n    description: 'full valid SemVer string',\n  },\n  Umask: {\n    type: Umask,\n    validate: validateUmask,\n    description: 'octal number in range 0o000..0o777 (0..511)',\n  },\n  url: {\n    ...nopt.typeDefs.url,\n    description: 'full url with \"http://\"',\n  },\n  path: {\n    ...nopt.typeDefs.path,\n    validate: validatePath,\n    description: 'valid filesystem path',\n  },\n  Number: {\n    ...nopt.typeDefs.Number,\n    description: 'numeric value',\n  },\n  Boolean: {\n    ...nopt.typeDefs.Boolean,\n    description: 'boolean value (true or false)',\n  },\n  Date: {\n    ...nopt.typeDefs.Date,\n    description: 'valid Date string',\n  },\n}\n\n// TODO: make nopt less of a global beast so this kludge isn't necessary\nnopt.typeDefs = module.exports\n"]},"metadata":{},"sourceType":"script"}