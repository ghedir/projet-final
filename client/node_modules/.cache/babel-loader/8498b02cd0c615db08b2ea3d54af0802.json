{"ast":null,"code":"const readJson = require('./read-json.js');\n\nconst version = require('./version.js');\n\nconst proclog = require('./proc-log.js');\n\nmodule.exports = async (newversion, opts = {}) => {\n  const {\n    path = process.cwd(),\n    allowSameVersion = false,\n    tagVersionPrefix = 'v',\n    commitHooks = true,\n    gitTagVersion = true,\n    signGitCommit = false,\n    signGitTag = false,\n    force = false,\n    ignoreScripts = false,\n    scriptShell = undefined,\n    preid = null,\n    log = proclog,\n    message = 'v%s'\n  } = opts;\n  const pkg = opts.pkg || (await readJson(path + '/package.json'));\n  return version(newversion, {\n    path,\n    cwd: path,\n    allowSameVersion,\n    tagVersionPrefix,\n    commitHooks,\n    gitTagVersion,\n    signGitCommit,\n    signGitTag,\n    force,\n    ignoreScripts,\n    scriptShell,\n    preid,\n    pkg,\n    log,\n    message\n  });\n};","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/libnpmversion/lib/index.js"],"names":["readJson","require","version","proclog","module","exports","newversion","opts","path","process","cwd","allowSameVersion","tagVersionPrefix","commitHooks","gitTagVersion","signGitCommit","signGitTag","force","ignoreScripts","scriptShell","undefined","preid","log","message","pkg"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,eAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,OAAOC,UAAP,EAAmBC,IAAI,GAAG,EAA1B,KAAiC;AAChD,QAAM;AACJC,IAAAA,IAAI,GAAGC,OAAO,CAACC,GAAR,EADH;AAEJC,IAAAA,gBAAgB,GAAG,KAFf;AAGJC,IAAAA,gBAAgB,GAAG,GAHf;AAIJC,IAAAA,WAAW,GAAG,IAJV;AAKJC,IAAAA,aAAa,GAAG,IALZ;AAMJC,IAAAA,aAAa,GAAG,KANZ;AAOJC,IAAAA,UAAU,GAAG,KAPT;AAQJC,IAAAA,KAAK,GAAG,KARJ;AASJC,IAAAA,aAAa,GAAG,KATZ;AAUJC,IAAAA,WAAW,GAAGC,SAVV;AAWJC,IAAAA,KAAK,GAAG,IAXJ;AAYJC,IAAAA,GAAG,GAAGnB,OAZF;AAaJoB,IAAAA,OAAO,GAAG;AAbN,MAcFhB,IAdJ;AAgBA,QAAMiB,GAAG,GAAGjB,IAAI,CAACiB,GAAL,KAAY,MAAMxB,QAAQ,CAACQ,IAAI,GAAG,eAAR,CAA1B,CAAZ;AAEA,SAAON,OAAO,CAACI,UAAD,EAAa;AACzBE,IAAAA,IADyB;AAEzBE,IAAAA,GAAG,EAAEF,IAFoB;AAGzBG,IAAAA,gBAHyB;AAIzBC,IAAAA,gBAJyB;AAKzBC,IAAAA,WALyB;AAMzBC,IAAAA,aANyB;AAOzBC,IAAAA,aAPyB;AAQzBC,IAAAA,UARyB;AASzBC,IAAAA,KATyB;AAUzBC,IAAAA,aAVyB;AAWzBC,IAAAA,WAXyB;AAYzBE,IAAAA,KAZyB;AAazBG,IAAAA,GAbyB;AAczBF,IAAAA,GAdyB;AAezBC,IAAAA;AAfyB,GAAb,CAAd;AAiBD,CApCD","sourcesContent":["const readJson = require('./read-json.js')\nconst version = require('./version.js')\nconst proclog = require('./proc-log.js')\n\nmodule.exports = async (newversion, opts = {}) => {\n  const {\n    path = process.cwd(),\n    allowSameVersion = false,\n    tagVersionPrefix = 'v',\n    commitHooks = true,\n    gitTagVersion = true,\n    signGitCommit = false,\n    signGitTag = false,\n    force = false,\n    ignoreScripts = false,\n    scriptShell = undefined,\n    preid = null,\n    log = proclog,\n    message = 'v%s'\n  } = opts\n\n  const pkg = opts.pkg || await readJson(path + '/package.json')\n\n  return version(newversion, {\n    path,\n    cwd: path,\n    allowSameVersion,\n    tagVersionPrefix,\n    commitHooks,\n    gitTagVersion,\n    signGitCommit,\n    signGitTag,\n    force,\n    ignoreScripts,\n    scriptShell,\n    preid,\n    pkg,\n    log,\n    message\n  })\n}\n"]},"metadata":{},"sourceType":"script"}