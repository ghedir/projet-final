{"ast":null,"code":"// module to clean out the old log files in cache/_logs\n// this is a best-effort attempt.  if a rm fails, we just\n// log a message about it and move on.  We do return a\n// Promise that succeeds when we've tried to delete everything,\n// just for the benefit of testing this function properly.\nconst {\n  resolve\n} = require('path');\n\nconst rimraf = require('rimraf');\n\nconst glob = require('glob');\n\nmodule.exports = (cache, max, warn) => {\n  /* eslint-disable promise/param-names */\n  return new Promise(done => {\n    glob(resolve(cache, '_logs', '*-debug.log'), (er, files) => {\n      if (er) return done();\n      let pending = files.length - max;\n      if (pending <= 0) return done();\n\n      for (let i = 0; i < files.length - max; i++) {\n        rimraf(files[i], er => {\n          if (er) warn('log', 'failed to remove log file', files[i]);\n          if (--pending === 0) done();\n        });\n      }\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/utils/cleanup-log-files.js"],"names":["resolve","require","rimraf","glob","module","exports","cache","max","warn","Promise","done","er","files","pending","length","i"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,MAAD,CAA3B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACAG,MAAM,CAACC,OAAP,GAAiB,CAACC,KAAD,EAAQC,GAAR,EAAaC,IAAb,KAAsB;AACrC;AACA,SAAO,IAAIC,OAAJ,CAAYC,IAAI,IAAI;AACzBP,IAAAA,IAAI,CAACH,OAAO,CAACM,KAAD,EAAQ,OAAR,EAAiB,aAAjB,CAAR,EAAyC,CAACK,EAAD,EAAKC,KAAL,KAAe;AAC1D,UAAID,EAAJ,EACE,OAAOD,IAAI,EAAX;AAEF,UAAIG,OAAO,GAAGD,KAAK,CAACE,MAAN,GAAeP,GAA7B;AACA,UAAIM,OAAO,IAAI,CAAf,EACE,OAAOH,IAAI,EAAX;;AAEF,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACE,MAAN,GAAeP,GAAnC,EAAwCQ,CAAC,EAAzC,EAA6C;AAC3Cb,QAAAA,MAAM,CAACU,KAAK,CAACG,CAAD,CAAN,EAAYJ,EAAD,IAAQ;AACvB,cAAIA,EAAJ,EACEH,IAAI,CAAC,KAAD,EAAQ,2BAAR,EAAqCI,KAAK,CAACG,CAAD,CAA1C,CAAJ;AAEF,cAAI,EAAEF,OAAF,KAAc,CAAlB,EACEH,IAAI;AACP,SANK,CAAN;AAOD;AACF,KAjBG,CAAJ;AAkBD,GAnBM,CAAP;AAoBD,CAtBD","sourcesContent":["// module to clean out the old log files in cache/_logs\n// this is a best-effort attempt.  if a rm fails, we just\n// log a message about it and move on.  We do return a\n// Promise that succeeds when we've tried to delete everything,\n// just for the benefit of testing this function properly.\n\nconst { resolve } = require('path')\nconst rimraf = require('rimraf')\nconst glob = require('glob')\nmodule.exports = (cache, max, warn) => {\n  /* eslint-disable promise/param-names */\n  return new Promise(done => {\n    glob(resolve(cache, '_logs', '*-debug.log'), (er, files) => {\n      if (er)\n        return done()\n\n      let pending = files.length - max\n      if (pending <= 0)\n        return done()\n\n      for (let i = 0; i < files.length - max; i++) {\n        rimraf(files[i], (er) => {\n          if (er)\n            warn('log', 'failed to remove log file', files[i])\n\n          if (--pending === 0)\n            done()\n        })\n      }\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}