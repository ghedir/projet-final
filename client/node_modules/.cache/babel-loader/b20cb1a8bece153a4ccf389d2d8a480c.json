{"ast":null,"code":"const {\n  GitConnectionError,\n  GitPathspecError,\n  GitUnknownError\n} = require('./errors.js');\n\nconst connectionErrorRe = new RegExp(['remote error: Internal Server Error', 'The remote end hung up unexpectedly', 'Connection timed out', 'Operation timed out', 'Failed to connect to .* Timed out', 'Connection reset by peer', 'SSL_ERROR_SYSCALL', 'The requested URL returned error: 503'].join('|'));\nconst missingPathspecRe = /pathspec .* did not match any file\\(s\\) known to git/;\n\nfunction makeError(er) {\n  const message = er.stderr;\n  let gitEr;\n\n  if (connectionErrorRe.test(message)) {\n    gitEr = new GitConnectionError(message);\n  } else if (missingPathspecRe.test(message)) {\n    gitEr = new GitPathspecError(message);\n  } else {\n    gitEr = new GitUnknownError(message);\n  }\n\n  return Object.assign(gitEr, er);\n}\n\nmodule.exports = makeError;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/@npmcli/git/lib/make-error.js"],"names":["GitConnectionError","GitPathspecError","GitUnknownError","require","connectionErrorRe","RegExp","join","missingPathspecRe","makeError","er","message","stderr","gitEr","test","Object","assign","module","exports"],"mappings":"AAAA,MAAM;AACJA,EAAAA,kBADI;AAEJC,EAAAA,gBAFI;AAGJC,EAAAA;AAHI,IAIFC,OAAO,CAAC,aAAD,CAJX;;AAMA,MAAMC,iBAAiB,GAAG,IAAIC,MAAJ,CAAW,CACnC,qCADmC,EAEnC,qCAFmC,EAGnC,sBAHmC,EAInC,qBAJmC,EAKnC,mCALmC,EAMnC,0BANmC,EAOnC,mBAPmC,EAQnC,uCARmC,EASnCC,IATmC,CAS9B,GAT8B,CAAX,CAA1B;AAWA,MAAMC,iBAAiB,GAAG,sDAA1B;;AAEA,SAASC,SAAT,CAAoBC,EAApB,EAAwB;AACtB,QAAMC,OAAO,GAAGD,EAAE,CAACE,MAAnB;AACA,MAAIC,KAAJ;;AACA,MAAIR,iBAAiB,CAACS,IAAlB,CAAuBH,OAAvB,CAAJ,EAAqC;AACnCE,IAAAA,KAAK,GAAG,IAAIZ,kBAAJ,CAAuBU,OAAvB,CAAR;AACD,GAFD,MAEO,IAAIH,iBAAiB,CAACM,IAAlB,CAAuBH,OAAvB,CAAJ,EAAqC;AAC1CE,IAAAA,KAAK,GAAG,IAAIX,gBAAJ,CAAqBS,OAArB,CAAR;AACD,GAFM,MAEA;AACLE,IAAAA,KAAK,GAAG,IAAIV,eAAJ,CAAoBQ,OAApB,CAAR;AACD;;AACD,SAAOI,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqBH,EAArB,CAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["const {\n  GitConnectionError,\n  GitPathspecError,\n  GitUnknownError\n} = require('./errors.js')\n\nconst connectionErrorRe = new RegExp([\n  'remote error: Internal Server Error',\n  'The remote end hung up unexpectedly',\n  'Connection timed out',\n  'Operation timed out',\n  'Failed to connect to .* Timed out',\n  'Connection reset by peer',\n  'SSL_ERROR_SYSCALL',\n  'The requested URL returned error: 503'\n].join('|'))\n\nconst missingPathspecRe = /pathspec .* did not match any file\\(s\\) known to git/\n\nfunction makeError (er) {\n  const message = er.stderr\n  let gitEr\n  if (connectionErrorRe.test(message)) {\n    gitEr = new GitConnectionError(message)\n  } else if (missingPathspecRe.test(message)) {\n    gitEr = new GitPathspecError(message)\n  } else {\n    gitEr = new GitUnknownError(message)\n  }\n  return Object.assign(gitEr, er)\n}\n\nmodule.exports = makeError\n"]},"metadata":{},"sourceType":"script"}