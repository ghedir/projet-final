{"ast":null,"code":"// run an npm command\nconst spawn = require('@npmcli/promise-spawn');\n\nconst {\n  dirname\n} = require('path');\n\nmodule.exports = (npmBin, npmCommand, cwd, env, extra) => {\n  const isJS = npmBin.endsWith('.js');\n  const cmd = isJS ? process.execPath : npmBin;\n  const args = (isJS ? [npmBin] : []).concat(npmCommand); // when installing to run the `prepare` script for a git dep, we need\n  // to ensure that we don't run into a cycle of checking out packages\n  // in temp directories.  this lets us link previously-seen repos that\n  // are also being prepared.\n\n  return spawn(cmd, args, {\n    cwd,\n    stdioString: true,\n    env\n  }, extra);\n};","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/pacote/lib/util/npm.js"],"names":["spawn","require","dirname","module","exports","npmBin","npmCommand","cwd","env","extra","isJS","endsWith","cmd","process","execPath","args","concat","stdioString"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAArB;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAYD,OAAO,CAAC,MAAD,CAAzB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,MAAD,EAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,KAA/B,KAAyC;AACxD,QAAMC,IAAI,GAAGL,MAAM,CAACM,QAAP,CAAgB,KAAhB,CAAb;AACA,QAAMC,GAAG,GAAGF,IAAI,GAAGG,OAAO,CAACC,QAAX,GAAsBT,MAAtC;AACA,QAAMU,IAAI,GAAG,CAACL,IAAI,GAAG,CAACL,MAAD,CAAH,GAAc,EAAnB,EAAuBW,MAAvB,CAA8BV,UAA9B,CAAb,CAHwD,CAIxD;AACA;AACA;AACA;;AAEA,SAAON,KAAK,CAACY,GAAD,EAAMG,IAAN,EAAY;AAAER,IAAAA,GAAF;AAAOU,IAAAA,WAAW,EAAE,IAApB;AAA0BT,IAAAA;AAA1B,GAAZ,EAA6CC,KAA7C,CAAZ;AACD,CAVD","sourcesContent":["// run an npm command\nconst spawn = require('@npmcli/promise-spawn')\nconst {dirname} = require('path')\n\nmodule.exports = (npmBin, npmCommand, cwd, env, extra) => {\n  const isJS = npmBin.endsWith('.js')\n  const cmd = isJS ? process.execPath : npmBin\n  const args = (isJS ? [npmBin] : []).concat(npmCommand)\n  // when installing to run the `prepare` script for a git dep, we need\n  // to ensure that we don't run into a cycle of checking out packages\n  // in temp directories.  this lets us link previously-seen repos that\n  // are also being prepared.\n\n  return spawn(cmd, args, { cwd, stdioString: true, env }, extra)\n}\n"]},"metadata":{},"sourceType":"script"}