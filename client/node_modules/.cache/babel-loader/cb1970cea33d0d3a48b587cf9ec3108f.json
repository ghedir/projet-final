{"ast":null,"code":"import axios from 'axios'; // Create Redux action types\n\nexport const GET_POSTS = \"GET_POSTS\";\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\nexport const GET_POSTS_FAILURE = \"GET_POSTS_FAILURE\"; // Create Redux action creators that return an action\n\nexport const getPosts = () => ({\n  type: GET_POSTS\n});\nexport const getPostsSuccess = posts => ({\n  type: GET_POSTS_SUCCESS,\n  payload: posts\n});\nexport const getPostsFailure = () => ({\n  type: GET_POSTS_FAILURE\n}); // Combine them all in an asynchronous thunk\n\nexport function fetchPosts() {\n  return async dispatch => {\n    dispatch(getPosts());\n\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      const data = await response.json();\n      dispatch(getPostsSuccess(data));\n    } catch (error) {\n      dispatch(getPostsFailure());\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/client/src/redux/actions/postsActions.js"],"names":["axios","GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","getPosts","type","getPostsSuccess","posts","payload","getPostsFailure","fetchPosts","dispatch","response","fetch","data","json","error"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B,C,CAEP;;AACA,OAAO,MAAMC,QAAQ,GAAG,OAAO;AAC7BC,EAAAA,IAAI,EAAEJ;AADuB,CAAP,CAAjB;AAIP,OAAO,MAAMK,eAAe,GAAIC,KAAD,KAAY;AACzCF,EAAAA,IAAI,EAAEH,iBADmC;AAEzCM,EAAAA,OAAO,EAAED;AAFgC,CAAZ,CAAxB;AAKP,OAAO,MAAME,eAAe,GAAG,OAAO;AACpCJ,EAAAA,IAAI,EAAEF;AAD8B,CAAP,CAAxB,C,CAGP;;AACA,OAAO,SAASO,UAAT,GAAsB;AAC3B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACP,QAAQ,EAAT,CAAR;;AAEA,QAAI;AAEF,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAJ,MAAAA,QAAQ,CAACL,eAAe,CAACQ,IAAD,CAAhB,CAAR;AACD,KALD,CAKE,OAAOE,KAAP,EAAc;AACdL,MAAAA,QAAQ,CAACF,eAAe,EAAhB,CAAR;AACD;AACF,GAXD;AAYD","sourcesContent":["\r\nimport axios from 'axios';\r\n// Create Redux action types\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\r\nexport const GET_POSTS_FAILURE = \"GET_POSTS_FAILURE\";\r\n\r\n// Create Redux action creators that return an action\r\nexport const getPosts = () => ({\r\n  type: GET_POSTS,\r\n});\r\n\r\nexport const getPostsSuccess = (posts) => ({\r\n  type: GET_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\n\r\nexport const getPostsFailure = () => ({\r\n  type: GET_POSTS_FAILURE,\r\n});\r\n// Combine them all in an asynchronous thunk\r\nexport function fetchPosts() {\r\n  return async (dispatch) => {\r\n    dispatch(getPosts());\r\n\r\n    try {\r\n      \r\n      const response = await fetch('http://localhost:5000/api/posts')\r\n      const data = await response.json()\r\n      dispatch(getPostsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getPostsFailure());\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}