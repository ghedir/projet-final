{"ast":null,"code":"const {\n  promisify\n} = require('util');\n\nconst readdir = promisify(require('readdir-scoped-modules'));\n\nconst installedShallow = async (npm, opts) => {\n  const names = global => readdir(global ? npm.globalDir : npm.localDir);\n\n  const {\n    conf: {\n      argv: {\n        remain\n      }\n    }\n  } = opts;\n  if (remain.length > 3) return null;\n  const {\n    global\n  } = npm.flatOptions;\n  const locals = global ? [] : await names(false);\n  const globals = (await names(true)).map(n => global ? n : `${n} -g`);\n  return [...locals, ...globals];\n};\n\nmodule.exports = installedShallow;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/utils/completion/installed-shallow.js"],"names":["promisify","require","readdir","installedShallow","npm","opts","names","global","globalDir","localDir","conf","argv","remain","length","flatOptions","locals","globals","map","n","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,MAAD,CAA7B;;AACA,MAAMC,OAAO,GAAGF,SAAS,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAzB;;AAEA,MAAME,gBAAgB,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AAC5C,QAAMC,KAAK,GAAGC,MAAM,IAAIL,OAAO,CAACK,MAAM,GAAGH,GAAG,CAACI,SAAP,GAAmBJ,GAAG,CAACK,QAA9B,CAA/B;;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR;AAAR,MAAiCP,IAAvC;AACA,MAAIO,MAAM,CAACC,MAAP,GAAgB,CAApB,EACE,OAAO,IAAP;AAEF,QAAM;AAAEN,IAAAA;AAAF,MAAaH,GAAG,CAACU,WAAvB;AACA,QAAMC,MAAM,GAAGR,MAAM,GAAG,EAAH,GAAQ,MAAMD,KAAK,CAAC,KAAD,CAAxC;AACA,QAAMU,OAAO,GAAG,CAAC,MAAMV,KAAK,CAAC,IAAD,CAAZ,EAAoBW,GAApB,CAAwBC,CAAC,IAAIX,MAAM,GAAGW,CAAH,GAAQ,GAAEA,CAAE,KAA/C,CAAhB;AACA,SAAO,CAAC,GAAGH,MAAJ,EAAY,GAAGC,OAAf,CAAP;AACD,CAVD;;AAYAG,MAAM,CAACC,OAAP,GAAiBjB,gBAAjB","sourcesContent":["const { promisify } = require('util')\nconst readdir = promisify(require('readdir-scoped-modules'))\n\nconst installedShallow = async (npm, opts) => {\n  const names = global => readdir(global ? npm.globalDir : npm.localDir)\n  const { conf: { argv: { remain } } } = opts\n  if (remain.length > 3)\n    return null\n\n  const { global } = npm.flatOptions\n  const locals = global ? [] : await names(false)\n  const globals = (await names(true)).map(n => global ? n : `${n} -g`)\n  return [...locals, ...globals]\n}\n\nmodule.exports = installedShallow\n"]},"metadata":{},"sourceType":"script"}