{"ast":null,"code":"const columns = require('cli-columns');\n\nconst libteam = require('libnpmteam');\n\nconst otplease = require('./utils/otplease.js');\n\nconst BaseCommand = require('./base-command.js');\n\nclass Team extends BaseCommand {\n  static get description() {\n    return 'Manage organization teams and team memberships';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'team';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get usage() {\n    return ['create <scope:team> [--otp <otpcode>]', 'destroy <scope:team> [--otp <otpcode>]', 'add <scope:team> <user> [--otp <otpcode>]', 'rm <scope:team> <user> [--otp <otpcode>]', 'ls <scope>|<scope:team>'];\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get params() {\n    return ['registry', 'otp', 'parseable', 'json'];\n  }\n\n  async completion(opts) {\n    const {\n      conf: {\n        argv: {\n          remain: argv\n        }\n      }\n    } = opts;\n    const subcommands = ['create', 'destroy', 'add', 'rm', 'ls'];\n    if (argv.length === 2) return subcommands;\n    if (subcommands.includes(argv[2])) return [];\n    throw new Error(argv[2] + ' not recognized');\n  }\n\n  exec(args, cb) {\n    this.team(args).then(() => cb()).catch(cb);\n  }\n\n  async team([cmd, entity = '', user = '']) {\n    // Entities are in the format <scope>:<team>\n    // XXX: \"description\" option to libnpmteam is used as a description of the\n    // team, but in npm's options, this is a boolean meaning \"show the\n    // description in npm search output\".  Hence its being set to null here.\n    await otplease(this.npm.flatOptions, opts => {\n      entity = entity.replace(/^@/, '');\n\n      switch (cmd) {\n        case 'create':\n          return this.create(entity, opts);\n\n        case 'destroy':\n          return this.destroy(entity, opts);\n\n        case 'add':\n          return this.add(entity, user, opts);\n\n        case 'rm':\n          return this.rm(entity, user, opts);\n\n        case 'ls':\n          {\n            const match = entity.match(/[^:]+:.+/);\n            if (match) return this.listUsers(entity, opts);else return this.listTeams(entity, opts);\n          }\n\n        default:\n          throw this.usage;\n      }\n    });\n  }\n\n  async create(entity, opts) {\n    await libteam.create(entity, opts);\n\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        created: true,\n        team: entity\n      }));\n    } else if (opts.parseable) this.npm.output(`${entity}\\tcreated`);else if (!opts.silent && opts.loglevel !== 'silent') this.npm.output(`+@${entity}`);\n  }\n\n  async destroy(entity, opts) {\n    await libteam.destroy(entity, opts);\n\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        deleted: true,\n        team: entity\n      }));\n    } else if (opts.parseable) this.npm.output(`${entity}\\tdeleted`);else if (!opts.silent && opts.loglevel !== 'silent') this.npm.output(`-@${entity}`);\n  }\n\n  async add(entity, user, opts) {\n    await libteam.add(user, entity, opts);\n\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        added: true,\n        team: entity,\n        user\n      }));\n    } else if (opts.parseable) this.npm.output(`${user}\\t${entity}\\tadded`);else if (!opts.silent && opts.loglevel !== 'silent') this.npm.output(`${user} added to @${entity}`);\n  }\n\n  async rm(entity, user, opts) {\n    await libteam.rm(user, entity, opts);\n\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        removed: true,\n        team: entity,\n        user\n      }));\n    } else if (opts.parseable) this.npm.output(`${user}\\t${entity}\\tremoved`);else if (!opts.silent && opts.loglevel !== 'silent') this.npm.output(`${user} removed from @${entity}`);\n  }\n\n  async listUsers(entity, opts) {\n    const users = (await libteam.lsUsers(entity, opts)).sort();\n    if (opts.json) this.npm.output(JSON.stringify(users, null, 2));else if (opts.parseable) this.npm.output(users.join('\\n'));else if (!opts.silent && opts.loglevel !== 'silent') {\n      const plural = users.length === 1 ? '' : 's';\n      const more = users.length === 0 ? '' : ':\\n';\n      this.npm.output(`\\n@${entity} has ${users.length} user${plural}${more}`);\n      this.npm.output(columns(users, {\n        padding: 1\n      }));\n    }\n  }\n\n  async listTeams(entity, opts) {\n    const teams = (await libteam.lsTeams(entity, opts)).sort();\n    if (opts.json) this.npm.output(JSON.stringify(teams, null, 2));else if (opts.parseable) this.npm.output(teams.join('\\n'));else if (!opts.silent && opts.loglevel !== 'silent') {\n      const plural = teams.length === 1 ? '' : 's';\n      const more = teams.length === 0 ? '' : ':\\n';\n      this.npm.output(`\\n@${entity} has ${teams.length} team${plural}${more}`);\n      this.npm.output(columns(teams.map(t => `@${t}`), {\n        padding: 1\n      }));\n    }\n  }\n\n}\n\nmodule.exports = Team;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/team.js"],"names":["columns","require","libteam","otplease","BaseCommand","Team","description","name","usage","params","completion","opts","conf","argv","remain","subcommands","length","includes","Error","exec","args","cb","team","then","catch","cmd","entity","user","npm","flatOptions","replace","create","destroy","add","rm","match","listUsers","listTeams","json","output","JSON","stringify","created","parseable","silent","loglevel","deleted","added","removed","users","lsUsers","sort","join","plural","more","padding","teams","lsTeams","map","t","module","exports"],"mappings":"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","sourcesContent":["const columns = require('cli-columns')\nconst libteam = require('libnpmteam')\n\nconst otplease = require('./utils/otplease.js')\n\nconst BaseCommand = require('./base-command.js')\nclass Team extends BaseCommand {\n  static get description () {\n    return 'Manage organization teams and team memberships'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'team'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return [\n      'create <scope:team> [--otp <otpcode>]',\n      'destroy <scope:team> [--otp <otpcode>]',\n      'add <scope:team> <user> [--otp <otpcode>]',\n      'rm <scope:team> <user> [--otp <otpcode>]',\n      'ls <scope>|<scope:team>',\n    ]\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return [\n      'registry',\n      'otp',\n      'parseable',\n      'json',\n    ]\n  }\n\n  async completion (opts) {\n    const { conf: { argv: { remain: argv } } } = opts\n    const subcommands = ['create', 'destroy', 'add', 'rm', 'ls']\n\n    if (argv.length === 2)\n      return subcommands\n\n    if (subcommands.includes(argv[2]))\n      return []\n\n    throw new Error(argv[2] + ' not recognized')\n  }\n\n  exec (args, cb) {\n    this.team(args).then(() => cb()).catch(cb)\n  }\n\n  async team ([cmd, entity = '', user = '']) {\n    // Entities are in the format <scope>:<team>\n    // XXX: \"description\" option to libnpmteam is used as a description of the\n    // team, but in npm's options, this is a boolean meaning \"show the\n    // description in npm search output\".  Hence its being set to null here.\n    await otplease(this.npm.flatOptions, opts => {\n      entity = entity.replace(/^@/, '')\n      switch (cmd) {\n        case 'create': return this.create(entity, opts)\n        case 'destroy': return this.destroy(entity, opts)\n        case 'add': return this.add(entity, user, opts)\n        case 'rm': return this.rm(entity, user, opts)\n        case 'ls': {\n          const match = entity.match(/[^:]+:.+/)\n          if (match)\n            return this.listUsers(entity, opts)\n          else\n            return this.listTeams(entity, opts)\n        }\n        default:\n          throw this.usage\n      }\n    })\n  }\n\n  async create (entity, opts) {\n    await libteam.create(entity, opts)\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        created: true,\n        team: entity,\n      }))\n    } else if (opts.parseable)\n      this.npm.output(`${entity}\\tcreated`)\n    else if (!opts.silent && opts.loglevel !== 'silent')\n      this.npm.output(`+@${entity}`)\n  }\n\n  async destroy (entity, opts) {\n    await libteam.destroy(entity, opts)\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        deleted: true,\n        team: entity,\n      }))\n    } else if (opts.parseable)\n      this.npm.output(`${entity}\\tdeleted`)\n    else if (!opts.silent && opts.loglevel !== 'silent')\n      this.npm.output(`-@${entity}`)\n  }\n\n  async add (entity, user, opts) {\n    await libteam.add(user, entity, opts)\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        added: true,\n        team: entity,\n        user,\n      }))\n    } else if (opts.parseable)\n      this.npm.output(`${user}\\t${entity}\\tadded`)\n    else if (!opts.silent && opts.loglevel !== 'silent')\n      this.npm.output(`${user} added to @${entity}`)\n  }\n\n  async rm (entity, user, opts) {\n    await libteam.rm(user, entity, opts)\n    if (opts.json) {\n      this.npm.output(JSON.stringify({\n        removed: true,\n        team: entity,\n        user,\n      }))\n    } else if (opts.parseable)\n      this.npm.output(`${user}\\t${entity}\\tremoved`)\n    else if (!opts.silent && opts.loglevel !== 'silent')\n      this.npm.output(`${user} removed from @${entity}`)\n  }\n\n  async listUsers (entity, opts) {\n    const users = (await libteam.lsUsers(entity, opts)).sort()\n    if (opts.json)\n      this.npm.output(JSON.stringify(users, null, 2))\n    else if (opts.parseable)\n      this.npm.output(users.join('\\n'))\n    else if (!opts.silent && opts.loglevel !== 'silent') {\n      const plural = users.length === 1 ? '' : 's'\n      const more = users.length === 0 ? '' : ':\\n'\n      this.npm.output(`\\n@${entity} has ${users.length} user${plural}${more}`)\n      this.npm.output(columns(users, { padding: 1 }))\n    }\n  }\n\n  async listTeams (entity, opts) {\n    const teams = (await libteam.lsTeams(entity, opts)).sort()\n    if (opts.json)\n      this.npm.output(JSON.stringify(teams, null, 2))\n    else if (opts.parseable)\n      this.npm.output(teams.join('\\n'))\n    else if (!opts.silent && opts.loglevel !== 'silent') {\n      const plural = teams.length === 1 ? '' : 's'\n      const more = teams.length === 0 ? '' : ':\\n'\n      this.npm.output(`\\n@${entity} has ${teams.length} team${plural}${more}`)\n      this.npm.output(columns(teams.map(t => `@${t}`), { padding: 1 }))\n    }\n  }\n}\nmodule.exports = Team\n"]},"metadata":{},"sourceType":"script"}