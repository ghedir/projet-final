{"ast":null,"code":"const crypto = require('crypto');\n\nconst {\n  dirname,\n  basename,\n  resolve\n} = require('path'); // use sha1 because it's faster, and collisions extremely unlikely anyway\n\n\nconst pathSafeHash = s => crypto.createHash('sha1').update(s).digest('base64').replace(/[^a-zA-Z0-9]+/g, '').substr(0, 8);\n\nconst retirePath = from => {\n  const d = dirname(from);\n  const b = basename(from);\n  const hash = pathSafeHash(from);\n  return resolve(d, `.${b}-${hash}`);\n};\n\nmodule.exports = retirePath;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/@npmcli/arborist/lib/retire-path.js"],"names":["crypto","require","dirname","basename","resolve","pathSafeHash","s","createHash","update","digest","replace","substr","retirePath","from","d","b","hash","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;AAACC,EAAAA,OAAD;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,IAA+BH,OAAO,CAAC,MAAD,CAA5C,C,CAEA;;;AACA,MAAMI,YAAY,GAAGC,CAAC,IACpBN,MAAM,CAACO,UAAP,CAAkB,MAAlB,EACGC,MADH,CACUF,CADV,EAEGG,MAFH,CAEU,QAFV,EAGGC,OAHH,CAGW,gBAHX,EAG6B,EAH7B,EAIGC,MAJH,CAIU,CAJV,EAIa,CAJb,CADF;;AAOA,MAAMC,UAAU,GAAGC,IAAI,IAAI;AACzB,QAAMC,CAAC,GAAGZ,OAAO,CAACW,IAAD,CAAjB;AACA,QAAME,CAAC,GAAGZ,QAAQ,CAACU,IAAD,CAAlB;AACA,QAAMG,IAAI,GAAGX,YAAY,CAACQ,IAAD,CAAzB;AACA,SAAOT,OAAO,CAACU,CAAD,EAAK,IAAGC,CAAE,IAAGC,IAAK,EAAlB,CAAd;AACD,CALD;;AAOAC,MAAM,CAACC,OAAP,GAAiBN,UAAjB","sourcesContent":["const crypto = require('crypto')\nconst {dirname, basename, resolve} = require('path')\n\n// use sha1 because it's faster, and collisions extremely unlikely anyway\nconst pathSafeHash = s =>\n  crypto.createHash('sha1')\n    .update(s)\n    .digest('base64')\n    .replace(/[^a-zA-Z0-9]+/g, '')\n    .substr(0, 8)\n\nconst retirePath = from => {\n  const d = dirname(from)\n  const b = basename(from)\n  const hash = pathSafeHash(from)\n  return resolve(d, `.${b}-${hash}`)\n}\n\nmodule.exports = retirePath\n"]},"metadata":{},"sourceType":"script"}