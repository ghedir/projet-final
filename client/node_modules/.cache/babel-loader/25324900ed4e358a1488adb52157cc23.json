{"ast":null,"code":"const BaseCommand = require('./base-command.js');\n\nclass Set extends BaseCommand {\n  static get description() {\n    return 'Set a value in the npm configuration';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'set';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get usage() {\n    return ['<key>=<value> [<key>=<value> ...] (See `npm config`)'];\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  async completion(opts) {\n    return this.npm.commands.config.completion(opts);\n  }\n\n  exec(args, cb) {\n    if (!args.length) return cb(this.usageError());\n    this.npm.commands.config(['set'].concat(args), cb);\n  }\n\n}\n\nmodule.exports = Set;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/set.js"],"names":["BaseCommand","require","Set","description","name","usage","completion","opts","npm","commands","config","exec","args","cb","length","usageError","concat","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAA3B;;AAEA,MAAMC,GAAN,SAAkBF,WAAlB,CAA8B;AACN,aAAXG,WAAW,GAAI;AACxB,WAAO,sCAAP;AACD;AAED;;;AACe,aAAJC,IAAI,GAAI;AACjB,WAAO,KAAP;AACD;AAED;;;AACgB,aAALC,KAAK,GAAI;AAClB,WAAO,CAAC,sDAAD,CAAP;AACD;AAED;;;AACgB,QAAVC,UAAU,CAAEC,IAAF,EAAQ;AACtB,WAAO,KAAKC,GAAL,CAASC,QAAT,CAAkBC,MAAlB,CAAyBJ,UAAzB,CAAoCC,IAApC,CAAP;AACD;;AAEDI,EAAAA,IAAI,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACd,QAAI,CAACD,IAAI,CAACE,MAAV,EACE,OAAOD,EAAE,CAAC,KAAKE,UAAL,EAAD,CAAT;AACF,SAAKP,GAAL,CAASC,QAAT,CAAkBC,MAAlB,CAAyB,CAAC,KAAD,EAAQM,MAAR,CAAeJ,IAAf,CAAzB,EAA+CC,EAA/C;AACD;;AAxB2B;;AA0B9BI,MAAM,CAACC,OAAP,GAAiBhB,GAAjB","sourcesContent":["const BaseCommand = require('./base-command.js')\n\nclass Set extends BaseCommand {\n  static get description () {\n    return 'Set a value in the npm configuration'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'set'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['<key>=<value> [<key>=<value> ...] (See `npm config`)']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  async completion (opts) {\n    return this.npm.commands.config.completion(opts)\n  }\n\n  exec (args, cb) {\n    if (!args.length)\n      return cb(this.usageError())\n    this.npm.commands.config(['set'].concat(args), cb)\n  }\n}\nmodule.exports = Set\n"]},"metadata":{},"sourceType":"script"}