{"ast":null,"code":"'use strict';\n\nconst fs = require('@npmcli/fs');\n\nconst fixOwner = require('./fix-owner');\n\nconst path = require('path');\n\nmodule.exports.mkdir = mktmpdir;\n\nfunction mktmpdir(cache, opts = {}) {\n  const {\n    tmpPrefix\n  } = opts;\n  const tmpDir = path.join(cache, 'tmp');\n  return fs.mkdir(tmpDir, {\n    recursive: true,\n    owner: 'inherit'\n  }).then(() => {\n    // do not use path.join(), it drops the trailing / if tmpPrefix is unset\n    const target = `${tmpDir}${path.sep}${tmpPrefix || ''}`;\n    return fs.mkdtemp(target, {\n      owner: 'inherit'\n    });\n  });\n}\n\nmodule.exports.withTmp = withTmp;\n\nfunction withTmp(cache, opts, cb) {\n  if (!cb) {\n    cb = opts;\n    opts = {};\n  }\n\n  return fs.withTempDir(path.join(cache, 'tmp'), cb, opts);\n}\n\nmodule.exports.fix = fixtmpdir;\n\nfunction fixtmpdir(cache) {\n  return fixOwner(cache, path.join(cache, 'tmp'));\n}","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/cacache/lib/util/tmp.js"],"names":["fs","require","fixOwner","path","module","exports","mkdir","mktmpdir","cache","opts","tmpPrefix","tmpDir","join","recursive","owner","then","target","sep","mkdtemp","withTmp","cb","withTempDir","fix","fixtmpdir"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,YAAD,CAAlB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEAG,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBC,QAAvB;;AAEA,SAASA,QAAT,CAAmBC,KAAnB,EAA0BC,IAAI,GAAG,EAAjC,EAAqC;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,IAAtB;AACA,QAAME,MAAM,GAAGR,IAAI,CAACS,IAAL,CAAUJ,KAAV,EAAiB,KAAjB,CAAf;AACA,SAAOR,EAAE,CAACM,KAAH,CAASK,MAAT,EAAiB;AAAEE,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAAjB,EACJC,IADI,CACC,MAAM;AACV;AACA,UAAMC,MAAM,GAAI,GAAEL,MAAO,GAAER,IAAI,CAACc,GAAI,GAAEP,SAAS,IAAI,EAAG,EAAtD;AACA,WAAOV,EAAE,CAACkB,OAAH,CAAWF,MAAX,EAAmB;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAnB,CAAP;AACD,GALI,CAAP;AAMD;;AAEDV,MAAM,CAACC,OAAP,CAAec,OAAf,GAAyBA,OAAzB;;AAEA,SAASA,OAAT,CAAkBX,KAAlB,EAAyBC,IAAzB,EAA+BW,EAA/B,EAAmC;AACjC,MAAI,CAACA,EAAL,EAAS;AACPA,IAAAA,EAAE,GAAGX,IAAL;AACAA,IAAAA,IAAI,GAAG,EAAP;AACD;;AACD,SAAOT,EAAE,CAACqB,WAAH,CAAelB,IAAI,CAACS,IAAL,CAAUJ,KAAV,EAAiB,KAAjB,CAAf,EAAwCY,EAAxC,EAA4CX,IAA5C,CAAP;AACD;;AAEDL,MAAM,CAACC,OAAP,CAAeiB,GAAf,GAAqBC,SAArB;;AAEA,SAASA,SAAT,CAAoBf,KAApB,EAA2B;AACzB,SAAON,QAAQ,CAACM,KAAD,EAAQL,IAAI,CAACS,IAAL,CAAUJ,KAAV,EAAiB,KAAjB,CAAR,CAAf;AACD","sourcesContent":["'use strict'\n\nconst fs = require('@npmcli/fs')\n\nconst fixOwner = require('./fix-owner')\nconst path = require('path')\n\nmodule.exports.mkdir = mktmpdir\n\nfunction mktmpdir (cache, opts = {}) {\n  const { tmpPrefix } = opts\n  const tmpDir = path.join(cache, 'tmp')\n  return fs.mkdir(tmpDir, { recursive: true, owner: 'inherit' })\n    .then(() => {\n      // do not use path.join(), it drops the trailing / if tmpPrefix is unset\n      const target = `${tmpDir}${path.sep}${tmpPrefix || ''}`\n      return fs.mkdtemp(target, { owner: 'inherit' })\n    })\n}\n\nmodule.exports.withTmp = withTmp\n\nfunction withTmp (cache, opts, cb) {\n  if (!cb) {\n    cb = opts\n    opts = {}\n  }\n  return fs.withTempDir(path.join(cache, 'tmp'), cb, opts)\n}\n\nmodule.exports.fix = fixtmpdir\n\nfunction fixtmpdir (cache) {\n  return fixOwner(cache, path.join(cache, 'tmp'))\n}\n"]},"metadata":{},"sourceType":"script"}