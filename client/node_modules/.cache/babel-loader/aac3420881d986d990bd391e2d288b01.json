{"ast":null,"code":"'use strict';\n\nclass AbortError extends Error {\n  constructor(message) {\n    super(message);\n    this.code = 'FETCH_ABORTED';\n    this.type = 'aborted';\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n  get name() {\n    return 'AbortError';\n  } // don't allow name to be overridden, but don't throw either\n\n\n  set name(s) {}\n\n}\n\nmodule.exports = AbortError;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/minipass-fetch/lib/abort-error.js"],"names":["AbortError","Error","constructor","message","code","type","captureStackTrace","name","s","module","exports"],"mappings":"AAAA;;AACA,MAAMA,UAAN,SAAyBC,KAAzB,CAA+B;AAC7BC,EAAAA,WAAW,CAAEC,OAAF,EAAW;AACpB,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,eAAZ;AACA,SAAKC,IAAL,GAAY,SAAZ;AACAJ,IAAAA,KAAK,CAACK,iBAAN,CAAwB,IAAxB,EAA8B,KAAKJ,WAAnC;AACD;;AAEO,MAAJK,IAAI,GAAI;AACV,WAAO,YAAP;AACD,GAV4B,CAY7B;;;AACQ,MAAJA,IAAI,CAAEC,CAAF,EAAK,CAAE;;AAbc;;AAe/BC,MAAM,CAACC,OAAP,GAAiBV,UAAjB","sourcesContent":["'use strict'\nclass AbortError extends Error {\n  constructor (message) {\n    super(message)\n    this.code = 'FETCH_ABORTED'\n    this.type = 'aborted'\n    Error.captureStackTrace(this, this.constructor)\n  }\n\n  get name () {\n    return 'AbortError'\n  }\n\n  // don't allow name to be overridden, but don't throw either\n  set name (s) {}\n}\nmodule.exports = AbortError\n"]},"metadata":{},"sourceType":"script"}