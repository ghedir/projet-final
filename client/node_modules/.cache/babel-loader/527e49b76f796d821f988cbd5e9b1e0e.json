{"ast":null,"code":"const BaseCommand = require('./base-command.js');\n\nclass Root extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Display npm root';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'root';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get params() {\n    return ['global'];\n  }\n\n  exec(args, cb) {\n    this.root(args).then(() => cb()).catch(cb);\n  }\n\n  async root() {\n    this.npm.output(this.npm.dir);\n  }\n\n}\n\nmodule.exports = Root;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/root.js"],"names":["BaseCommand","require","Root","description","name","params","exec","args","cb","root","then","catch","npm","output","dir","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAA3B;;AACA,MAAMC,IAAN,SAAmBF,WAAnB,CAA+B;AAC7B;AACsB,aAAXG,WAAW,GAAI;AACxB,WAAO,kBAAP;AACD;AAED;;;AACe,aAAJC,IAAI,GAAI;AACjB,WAAO,MAAP;AACD;AAED;;;AACiB,aAANC,MAAM,GAAI;AACnB,WAAO,CAAC,QAAD,CAAP;AACD;;AAEDC,EAAAA,IAAI,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACd,SAAKC,IAAL,CAAUF,IAAV,EAAgBG,IAAhB,CAAqB,MAAMF,EAAE,EAA7B,EAAiCG,KAAjC,CAAuCH,EAAvC;AACD;;AAES,QAAJC,IAAI,GAAI;AACZ,SAAKG,GAAL,CAASC,MAAT,CAAgB,KAAKD,GAAL,CAASE,GAAzB;AACD;;AAtB4B;;AAwB/BC,MAAM,CAACC,OAAP,GAAiBd,IAAjB","sourcesContent":["const BaseCommand = require('./base-command.js')\nclass Root extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Display npm root'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'root'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['global']\n  }\n\n  exec (args, cb) {\n    this.root(args).then(() => cb()).catch(cb)\n  }\n\n  async root () {\n    this.npm.output(this.npm.dir)\n  }\n}\nmodule.exports = Root\n"]},"metadata":{},"sourceType":"script"}