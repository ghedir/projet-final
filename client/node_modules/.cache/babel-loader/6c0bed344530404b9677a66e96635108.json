{"ast":null,"code":"// pass in an arborist object, and it'll output the data about what\n// was done, what was audited, etc.\n//\n// added ## packages, removed ## packages, and audited ## packages in 19.157s\n//\n// 1 package is looking for funding\n//   run `npm fund` for details\n//\n// found 37 vulnerabilities (5 low, 7 moderate, 25 high)\n//   run `npm audit fix` to fix them, or `npm audit` for details\nconst log = require('npmlog');\n\nconst {\n  depth\n} = require('treeverse');\n\nconst ms = require('ms');\n\nconst auditReport = require('npm-audit-report');\n\nconst {\n  readTree: getFundingInfo\n} = require('libnpmfund');\n\nconst auditError = require('./audit-error.js'); // TODO: output JSON if flatOptions.json is true\n\n\nconst reifyOutput = (npm, arb) => {\n  const {\n    diff,\n    actualTree\n  } = arb; // note: fails and crashes if we're running audit fix and there was an error\n  // which is a good thing, because there's no point printing all this other\n  // stuff in that case!\n\n  const auditReport = auditError(npm, arb.auditReport) ? null : arb.auditReport; // don't print any info in --silent mode, but we still need to\n  // set the exitCode properly from the audit report, if we have one.\n\n  if (log.levels[log.level] > log.levels.error) {\n    getAuditReport(npm, auditReport);\n    return;\n  }\n\n  const summary = {\n    added: 0,\n    removed: 0,\n    changed: 0,\n    audited: auditReport && !auditReport.error ? actualTree.inventory.size : 0,\n    funding: 0\n  };\n\n  if (diff) {\n    depth({\n      tree: diff,\n      visit: d => {\n        switch (d.action) {\n          case 'REMOVE':\n            summary.removed++;\n            break;\n\n          case 'ADD':\n            actualTree.inventory.has(d.ideal) && summary.added++;\n            break;\n\n          case 'CHANGE':\n            summary.changed++;\n            break;\n\n          default:\n            return;\n        }\n\n        const node = d.actual || d.ideal;\n        log.silly(d.action, node.location);\n      },\n      getChildren: d => d.children\n    });\n  }\n\n  if (npm.flatOptions.fund) {\n    const fundingInfo = getFundingInfo(actualTree, {\n      countOnly: true\n    });\n    summary.funding = fundingInfo.length;\n  }\n\n  if (npm.flatOptions.json) {\n    if (auditReport) {\n      // call this to set the exit code properly\n      getAuditReport(npm, auditReport);\n      summary.audit = npm.command === 'audit' ? auditReport : auditReport.toJSON().metadata;\n    }\n\n    npm.output(JSON.stringify(summary, 0, 2));\n  } else {\n    packagesChangedMessage(npm, summary);\n    packagesFundingMessage(npm, summary);\n    printAuditReport(npm, auditReport);\n  }\n}; // if we're running `npm audit fix`, then we print the full audit report\n// at the end if there's still stuff, because it's silly for `npm audit`\n// to tell you to run `npm audit` for details.  otherwise, use the summary\n// report.  if we get here, we know it's not quiet or json.\n// If the loglevel is set higher than 'error', then we just run the report\n// to get the exitCode set appropriately.\n\n\nconst printAuditReport = (npm, report) => {\n  const res = getAuditReport(npm, report);\n  if (!res || !res.report) return;\n  npm.output(`\\n${res.report}`);\n};\n\nconst getAuditReport = (npm, report) => {\n  if (!report) return; // when in silent mode, we print nothing.  the JSON output is\n  // going to just JSON.stringify() the report object.\n\n  const reporter = log.levels[log.level] > log.levels.error ? 'quiet' : npm.flatOptions.json ? 'quiet' : npm.command !== 'audit' ? 'install' : 'detail';\n  const defaultAuditLevel = npm.command !== 'audit' ? 'none' : 'low';\n  const auditLevel = npm.flatOptions.auditLevel || defaultAuditLevel;\n  const res = auditReport(report, {\n    reporter,\n    ...npm.flatOptions,\n    auditLevel\n  });\n  if (npm.command === 'audit') process.exitCode = process.exitCode || res.exitCode;\n  return res;\n};\n\nconst packagesChangedMessage = (npm, {\n  added,\n  removed,\n  changed,\n  audited\n}) => {\n  const msg = ['\\n'];\n\n  if (added === 0 && removed === 0 && changed === 0) {\n    msg.push('up to date');\n    if (audited) msg.push(', ');\n  } else {\n    if (added) msg.push(`added ${added} package${added === 1 ? '' : 's'}`);\n\n    if (removed) {\n      if (added) msg.push(', ');\n      if (added && !audited && !changed) msg.push('and ');\n      msg.push(`removed ${removed} package${removed === 1 ? '' : 's'}`);\n    }\n\n    if (changed) {\n      if (added || removed) msg.push(', ');\n      if (!audited && (added || removed)) msg.push('and ');\n      msg.push(`changed ${changed} package${changed === 1 ? '' : 's'}`);\n    }\n\n    if (audited) msg.push(', and ');\n  }\n\n  if (audited) msg.push(`audited ${audited} package${audited === 1 ? '' : 's'}`);\n  msg.push(` in ${ms(Date.now() - npm.started)}`);\n  npm.output(msg.join(''));\n};\n\nconst packagesFundingMessage = (npm, {\n  funding\n}) => {\n  if (!funding) return;\n  npm.output('');\n  const pkg = funding === 1 ? 'package' : 'packages';\n  const is = funding === 1 ? 'is' : 'are';\n  npm.output(`${funding} ${pkg} ${is} looking for funding`);\n  npm.output('  run `npm fund` for details');\n};\n\nmodule.exports = reifyOutput;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/utils/reify-output.js"],"names":["log","require","depth","ms","auditReport","readTree","getFundingInfo","auditError","reifyOutput","npm","arb","diff","actualTree","levels","level","error","getAuditReport","summary","added","removed","changed","audited","inventory","size","funding","tree","visit","d","action","has","ideal","node","actual","silly","location","getChildren","children","flatOptions","fund","fundingInfo","countOnly","length","json","audit","command","toJSON","metadata","output","JSON","stringify","packagesChangedMessage","packagesFundingMessage","printAuditReport","report","res","reporter","defaultAuditLevel","auditLevel","process","exitCode","msg","push","Date","now","started","join","pkg","is","module","exports"],"mappings":"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","sourcesContent":["// pass in an arborist object, and it'll output the data about what\n// was done, what was audited, etc.\n//\n// added ## packages, removed ## packages, and audited ## packages in 19.157s\n//\n// 1 package is looking for funding\n//   run `npm fund` for details\n//\n// found 37 vulnerabilities (5 low, 7 moderate, 25 high)\n//   run `npm audit fix` to fix them, or `npm audit` for details\n\nconst log = require('npmlog')\nconst { depth } = require('treeverse')\nconst ms = require('ms')\nconst auditReport = require('npm-audit-report')\nconst { readTree: getFundingInfo } = require('libnpmfund')\nconst auditError = require('./audit-error.js')\n\n// TODO: output JSON if flatOptions.json is true\nconst reifyOutput = (npm, arb) => {\n  const { diff, actualTree } = arb\n\n  // note: fails and crashes if we're running audit fix and there was an error\n  // which is a good thing, because there's no point printing all this other\n  // stuff in that case!\n  const auditReport = auditError(npm, arb.auditReport) ? null : arb.auditReport\n\n  // don't print any info in --silent mode, but we still need to\n  // set the exitCode properly from the audit report, if we have one.\n  if (log.levels[log.level] > log.levels.error) {\n    getAuditReport(npm, auditReport)\n    return\n  }\n\n  const summary = {\n    added: 0,\n    removed: 0,\n    changed: 0,\n    audited: auditReport && !auditReport.error ? actualTree.inventory.size : 0,\n    funding: 0,\n  }\n\n  if (diff) {\n    depth({\n      tree: diff,\n      visit: d => {\n        switch (d.action) {\n          case 'REMOVE':\n            summary.removed++\n            break\n          case 'ADD':\n            actualTree.inventory.has(d.ideal) && summary.added++\n            break\n          case 'CHANGE':\n            summary.changed++\n            break\n          default:\n            return\n        }\n        const node = d.actual || d.ideal\n        log.silly(d.action, node.location)\n      },\n      getChildren: d => d.children,\n    })\n  }\n\n  if (npm.flatOptions.fund) {\n    const fundingInfo = getFundingInfo(actualTree, { countOnly: true })\n    summary.funding = fundingInfo.length\n  }\n\n  if (npm.flatOptions.json) {\n    if (auditReport) {\n      // call this to set the exit code properly\n      getAuditReport(npm, auditReport)\n      summary.audit = npm.command === 'audit' ? auditReport\n        : auditReport.toJSON().metadata\n    }\n    npm.output(JSON.stringify(summary, 0, 2))\n  } else {\n    packagesChangedMessage(npm, summary)\n    packagesFundingMessage(npm, summary)\n    printAuditReport(npm, auditReport)\n  }\n}\n\n// if we're running `npm audit fix`, then we print the full audit report\n// at the end if there's still stuff, because it's silly for `npm audit`\n// to tell you to run `npm audit` for details.  otherwise, use the summary\n// report.  if we get here, we know it's not quiet or json.\n// If the loglevel is set higher than 'error', then we just run the report\n// to get the exitCode set appropriately.\nconst printAuditReport = (npm, report) => {\n  const res = getAuditReport(npm, report)\n  if (!res || !res.report)\n    return\n  npm.output(`\\n${res.report}`)\n}\n\nconst getAuditReport = (npm, report) => {\n  if (!report)\n    return\n\n  // when in silent mode, we print nothing.  the JSON output is\n  // going to just JSON.stringify() the report object.\n  const reporter = log.levels[log.level] > log.levels.error ? 'quiet'\n    : npm.flatOptions.json ? 'quiet'\n    : npm.command !== 'audit' ? 'install'\n    : 'detail'\n  const defaultAuditLevel = npm.command !== 'audit' ? 'none' : 'low'\n  const auditLevel = npm.flatOptions.auditLevel || defaultAuditLevel\n\n  const res = auditReport(report, {\n    reporter,\n    ...npm.flatOptions,\n    auditLevel,\n  })\n  if (npm.command === 'audit')\n    process.exitCode = process.exitCode || res.exitCode\n  return res\n}\n\nconst packagesChangedMessage = (npm, { added, removed, changed, audited }) => {\n  const msg = ['\\n']\n  if (added === 0 && removed === 0 && changed === 0) {\n    msg.push('up to date')\n    if (audited)\n      msg.push(', ')\n  } else {\n    if (added)\n      msg.push(`added ${added} package${added === 1 ? '' : 's'}`)\n\n    if (removed) {\n      if (added)\n        msg.push(', ')\n\n      if (added && !audited && !changed)\n        msg.push('and ')\n\n      msg.push(`removed ${removed} package${removed === 1 ? '' : 's'}`)\n    }\n    if (changed) {\n      if (added || removed)\n        msg.push(', ')\n\n      if (!audited && (added || removed))\n        msg.push('and ')\n\n      msg.push(`changed ${changed} package${changed === 1 ? '' : 's'}`)\n    }\n    if (audited)\n      msg.push(', and ')\n  }\n  if (audited)\n    msg.push(`audited ${audited} package${audited === 1 ? '' : 's'}`)\n\n  msg.push(` in ${ms(Date.now() - npm.started)}`)\n  npm.output(msg.join(''))\n}\n\nconst packagesFundingMessage = (npm, { funding }) => {\n  if (!funding)\n    return\n\n  npm.output('')\n  const pkg = funding === 1 ? 'package' : 'packages'\n  const is = funding === 1 ? 'is' : 'are'\n  npm.output(`${funding} ${pkg} ${is} looking for funding`)\n  npm.output('  run `npm fund` for details')\n}\n\nmodule.exports = reifyOutput\n"]},"metadata":{},"sourceType":"script"}