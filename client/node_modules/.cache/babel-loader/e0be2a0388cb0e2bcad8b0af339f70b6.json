{"ast":null,"code":"/* eslint camelcase: \"off\" */\nconst isWindows = require('./is-windows.js');\n\nconst setPATH = require('./set-path.js');\n\nconst {\n  resolve\n} = require('path');\n\nconst npm_config_node_gyp = require.resolve('node-gyp/bin/node-gyp.js');\n\nconst makeSpawnArgs = options => {\n  const {\n    event,\n    path,\n    scriptShell = isWindows ? process.env.ComSpec || 'cmd' : 'sh',\n    env = {},\n    stdio,\n    cmd,\n    stdioString = false\n  } = options;\n  const isCmd = /(?:^|\\\\)cmd(?:\\.exe)?$/i.test(scriptShell);\n  const args = isCmd ? ['/d', '/s', '/c', cmd] : ['-c', cmd];\n  const spawnOpts = {\n    env: setPATH(path, { // we need to at least save the PATH environment var\n      ...process.env,\n      ...env,\n      npm_package_json: resolve(path, 'package.json'),\n      npm_lifecycle_event: event,\n      npm_lifecycle_script: cmd,\n      npm_config_node_gyp\n    }),\n    stdioString,\n    stdio,\n    cwd: path,\n    ...(isCmd ? {\n      windowsVerbatimArguments: true\n    } : {})\n  };\n  return [scriptShell, args, spawnOpts];\n};\n\nmodule.exports = makeSpawnArgs;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/@npmcli/run-script/lib/make-spawn-args.js"],"names":["isWindows","require","setPATH","resolve","npm_config_node_gyp","makeSpawnArgs","options","event","path","scriptShell","process","env","ComSpec","stdio","cmd","stdioString","isCmd","test","args","spawnOpts","npm_package_json","npm_lifecycle_event","npm_lifecycle_script","cwd","windowsVerbatimArguments","module","exports"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,eAAD,CAAvB;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAYF,OAAO,CAAC,MAAD,CAAzB;;AACA,MAAMG,mBAAmB,GAAGH,OAAO,CAACE,OAAR,CAAgB,0BAAhB,CAA5B;;AAEA,MAAME,aAAa,GAAGC,OAAO,IAAI;AAC/B,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,WAAW,GAAGT,SAAS,GAAGU,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,KAA1B,GAAkC,IAHrD;AAIJD,IAAAA,GAAG,GAAG,EAJF;AAKJE,IAAAA,KALI;AAMJC,IAAAA,GANI;AAOJC,IAAAA,WAAW,GAAG;AAPV,MAQFT,OARJ;AAUA,QAAMU,KAAK,GAAG,0BAA0BC,IAA1B,CAA+BR,WAA/B,CAAd;AACA,QAAMS,IAAI,GAAGF,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmBF,GAAnB,CAAH,GAA6B,CAAC,IAAD,EAAOA,GAAP,CAA/C;AAEA,QAAMK,SAAS,GAAG;AAChBR,IAAAA,GAAG,EAAET,OAAO,CAACM,IAAD,EAAO,EACjB;AACA,SAAGE,OAAO,CAACC,GAFM;AAGjB,SAAGA,GAHc;AAIjBS,MAAAA,gBAAgB,EAAEjB,OAAO,CAACK,IAAD,EAAO,cAAP,CAJR;AAKjBa,MAAAA,mBAAmB,EAAEd,KALJ;AAMjBe,MAAAA,oBAAoB,EAAER,GANL;AAOjBV,MAAAA;AAPiB,KAAP,CADI;AAUhBW,IAAAA,WAVgB;AAWhBF,IAAAA,KAXgB;AAYhBU,IAAAA,GAAG,EAAEf,IAZW;AAahB,QAAIQ,KAAK,GAAG;AAAEQ,MAAAA,wBAAwB,EAAE;AAA5B,KAAH,GAAwC,EAAjD;AAbgB,GAAlB;AAgBA,SAAO,CAACf,WAAD,EAAcS,IAAd,EAAoBC,SAApB,CAAP;AACD,CA/BD;;AAiCAM,MAAM,CAACC,OAAP,GAAiBrB,aAAjB","sourcesContent":["/* eslint camelcase: \"off\" */\nconst isWindows = require('./is-windows.js')\nconst setPATH = require('./set-path.js')\nconst {resolve} = require('path')\nconst npm_config_node_gyp = require.resolve('node-gyp/bin/node-gyp.js')\n\nconst makeSpawnArgs = options => {\n  const {\n    event,\n    path,\n    scriptShell = isWindows ? process.env.ComSpec || 'cmd' : 'sh',\n    env = {},\n    stdio,\n    cmd,\n    stdioString = false,\n  } = options\n\n  const isCmd = /(?:^|\\\\)cmd(?:\\.exe)?$/i.test(scriptShell)\n  const args = isCmd ? ['/d', '/s', '/c', cmd] : ['-c', cmd]\n\n  const spawnOpts = {\n    env: setPATH(path, {\n      // we need to at least save the PATH environment var\n      ...process.env,\n      ...env,\n      npm_package_json: resolve(path, 'package.json'),\n      npm_lifecycle_event: event,\n      npm_lifecycle_script: cmd,\n      npm_config_node_gyp,\n    }),\n    stdioString,\n    stdio,\n    cwd: path,\n    ...(isCmd ? { windowsVerbatimArguments: true } : {}),\n  }\n\n  return [scriptShell, args, spawnOpts]\n}\n\nmodule.exports = makeSpawnArgs\n"]},"metadata":{},"sourceType":"script"}