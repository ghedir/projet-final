{"ast":null,"code":"const BaseCommand = require('./base-command.js');\n\nclass Prefix extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Display prefix';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'prefix';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get params() {\n    return ['global'];\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get usage() {\n    return ['[-g]'];\n  }\n\n  exec(args, cb) {\n    this.prefix(args).then(() => cb()).catch(cb);\n  }\n\n  async prefix(args) {\n    return this.npm.output(this.npm.prefix);\n  }\n\n}\n\nmodule.exports = Prefix;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/prefix.js"],"names":["BaseCommand","require","Prefix","description","name","params","usage","exec","args","cb","prefix","then","catch","npm","output","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAA3B;;AAEA,MAAMC,MAAN,SAAqBF,WAArB,CAAiC;AAC/B;AACsB,aAAXG,WAAW,GAAI;AACxB,WAAO,gBAAP;AACD;AAED;;;AACe,aAAJC,IAAI,GAAI;AACjB,WAAO,QAAP;AACD;AAED;;;AACiB,aAANC,MAAM,GAAI;AACnB,WAAO,CAAC,QAAD,CAAP;AACD;AAED;;;AACgB,aAALC,KAAK,GAAI;AAClB,WAAO,CAAC,MAAD,CAAP;AACD;;AAEDC,EAAAA,IAAI,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACd,SAAKC,MAAL,CAAYF,IAAZ,EAAkBG,IAAlB,CAAuB,MAAMF,EAAE,EAA/B,EAAmCG,KAAnC,CAAyCH,EAAzC;AACD;;AAEW,QAANC,MAAM,CAAEF,IAAF,EAAQ;AAClB,WAAO,KAAKK,GAAL,CAASC,MAAT,CAAgB,KAAKD,GAAL,CAASH,MAAzB,CAAP;AACD;;AA3B8B;;AA6BjCK,MAAM,CAACC,OAAP,GAAiBd,MAAjB","sourcesContent":["const BaseCommand = require('./base-command.js')\n\nclass Prefix extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Display prefix'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'prefix'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['global']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[-g]']\n  }\n\n  exec (args, cb) {\n    this.prefix(args).then(() => cb()).catch(cb)\n  }\n\n  async prefix (args) {\n    return this.npm.output(this.npm.prefix)\n  }\n}\nmodule.exports = Prefix\n"]},"metadata":{},"sourceType":"script"}