{"ast":null,"code":"import { CLEAR_ERROR, SET_ERROR, START_LOADING, STOP_LOADING } from \"../actions/appStateTypes\";\nconst initState = {\n  postList: [],\n  errors: null,\n  isLoading: {\n    state: false\n  }\n};\n\nconst appStateReducer = (state = initState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: {\n          state: true,\n          ref: payload\n        }\n      };\n\n    case STOP_LOADING:\n      return { ...state,\n        isLoading: {\n          state: false\n        }\n      };\n\n    case SET_ERROR:\n      return { ...state,\n        errors: payload\n      };\n\n    case CLEAR_ERROR:\n      return { ...state,\n        errors: null,\n        postList: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default appStateReducer;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/client/src/redux/reducers/appStateReducer.js"],"names":["CLEAR_ERROR","SET_ERROR","START_LOADING","STOP_LOADING","initState","postList","errors","isLoading","state","appStateReducer","type","payload","ref"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,aAAjC,EAAgDC,YAAhD,QAAoE,0BAApE;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAC,EADK;AAEdC,EAAAA,MAAM,EAAE,IAFM;AAGdC,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA;AAHG,CAAlB;;AAQA,MAAMC,eAAe,GAAG,CAACD,KAAK,GAAGJ,SAAT,EAAoB;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,KAA0C;AAC9D,UAAQD,IAAR;AACI,SAAKR,aAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHD,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE,IAAT;AAAeI,UAAAA,GAAG,EAAED;AAApB;AAFR,OAAP;;AAIJ,SAAKR,YAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHD,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAFR,OAAP;;AAIJ,SAAKP,SAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,MAAM,EAAEK;AAFL,OAAP;;AAIJ,SAAKX,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,MAAM,EAAE,IAFL;AAGHD,QAAAA,QAAQ,EAAC;AAHN,OAAP;;AAKJ;AACI,aAAOG,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeC,eAAf","sourcesContent":["import { CLEAR_ERROR, SET_ERROR, START_LOADING, STOP_LOADING } from \"../actions/appStateTypes\"\r\n\r\nconst initState = {\r\n    postList:[],\r\n    errors: null,\r\n    isLoading: {\r\n        state: false,\r\n    },\r\n}\r\n\r\nconst appStateReducer = (state = initState, { type, payload }) => {\r\n    switch (type) {\r\n        case START_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: { state: true, ref: payload }\r\n            }\r\n        case STOP_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: { state: false }\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: payload\r\n            }\r\n        case CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: null,\r\n                postList:null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default appStateReducer"]},"metadata":{},"sourceType":"module"}