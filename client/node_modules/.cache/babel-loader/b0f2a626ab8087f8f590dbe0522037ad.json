{"ast":null,"code":"const {\n  dirname,\n  sep\n} = require('path');\n\nconst fs = require('./fs.js');\n\nconst getOptions = require('./common/get-options.js');\n\nconst owner = require('./common/owner.js');\n\nconst mkdtemp = async (prefix, opts) => {\n  const options = getOptions(opts, {\n    copy: ['encoding', 'owner'],\n    wrap: 'encoding'\n  }); // mkdtemp relies on the trailing path separator to indicate if it should\n  // create a directory inside of the prefix. if that's the case then the root\n  // we infer ownership from is the prefix itself, otherwise it's the dirname\n  // /tmp -> /tmpABCDEF, infers from /\n  // /tmp/ -> /tmp/ABCDEF, infers from /tmp\n\n  const root = prefix.endsWith(sep) ? prefix : dirname(prefix);\n  const {\n    uid,\n    gid\n  } = await owner.validate(root, options.owner);\n  const result = await fs.mkdtemp(prefix, options);\n  await owner.update(result, uid, gid);\n  return result;\n};\n\nmodule.exports = mkdtemp;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/@npmcli/fs/lib/mkdtemp.js"],"names":["dirname","sep","require","fs","getOptions","owner","mkdtemp","prefix","opts","options","copy","wrap","root","endsWith","uid","gid","validate","result","update","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAmBC,OAAO,CAAC,MAAD,CAAhC;;AAEA,MAAMC,EAAE,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAA1B;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,mBAAD,CAArB;;AAEA,MAAMI,OAAO,GAAG,OAAOC,MAAP,EAAeC,IAAf,KAAwB;AACtC,QAAMC,OAAO,GAAGL,UAAU,CAACI,IAAD,EAAO;AAC/BE,IAAAA,IAAI,EAAE,CAAC,UAAD,EAAa,OAAb,CADyB;AAE/BC,IAAAA,IAAI,EAAE;AAFyB,GAAP,CAA1B,CADsC,CAMtC;AACA;AACA;AACA;AACA;;AACA,QAAMC,IAAI,GAAGL,MAAM,CAACM,QAAP,CAAgBZ,GAAhB,IAAuBM,MAAvB,GAAgCP,OAAO,CAACO,MAAD,CAApD;AACA,QAAM;AAAEO,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAe,MAAMV,KAAK,CAACW,QAAN,CAAeJ,IAAf,EAAqBH,OAAO,CAACJ,KAA7B,CAA3B;AAEA,QAAMY,MAAM,GAAG,MAAMd,EAAE,CAACG,OAAH,CAAWC,MAAX,EAAmBE,OAAnB,CAArB;AAEA,QAAMJ,KAAK,CAACa,MAAN,CAAaD,MAAb,EAAqBH,GAArB,EAA0BC,GAA1B,CAAN;AAEA,SAAOE,MAAP;AACD,CAnBD;;AAqBAE,MAAM,CAACC,OAAP,GAAiBd,OAAjB","sourcesContent":["const { dirname, sep } = require('path')\n\nconst fs = require('./fs.js')\nconst getOptions = require('./common/get-options.js')\nconst owner = require('./common/owner.js')\n\nconst mkdtemp = async (prefix, opts) => {\n  const options = getOptions(opts, {\n    copy: ['encoding', 'owner'],\n    wrap: 'encoding',\n  })\n\n  // mkdtemp relies on the trailing path separator to indicate if it should\n  // create a directory inside of the prefix. if that's the case then the root\n  // we infer ownership from is the prefix itself, otherwise it's the dirname\n  // /tmp -> /tmpABCDEF, infers from /\n  // /tmp/ -> /tmp/ABCDEF, infers from /tmp\n  const root = prefix.endsWith(sep) ? prefix : dirname(prefix)\n  const { uid, gid } = await owner.validate(root, options.owner)\n\n  const result = await fs.mkdtemp(prefix, options)\n\n  await owner.update(result, uid, gid)\n\n  return result\n}\n\nmodule.exports = mkdtemp\n"]},"metadata":{},"sourceType":"script"}