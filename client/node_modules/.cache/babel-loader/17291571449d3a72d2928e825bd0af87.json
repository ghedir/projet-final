{"ast":null,"code":"const log = require('npmlog');\n\nconst pingUtil = require('./utils/ping.js');\n\nconst BaseCommand = require('./base-command.js');\n\nclass Ping extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Ping npm registry';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get params() {\n    return ['registry'];\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'ping';\n  }\n\n  exec(args, cb) {\n    this.ping(args).then(() => cb()).catch(cb);\n  }\n\n  async ping(args) {\n    log.notice('PING', this.npm.config.get('registry'));\n    const start = Date.now();\n    const details = await pingUtil(this.npm.flatOptions);\n    const time = Date.now() - start;\n    log.notice('PONG', `${time}ms`);\n\n    if (this.npm.config.get('json')) {\n      this.npm.output(JSON.stringify({\n        registry: this.npm.config.get('registry'),\n        time,\n        details\n      }, null, 2));\n    } else if (Object.keys(details).length) log.notice('PONG', `${JSON.stringify(details, null, 2)}`);\n  }\n\n}\n\nmodule.exports = Ping;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/ping.js"],"names":["log","require","pingUtil","BaseCommand","Ping","description","params","name","exec","args","cb","ping","then","catch","notice","npm","config","get","start","Date","now","details","flatOptions","time","output","JSON","stringify","registry","Object","keys","length","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAxB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,mBAAD,CAA3B;;AAEA,MAAMG,IAAN,SAAmBD,WAAnB,CAA+B;AAC7B;AACsB,aAAXE,WAAW,GAAI;AACxB,WAAO,mBAAP;AACD;AAED;;;AACiB,aAANC,MAAM,GAAI;AACnB,WAAO,CAAC,UAAD,CAAP;AACD;AAED;;;AACe,aAAJC,IAAI,GAAI;AACjB,WAAO,MAAP;AACD;;AAEDC,EAAAA,IAAI,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACd,SAAKC,IAAL,CAAUF,IAAV,EAAgBG,IAAhB,CAAqB,MAAMF,EAAE,EAA7B,EAAiCG,KAAjC,CAAuCH,EAAvC;AACD;;AAES,QAAJC,IAAI,CAAEF,IAAF,EAAQ;AAChBT,IAAAA,GAAG,CAACc,MAAJ,CAAW,MAAX,EAAmB,KAAKC,GAAL,CAASC,MAAT,CAAgBC,GAAhB,CAAoB,UAApB,CAAnB;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAd;AACA,UAAMC,OAAO,GAAG,MAAMnB,QAAQ,CAAC,KAAKa,GAAL,CAASO,WAAV,CAA9B;AACA,UAAMC,IAAI,GAAGJ,IAAI,CAACC,GAAL,KAAaF,KAA1B;AACAlB,IAAAA,GAAG,CAACc,MAAJ,CAAW,MAAX,EAAoB,GAAES,IAAK,IAA3B;;AACA,QAAI,KAAKR,GAAL,CAASC,MAAT,CAAgBC,GAAhB,CAAoB,MAApB,CAAJ,EAAiC;AAC/B,WAAKF,GAAL,CAASS,MAAT,CAAgBC,IAAI,CAACC,SAAL,CAAe;AAC7BC,QAAAA,QAAQ,EAAE,KAAKZ,GAAL,CAASC,MAAT,CAAgBC,GAAhB,CAAoB,UAApB,CADmB;AAE7BM,QAAAA,IAF6B;AAG7BF,QAAAA;AAH6B,OAAf,EAIb,IAJa,EAIP,CAJO,CAAhB;AAKD,KAND,MAMO,IAAIO,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBS,MAAzB,EACL9B,GAAG,CAACc,MAAJ,CAAW,MAAX,EAAoB,GAAEW,IAAI,CAACC,SAAL,CAAeL,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAiC,EAAvD;AACH;;AAlC4B;;AAoC/BU,MAAM,CAACC,OAAP,GAAiB5B,IAAjB","sourcesContent":["const log = require('npmlog')\nconst pingUtil = require('./utils/ping.js')\nconst BaseCommand = require('./base-command.js')\n\nclass Ping extends BaseCommand {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Ping npm registry'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['registry']\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'ping'\n  }\n\n  exec (args, cb) {\n    this.ping(args).then(() => cb()).catch(cb)\n  }\n\n  async ping (args) {\n    log.notice('PING', this.npm.config.get('registry'))\n    const start = Date.now()\n    const details = await pingUtil(this.npm.flatOptions)\n    const time = Date.now() - start\n    log.notice('PONG', `${time}ms`)\n    if (this.npm.config.get('json')) {\n      this.npm.output(JSON.stringify({\n        registry: this.npm.config.get('registry'),\n        time,\n        details,\n      }, null, 2))\n    } else if (Object.keys(details).length)\n      log.notice('PONG', `${JSON.stringify(details, null, 2)}`)\n  }\n}\nmodule.exports = Ping\n"]},"metadata":{},"sourceType":"script"}