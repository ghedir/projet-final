{"ast":null,"code":"// prune extraneous packages\nconst Arborist = require('@npmcli/arborist');\n\nconst reifyFinish = require('./utils/reify-finish.js');\n\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js');\n\nclass Prune extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description() {\n    return 'Remove extraneous packages';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get name() {\n    return 'prune';\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get params() {\n    return ['omit', 'dry-run', 'json', ...super.params];\n  }\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n\n\n  static get usage() {\n    return ['[[<@scope>/]<pkg>...]'];\n  }\n\n  exec(args, cb) {\n    this.prune().then(() => cb()).catch(cb);\n  }\n\n  async prune() {\n    const where = this.npm.prefix;\n    const opts = { ...this.npm.flatOptions,\n      path: where,\n      log: this.npm.log,\n      workspaces: this.workspaceNames\n    };\n    const arb = new Arborist(opts);\n    await arb.prune(opts);\n    await reifyFinish(this.npm, arb);\n  }\n\n}\n\nmodule.exports = Prune;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/lib/prune.js"],"names":["Arborist","require","reifyFinish","ArboristWorkspaceCmd","Prune","description","name","params","usage","exec","args","cb","prune","then","catch","where","npm","prefix","opts","flatOptions","path","log","workspaces","workspaceNames","arb","module","exports"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,yBAAD,CAA3B;;AAEA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,8BAAD,CAApC;;AACA,MAAMG,KAAN,SAAoBD,oBAApB,CAAyC;AACvC;AACsB,aAAXE,WAAW,GAAI;AACxB,WAAO,4BAAP;AACD;AAED;;;AACe,aAAJC,IAAI,GAAI;AACjB,WAAO,OAAP;AACD;AAED;;;AACiB,aAANC,MAAM,GAAI;AACnB,WAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,MAApB,EAA4B,GAAG,MAAMA,MAArC,CAAP;AACD;AAED;;;AACgB,aAALC,KAAK,GAAI;AAClB,WAAO,CAAC,uBAAD,CAAP;AACD;;AAEDC,EAAAA,IAAI,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACd,SAAKC,KAAL,GAAaC,IAAb,CAAkB,MAAMF,EAAE,EAA1B,EAA8BG,KAA9B,CAAoCH,EAApC;AACD;;AAEU,QAALC,KAAK,GAAI;AACb,UAAMG,KAAK,GAAG,KAAKC,GAAL,CAASC,MAAvB;AACA,UAAMC,IAAI,GAAG,EACX,GAAG,KAAKF,GAAL,CAASG,WADD;AAEXC,MAAAA,IAAI,EAAEL,KAFK;AAGXM,MAAAA,GAAG,EAAE,KAAKL,GAAL,CAASK,GAHH;AAIXC,MAAAA,UAAU,EAAE,KAAKC;AAJN,KAAb;AAMA,UAAMC,GAAG,GAAG,IAAIxB,QAAJ,CAAakB,IAAb,CAAZ;AACA,UAAMM,GAAG,CAACZ,KAAJ,CAAUM,IAAV,CAAN;AACA,UAAMhB,WAAW,CAAC,KAAKc,GAAN,EAAWQ,GAAX,CAAjB;AACD;;AApCsC;;AAsCzCC,MAAM,CAACC,OAAP,GAAiBtB,KAAjB","sourcesContent":["// prune extraneous packages\nconst Arborist = require('@npmcli/arborist')\nconst reifyFinish = require('./utils/reify-finish.js')\n\nconst ArboristWorkspaceCmd = require('./workspaces/arborist-cmd.js')\nclass Prune extends ArboristWorkspaceCmd {\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get description () {\n    return 'Remove extraneous packages'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get name () {\n    return 'prune'\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get params () {\n    return ['omit', 'dry-run', 'json', ...super.params]\n  }\n\n  /* istanbul ignore next - see test/lib/load-all-commands.js */\n  static get usage () {\n    return ['[[<@scope>/]<pkg>...]']\n  }\n\n  exec (args, cb) {\n    this.prune().then(() => cb()).catch(cb)\n  }\n\n  async prune () {\n    const where = this.npm.prefix\n    const opts = {\n      ...this.npm.flatOptions,\n      path: where,\n      log: this.npm.log,\n      workspaces: this.workspaceNames,\n    }\n    const arb = new Arborist(opts)\n    await arb.prune(opts)\n    await reifyFinish(this.npm, arb)\n  }\n}\nmodule.exports = Prune\n"]},"metadata":{},"sourceType":"script"}