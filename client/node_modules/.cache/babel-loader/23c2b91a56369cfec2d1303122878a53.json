{"ast":null,"code":"var QRMode = require('./QRMode');\n\nvar QRPolynomial = require('./QRPolynomial');\n\nvar QRMath = require('./QRMath');\n\nvar QRMaskPattern = require('./QRMaskPattern');\n\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n  getBCHTypeInfo: function (data) {\n    var d = data << 10;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n    }\n\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function (data) {\n    var d = data << 12;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n    }\n\n    return data << 12 | d;\n  },\n  getBCHDigit: function (data) {\n    var digit = 0;\n\n    while (data !== 0) {\n      digit++;\n      data >>>= 1;\n    }\n\n    return digit;\n  },\n  getPatternPosition: function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 === 0;\n\n      case QRMaskPattern.PATTERN001:\n        return i % 2 === 0;\n\n      case QRMaskPattern.PATTERN010:\n        return j % 3 === 0;\n\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 === 0;\n\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n\n      case QRMaskPattern.PATTERN101:\n        return i * j % 2 + i * j % 3 === 0;\n\n      case QRMaskPattern.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 === 0;\n\n      case QRMaskPattern.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 === 0;\n\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function (errorCorrectLength) {\n    var a = new QRPolynomial([1], 0);\n\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n    }\n\n    return a;\n  },\n  getLengthInBits: function (mode, type) {\n    if (1 <= type && type < 10) {\n      // 1 - 9\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 10;\n\n        case QRMode.MODE_ALPHA_NUM:\n          return 9;\n\n        case QRMode.MODE_8BIT_BYTE:\n          return 8;\n\n        case QRMode.MODE_KANJI:\n          return 8;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 27) {\n      // 10 - 26\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 12;\n\n        case QRMode.MODE_ALPHA_NUM:\n          return 11;\n\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n\n        case QRMode.MODE_KANJI:\n          return 10;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 41) {\n      // 27 - 40\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 14;\n\n        case QRMode.MODE_ALPHA_NUM:\n          return 13;\n\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n\n        case QRMode.MODE_KANJI:\n          return 12;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  },\n  getLostPoint: function (qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0;\n    var row = 0;\n    var col = 0; // LEVEL1\n\n    for (row = 0; row < moduleCount; row++) {\n      for (col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n\n            if (r === 0 && c === 0) {\n              continue;\n            }\n\n            if (dark === qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    } // LEVEL2\n\n\n    for (row = 0; row < moduleCount - 1; row++) {\n      for (col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n\n        if (count === 0 || count === 4) {\n          lostPoint += 3;\n        }\n      }\n    } // LEVEL3\n\n\n    for (row = 0; row < moduleCount; row++) {\n      for (col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (col = 0; col < moduleCount; col++) {\n      for (row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    } // LEVEL4\n\n\n    var darkCount = 0;\n\n    for (col = 0; col < moduleCount; col++) {\n      for (row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  }\n};\nmodule.exports = QRUtil;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/qrcode-terminal/vendor/QRCode/QRUtil.js"],"names":["QRMode","require","QRPolynomial","QRMath","QRMaskPattern","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHTypeInfo","data","d","getBCHDigit","getBCHTypeNumber","digit","getPatternPosition","typeNumber","getMask","maskPattern","i","j","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","Math","floor","PATTERN101","PATTERN110","PATTERN111","Error","getErrorCorrectPolynomial","errorCorrectLength","a","multiply","gexp","getLengthInBits","mode","type","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","count","darkCount","ratio","abs","module","exports"],"mappings":"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","sourcesContent":["var QRMode = require('./QRMode');\nvar QRPolynomial = require('./QRPolynomial');\nvar QRMath = require('./QRMath');\nvar QRMaskPattern = require('./QRMaskPattern');\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],        \n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)    | (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n        var d = data << 10;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n            d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) );    \n        }\n        return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n        var d = data << 12;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n            d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) );    \n        }\n        return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n        var digit = 0;\n\n        while (data !== 0) {\n            digit++;\n            data >>>= 1;\n        }\n\n        return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n        \n        switch (maskPattern) {\n            \n        case QRMaskPattern.PATTERN000 : return (i + j) % 2 === 0;\n        case QRMaskPattern.PATTERN001 : return i % 2 === 0;\n        case QRMaskPattern.PATTERN010 : return j % 3 === 0;\n        case QRMaskPattern.PATTERN011 : return (i + j) % 3 === 0;\n        case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 === 0;\n        case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 === 0;\n        case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 === 0;\n        case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 === 0;\n\n        default :\n            throw new Error(\"bad maskPattern:\" + maskPattern);\n        }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n        var a = new QRPolynomial([1], 0);\n\n        for (var i = 0; i < errorCorrectLength; i++) {\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0) );\n        }\n\n        return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n        if (1 <= type && type < 10) {\n\n            // 1 - 9\n\n            switch(mode) {\n            case QRMode.MODE_NUMBER     : return 10;\n            case QRMode.MODE_ALPHA_NUM  : return 9;\n            case QRMode.MODE_8BIT_BYTE  : return 8;\n            case QRMode.MODE_KANJI      : return 8;\n            default :\n                throw new Error(\"mode:\" + mode);\n            }\n\n        } else if (type < 27) {\n\n            // 10 - 26\n\n            switch(mode) {\n            case QRMode.MODE_NUMBER     : return 12;\n            case QRMode.MODE_ALPHA_NUM  : return 11;\n            case QRMode.MODE_8BIT_BYTE  : return 16;\n            case QRMode.MODE_KANJI      : return 10;\n            default :\n                throw new Error(\"mode:\" + mode);\n            }\n\n        } else if (type < 41) {\n\n            // 27 - 40\n\n            switch(mode) {\n            case QRMode.MODE_NUMBER     : return 14;\n            case QRMode.MODE_ALPHA_NUM  : return 13;\n            case QRMode.MODE_8BIT_BYTE  : return 16;\n            case QRMode.MODE_KANJI      : return 12;\n            default :\n                throw new Error(\"mode:\" + mode);\n            }\n\n        } else {\n            throw new Error(\"type:\" + type);\n        }\n    },\n\n    getLostPoint : function(qrCode) {\n        \n        var moduleCount = qrCode.getModuleCount();\n        var lostPoint = 0;\n        var row = 0; \n        var col = 0;\n\n        \n        // LEVEL1\n        \n        for (row = 0; row < moduleCount; row++) {\n\n            for (col = 0; col < moduleCount; col++) {\n\n                var sameCount = 0;\n                var dark = qrCode.isDark(row, col);\n\n                for (var r = -1; r <= 1; r++) {\n\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n\n                    for (var c = -1; c <= 1; c++) {\n\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n\n                        if (r === 0 && c === 0) {\n                            continue;\n                        }\n\n                        if (dark === qrCode.isDark(row + r, col + c) ) {\n                            sameCount++;\n                        }\n                    }\n                }\n\n                if (sameCount > 5) {\n                    lostPoint += (3 + sameCount - 5);\n                }\n            }\n        }\n\n        // LEVEL2\n\n        for (row = 0; row < moduleCount - 1; row++) {\n            for (col = 0; col < moduleCount - 1; col++) {\n                var count = 0;\n                if (qrCode.isDark(row,     col    ) ) count++;\n                if (qrCode.isDark(row + 1, col    ) ) count++;\n                if (qrCode.isDark(row,     col + 1) ) count++;\n                if (qrCode.isDark(row + 1, col + 1) ) count++;\n                if (count === 0 || count === 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n\n        // LEVEL3\n\n        for (row = 0; row < moduleCount; row++) {\n            for (col = 0; col < moduleCount - 6; col++) {\n                if (qrCode.isDark(row, col) && \n                        !qrCode.isDark(row, col + 1) && \n                         qrCode.isDark(row, col + 2) && \n                         qrCode.isDark(row, col + 3) && \n                         qrCode.isDark(row, col + 4) && \n                        !qrCode.isDark(row, col + 5) && \n                         qrCode.isDark(row, col + 6) ) {\n                    lostPoint += 40;\n                }\n            }\n        }\n\n        for (col = 0; col < moduleCount; col++) {\n            for (row = 0; row < moduleCount - 6; row++) {\n                if (qrCode.isDark(row, col) &&\n                        !qrCode.isDark(row + 1, col) &&\n                         qrCode.isDark(row + 2, col) &&\n                         qrCode.isDark(row + 3, col) &&\n                         qrCode.isDark(row + 4, col) &&\n                        !qrCode.isDark(row + 5, col) &&\n                         qrCode.isDark(row + 6, col) ) {\n                    lostPoint += 40;\n                }\n            }\n        }\n\n        // LEVEL4\n        \n        var darkCount = 0;\n\n        for (col = 0; col < moduleCount; col++) {\n            for (row = 0; row < moduleCount; row++) {\n                if (qrCode.isDark(row, col) ) {\n                    darkCount++;\n                }\n            }\n        }\n        \n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n\n        return lostPoint;       \n    }\n\n};\n\nmodule.exports = QRUtil;\n"]},"metadata":{},"sourceType":"script"}