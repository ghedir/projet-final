{"ast":null,"code":"const {\n  basename,\n  extname\n} = require('path');\n\nconst binaryExtensions = require('binary-extensions'); // we should try to print patches as long as the\n// extension is not identified as binary files\n\n\nconst shouldPrintPatch = (path, opts = {}) => {\n  if (opts.diffText) return true;\n  const filename = basename(path);\n  const extension = (filename.startsWith('.') ? filename : extname(filename)).substr(1);\n  return !binaryExtensions.includes(extension);\n};\n\nmodule.exports = shouldPrintPatch;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/libnpmdiff/lib/should-print-patch.js"],"names":["basename","extname","require","binaryExtensions","shouldPrintPatch","path","opts","diffText","filename","extension","startsWith","substr","includes","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAwBC,OAAO,CAAC,MAAD,CAArC;;AAEA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,mBAAD,CAAhC,C,CAEA;AACA;;;AACA,MAAME,gBAAgB,GAAG,CAACC,IAAD,EAAOC,IAAI,GAAG,EAAd,KAAqB;AAC5C,MAAIA,IAAI,CAACC,QAAT,EACE,OAAO,IAAP;AAEF,QAAMC,QAAQ,GAAGR,QAAQ,CAACK,IAAD,CAAzB;AACA,QAAMI,SAAS,GAAG,CAChBD,QAAQ,CAACE,UAAT,CAAoB,GAApB,IACIF,QADJ,GAEIP,OAAO,CAACO,QAAD,CAHK,EAIhBG,MAJgB,CAIT,CAJS,CAAlB;AAMA,SAAO,CAACR,gBAAgB,CAACS,QAAjB,CAA0BH,SAA1B,CAAR;AACD,CAZD;;AAcAI,MAAM,CAACC,OAAP,GAAiBV,gBAAjB","sourcesContent":["const { basename, extname } = require('path')\n\nconst binaryExtensions = require('binary-extensions')\n\n// we should try to print patches as long as the\n// extension is not identified as binary files\nconst shouldPrintPatch = (path, opts = {}) => {\n  if (opts.diffText)\n    return true\n\n  const filename = basename(path)\n  const extension = (\n    filename.startsWith('.')\n      ? filename\n      : extname(filename)\n  ).substr(1)\n\n  return !binaryExtensions.includes(extension)\n}\n\nmodule.exports = shouldPrintPatch\n"]},"metadata":{},"sourceType":"script"}