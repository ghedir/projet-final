{"ast":null,"code":"const {\n  FetchError,\n  Headers,\n  Request,\n  Response\n} = require('minipass-fetch');\n\nconst configureOptions = require('./options.js');\n\nconst fetch = require('./fetch.js');\n\nconst makeFetchHappen = (url, opts) => {\n  const options = configureOptions(opts);\n  const request = new Request(url, options);\n  return fetch(request, options);\n};\n\nmakeFetchHappen.defaults = (defaultUrl, defaultOptions = {}) => {\n  if (typeof defaultUrl === 'object') {\n    defaultOptions = defaultUrl;\n    defaultUrl = null;\n  }\n\n  const defaultedFetch = (url, options = {}) => {\n    const finalUrl = url || defaultUrl;\n    const finalOptions = { ...defaultOptions,\n      ...options,\n      headers: { ...defaultOptions.headers,\n        ...options.headers\n      }\n    };\n    return makeFetchHappen(finalUrl, finalOptions);\n  };\n\n  defaultedFetch.defaults = makeFetchHappen.defaults;\n  return defaultedFetch;\n};\n\nmodule.exports = makeFetchHappen;\nmodule.exports.FetchError = FetchError;\nmodule.exports.Headers = Headers;\nmodule.exports.Request = Request;\nmodule.exports.Response = Response;","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/make-fetch-happen/lib/index.js"],"names":["FetchError","Headers","Request","Response","require","configureOptions","fetch","makeFetchHappen","url","opts","options","request","defaults","defaultUrl","defaultOptions","defaultedFetch","finalUrl","finalOptions","headers","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA,OAAvB;AAAgCC,EAAAA;AAAhC,IAA6CC,OAAO,CAAC,gBAAD,CAA1D;;AAEA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,cAAD,CAAhC;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAMG,eAAe,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACrC,QAAMC,OAAO,GAAGL,gBAAgB,CAACI,IAAD,CAAhC;AAEA,QAAME,OAAO,GAAG,IAAIT,OAAJ,CAAYM,GAAZ,EAAiBE,OAAjB,CAAhB;AACA,SAAOJ,KAAK,CAACK,OAAD,EAAUD,OAAV,CAAZ;AACD,CALD;;AAOAH,eAAe,CAACK,QAAhB,GAA2B,CAACC,UAAD,EAAaC,cAAc,GAAG,EAA9B,KAAqC;AAC9D,MAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;AAClCC,IAAAA,cAAc,GAAGD,UAAjB;AACAA,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,QAAME,cAAc,GAAG,CAACP,GAAD,EAAME,OAAO,GAAG,EAAhB,KAAuB;AAC5C,UAAMM,QAAQ,GAAGR,GAAG,IAAIK,UAAxB;AACA,UAAMI,YAAY,GAAG,EACnB,GAAGH,cADgB;AAEnB,SAAGJ,OAFgB;AAGnBQ,MAAAA,OAAO,EAAE,EACP,GAAGJ,cAAc,CAACI,OADX;AAEP,WAAGR,OAAO,CAACQ;AAFJ;AAHU,KAArB;AAQA,WAAOX,eAAe,CAACS,QAAD,EAAWC,YAAX,CAAtB;AACD,GAXD;;AAaAF,EAAAA,cAAc,CAACH,QAAf,GAA0BL,eAAe,CAACK,QAA1C;AACA,SAAOG,cAAP;AACD,CArBD;;AAuBAI,MAAM,CAACC,OAAP,GAAiBb,eAAjB;AACAY,MAAM,CAACC,OAAP,CAAepB,UAAf,GAA4BA,UAA5B;AACAmB,MAAM,CAACC,OAAP,CAAenB,OAAf,GAAyBA,OAAzB;AACAkB,MAAM,CAACC,OAAP,CAAelB,OAAf,GAAyBA,OAAzB;AACAiB,MAAM,CAACC,OAAP,CAAejB,QAAf,GAA0BA,QAA1B","sourcesContent":["const { FetchError, Headers, Request, Response } = require('minipass-fetch')\n\nconst configureOptions = require('./options.js')\nconst fetch = require('./fetch.js')\n\nconst makeFetchHappen = (url, opts) => {\n  const options = configureOptions(opts)\n\n  const request = new Request(url, options)\n  return fetch(request, options)\n}\n\nmakeFetchHappen.defaults = (defaultUrl, defaultOptions = {}) => {\n  if (typeof defaultUrl === 'object') {\n    defaultOptions = defaultUrl\n    defaultUrl = null\n  }\n\n  const defaultedFetch = (url, options = {}) => {\n    const finalUrl = url || defaultUrl\n    const finalOptions = {\n      ...defaultOptions,\n      ...options,\n      headers: {\n        ...defaultOptions.headers,\n        ...options.headers,\n      },\n    }\n    return makeFetchHappen(finalUrl, finalOptions)\n  }\n\n  defaultedFetch.defaults = makeFetchHappen.defaults\n  return defaultedFetch\n}\n\nmodule.exports = makeFetchHappen\nmodule.exports.FetchError = FetchError\nmodule.exports.Headers = Headers\nmodule.exports.Request = Request\nmodule.exports.Response = Response\n"]},"metadata":{},"sourceType":"script"}