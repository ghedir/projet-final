{"ast":null,"code":"const {\n  resolve\n} = require('path');\n\nconst {\n  promisify\n} = require('util');\n\nconst stat = promisify(require('fs').stat);\n\nconst walkUp = require('walk-up-path');\n\nconst fileExists = file => stat(file).then(stat => stat.isFile()).catch(() => false);\n\nconst localFileExists = async (dir, binName, root = '/') => {\n  root = resolve(root).toLowerCase();\n\n  for (const path of walkUp(resolve(dir))) {\n    const binDir = resolve(path, 'node_modules', '.bin');\n    if (await fileExists(resolve(binDir, binName))) return binDir;\n    if (path.toLowerCase() === root) return false;\n  }\n\n  return false;\n};\n\nmodule.exports = {\n  fileExists,\n  localFileExists\n};","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/libnpmexec/lib/file-exists.js"],"names":["resolve","require","promisify","stat","walkUp","fileExists","file","then","isFile","catch","localFileExists","dir","binName","root","toLowerCase","path","binDir","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,MAAD,CAA3B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBD,OAAO,CAAC,MAAD,CAA7B;;AACA,MAAME,IAAI,GAAGD,SAAS,CAACD,OAAO,CAAC,IAAD,CAAP,CAAcE,IAAf,CAAtB;;AACA,MAAMC,MAAM,GAAGH,OAAO,CAAC,cAAD,CAAtB;;AAEA,MAAMI,UAAU,GAAIC,IAAD,IAAUH,IAAI,CAACG,IAAD,CAAJ,CAC1BC,IAD0B,CACpBJ,IAAD,IAAUA,IAAI,CAACK,MAAL,EADW,EAE1BC,KAF0B,CAEpB,MAAM,KAFc,CAA7B;;AAIA,MAAMC,eAAe,GAAG,OAAOC,GAAP,EAAYC,OAAZ,EAAqBC,IAAI,GAAG,GAA5B,KAAoC;AAC1DA,EAAAA,IAAI,GAAGb,OAAO,CAACa,IAAD,CAAP,CAAcC,WAAd,EAAP;;AAEA,OAAK,MAAMC,IAAX,IAAmBX,MAAM,CAACJ,OAAO,CAACW,GAAD,CAAR,CAAzB,EAAyC;AACvC,UAAMK,MAAM,GAAGhB,OAAO,CAACe,IAAD,EAAO,cAAP,EAAuB,MAAvB,CAAtB;AAEA,QAAI,MAAMV,UAAU,CAACL,OAAO,CAACgB,MAAD,EAASJ,OAAT,CAAR,CAApB,EACE,OAAOI,MAAP;AAEF,QAAID,IAAI,CAACD,WAAL,OAAuBD,IAA3B,EACE,OAAO,KAAP;AACH;;AAED,SAAO,KAAP;AACD,CAdD;;AAgBAI,MAAM,CAACC,OAAP,GAAiB;AACfb,EAAAA,UADe;AAEfK,EAAAA;AAFe,CAAjB","sourcesContent":["const { resolve } = require('path')\nconst { promisify } = require('util')\nconst stat = promisify(require('fs').stat)\nconst walkUp = require('walk-up-path')\n\nconst fileExists = (file) => stat(file)\n  .then((stat) => stat.isFile())\n  .catch(() => false)\n\nconst localFileExists = async (dir, binName, root = '/') => {\n  root = resolve(root).toLowerCase()\n\n  for (const path of walkUp(resolve(dir))) {\n    const binDir = resolve(path, 'node_modules', '.bin')\n\n    if (await fileExists(resolve(binDir, binName)))\n      return binDir\n\n    if (path.toLowerCase() === root)\n      return false\n  }\n\n  return false\n}\n\nmodule.exports = {\n  fileExists,\n  localFileExists,\n}\n"]},"metadata":{},"sourceType":"script"}