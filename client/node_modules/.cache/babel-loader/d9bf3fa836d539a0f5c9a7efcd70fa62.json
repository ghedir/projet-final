{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghedi\\\\Documents\\\\GhedBlog\\\\client\\\\src\\\\context\\\\postContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  posts: null,\n  error: false\n};\nexport const PostsContext = /*#__PURE__*/createContext(INITIAL_STATE);\n_c = PostsContext;\nexport const PostContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      await axios.get(\"/posts\").then(response => setPosts(response.data));\n    };\n\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      posts: state.posts,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostContextProvider, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n\n_c2 = PostContextProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostsContext\");\n$RefreshReg$(_c2, \"PostContextProvider\");","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/client/src/context/postContext.js"],"names":["createContext","useEffect","useReducer","Reducer","INITIAL_STATE","posts","error","PostsContext","PostContextProvider","children","state","dispatch","fetchPosts","axios","get","then","response","setPosts","data","isFetching"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,KAAK,EAAE,IADS;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAApB;AAIA,OAAO,MAAMC,YAAY,gBAAGP,aAAa,CAACI,aAAD,CAAlC;KAAMG,Y;AAEb,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACC,OAAD,EAAUC,aAAV,CAApC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,UAAU,GAAG,YAAY;AAC7B,YAAMC,KAAK,CACRC,GADG,CACC,QADD,EAEHC,IAFG,CAEGC,QAAD,IAAcC,QAAQ,CAACD,QAAQ,CAACE,IAAV,CAFxB,CAAN;AAGD,KAJD;;AAKAN,IAAAA,UAAU;AACX,GAPM,EAOL,EAPK,CAAT;AAQE,sBACE,QAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,KAAK,EAAEK,KAAK,CAACL,KADR;AAELc,MAAAA,UAAU,EAAET,KAAK,CAACS,UAFb;AAGLb,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KAHR;AAILK,MAAAA;AAJK,KADT;AAAA,cAQGF;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYL,CAtBM;;GAAMD,mB;;MAAAA,mB","sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\r\nimport Reducer from \"./Reducer\";\r\n\r\n\r\nconst INITIAL_STATE={\r\n    posts: null,\r\n    error: false,\r\n}\r\nexport const PostsContext = createContext(INITIAL_STATE);\r\n\r\nexport const PostContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n          await axios\r\n            .get(\"/posts\")\r\n            .then((response) => setPosts(response.data));\r\n        };\r\n        fetchPosts();\r\n      },[]);\r\n      return (\r\n        <Context.Provider\r\n          value={{\r\n            posts: state.posts,\r\n            isFetching: state.isFetching,\r\n            error: state.error,\r\n            dispatch,\r\n          }}\r\n        >\r\n          {children}\r\n        </Context.Provider>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}