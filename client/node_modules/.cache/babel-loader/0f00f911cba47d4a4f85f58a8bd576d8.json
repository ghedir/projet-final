{"ast":null,"code":"\"use strict\";\n\nconst ipRegex = require(\"ip-regex\");\n\nconst defaultOpts = {\n  exact: false\n};\nconst v4str = `${ipRegex.v4().source}\\\\/(3[0-2]|[12]?[0-9])`;\nconst v6str = `${ipRegex.v6().source}\\\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])`; // can not precompile the non-exact regexes because global flag makes the regex object stateful\n// which would require the user to reset .lastIndex on subsequent calls\n\nconst v4exact = new RegExp(`^${v4str}$`);\nconst v6exact = new RegExp(`^${v6str}$`);\nconst v46exact = new RegExp(`(?:^${v4str}$)|(?:^${v6str}$)`);\n\nmodule.exports = ({\n  exact\n} = defaultOpts) => exact ? v46exact : new RegExp(`(?:${v4str})|(?:${v6str})`, \"g\");\n\nmodule.exports.v4 = ({\n  exact\n} = defaultOpts) => exact ? v4exact : new RegExp(v4str, \"g\");\n\nmodule.exports.v6 = ({\n  exact\n} = defaultOpts) => exact ? v6exact : new RegExp(v6str, \"g\");","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/cidr-regex/index.js"],"names":["ipRegex","require","defaultOpts","exact","v4str","v4","source","v6str","v6","v4exact","RegExp","v6exact","v46exact","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAMC,WAAW,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAApB;AAEA,MAAMC,KAAK,GAAI,GAAEJ,OAAO,CAACK,EAAR,GAAaC,MAAO,wBAArC;AACA,MAAMC,KAAK,GAAI,GAAEP,OAAO,CAACQ,EAAR,GAAaF,MAAO,qCAArC,C,CAEA;AACA;;AACA,MAAMG,OAAO,GAAG,IAAIC,MAAJ,CAAY,IAAGN,KAAM,GAArB,CAAhB;AACA,MAAMO,OAAO,GAAG,IAAID,MAAJ,CAAY,IAAGH,KAAM,GAArB,CAAhB;AACA,MAAMK,QAAQ,GAAG,IAAIF,MAAJ,CAAY,OAAMN,KAAM,UAASG,KAAM,IAAvC,CAAjB;;AAEAM,MAAM,CAACC,OAAP,GAAiB,CAAC;AAACX,EAAAA;AAAD,IAAUD,WAAX,KAA2BC,KAAK,GAAGS,QAAH,GAAc,IAAIF,MAAJ,CAAY,MAAKN,KAAM,QAAOG,KAAM,GAApC,EAAwC,GAAxC,CAA/D;;AACAM,MAAM,CAACC,OAAP,CAAeT,EAAf,GAAoB,CAAC;AAACF,EAAAA;AAAD,IAAUD,WAAX,KAA2BC,KAAK,GAAGM,OAAH,GAAa,IAAIC,MAAJ,CAAWN,KAAX,EAAkB,GAAlB,CAAjE;;AACAS,MAAM,CAACC,OAAP,CAAeN,EAAf,GAAoB,CAAC;AAACL,EAAAA;AAAD,IAAUD,WAAX,KAA2BC,KAAK,GAAGQ,OAAH,GAAa,IAAID,MAAJ,CAAWH,KAAX,EAAkB,GAAlB,CAAjE","sourcesContent":["\"use strict\";\n\nconst ipRegex = require(\"ip-regex\");\n\nconst defaultOpts = {exact: false};\n\nconst v4str = `${ipRegex.v4().source}\\\\/(3[0-2]|[12]?[0-9])`;\nconst v6str = `${ipRegex.v6().source}\\\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])`;\n\n// can not precompile the non-exact regexes because global flag makes the regex object stateful\n// which would require the user to reset .lastIndex on subsequent calls\nconst v4exact = new RegExp(`^${v4str}$`);\nconst v6exact = new RegExp(`^${v6str}$`);\nconst v46exact = new RegExp(`(?:^${v4str}$)|(?:^${v6str}$)`);\n\nmodule.exports = ({exact} = defaultOpts) => exact ? v46exact : new RegExp(`(?:${v4str})|(?:${v6str})`, \"g\");\nmodule.exports.v4 = ({exact} = defaultOpts) => exact ? v4exact : new RegExp(v4str, \"g\");\nmodule.exports.v6 = ({exact} = defaultOpts) => exact ? v6exact : new RegExp(v6str, \"g\");\n"]},"metadata":{},"sourceType":"script"}