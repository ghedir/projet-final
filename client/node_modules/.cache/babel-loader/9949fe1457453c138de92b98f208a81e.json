{"ast":null,"code":"module.exports = read;\n\nvar readline = require('readline');\n\nvar Mute = require('mute-stream');\n\nfunction read(opts, cb) {\n  if (opts.num) {\n    throw new Error('read() no longer accepts a char number limit');\n  }\n\n  if (typeof opts.default !== 'undefined' && typeof opts.default !== 'string' && typeof opts.default !== 'number') {\n    throw new Error('default value must be string or number');\n  }\n\n  var input = opts.input || process.stdin;\n  var output = opts.output || process.stdout;\n  var prompt = (opts.prompt || '').trim() + ' ';\n  var silent = opts.silent;\n  var editDef = false;\n  var timeout = opts.timeout;\n  var def = opts.default || '';\n\n  if (def) {\n    if (silent) {\n      prompt += '(<default hidden>) ';\n    } else if (opts.edit) {\n      editDef = true;\n    } else {\n      prompt += '(' + def + ') ';\n    }\n  }\n\n  var terminal = !!(opts.terminal || output.isTTY);\n  var m = new Mute({\n    replace: opts.replace,\n    prompt: prompt\n  });\n  m.pipe(output, {\n    end: false\n  });\n  output = m;\n  var rlOpts = {\n    input: input,\n    output: output,\n    terminal: terminal\n  };\n\n  if (process.version.match(/^v0\\.6/)) {\n    var rl = readline.createInterface(rlOpts.input, rlOpts.output);\n  } else {\n    var rl = readline.createInterface(rlOpts);\n  }\n\n  output.unmute();\n  rl.setPrompt(prompt);\n  rl.prompt();\n\n  if (silent) {\n    output.mute();\n  } else if (editDef) {\n    rl.line = def;\n    rl.cursor = def.length;\n\n    rl._refreshLine();\n  }\n\n  var called = false;\n  rl.on('line', onLine);\n  rl.on('error', onError);\n  rl.on('SIGINT', function () {\n    rl.close();\n    onError(new Error('canceled'));\n  });\n  var timer;\n\n  if (timeout) {\n    timer = setTimeout(function () {\n      onError(new Error('timed out'));\n    }, timeout);\n  }\n\n  function done() {\n    called = true;\n    rl.close();\n\n    if (process.version.match(/^v0\\.6/)) {\n      rl.input.removeAllListeners('data');\n      rl.input.removeAllListeners('keypress');\n      rl.input.pause();\n    }\n\n    clearTimeout(timer);\n    output.mute();\n    output.end();\n  }\n\n  function onError(er) {\n    if (called) return;\n    done();\n    return cb(er);\n  }\n\n  function onLine(line) {\n    if (called) return;\n\n    if (silent && terminal) {\n      output.unmute();\n      output.write('\\r\\n');\n    }\n\n    done(); // truncate the \\n at the end.\n\n    line = line.replace(/\\r?\\n$/, '');\n    var isDefault = !!(editDef && line === def);\n\n    if (def && !line) {\n      isDefault = true;\n      line = def;\n    }\n\n    cb(null, line, isDefault);\n  }\n}","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/read/lib/read.js"],"names":["module","exports","read","readline","require","Mute","opts","cb","num","Error","default","input","process","stdin","output","stdout","prompt","trim","silent","editDef","timeout","def","edit","terminal","isTTY","m","replace","pipe","end","rlOpts","version","match","rl","createInterface","unmute","setPrompt","mute","line","cursor","length","_refreshLine","called","on","onLine","onError","close","timer","setTimeout","done","removeAllListeners","pause","clearTimeout","er","write","isDefault"],"mappings":"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","sourcesContent":["\nmodule.exports = read\n\nvar readline = require('readline')\nvar Mute = require('mute-stream')\n\nfunction read (opts, cb) {\n  if (opts.num) {\n    throw new Error('read() no longer accepts a char number limit')\n  }\n\n  if (typeof opts.default !== 'undefined' &&\n      typeof opts.default !== 'string' &&\n      typeof opts.default !== 'number') {\n    throw new Error('default value must be string or number')\n  }\n\n  var input = opts.input || process.stdin\n  var output = opts.output || process.stdout\n  var prompt = (opts.prompt || '').trim() + ' '\n  var silent = opts.silent\n  var editDef = false\n  var timeout = opts.timeout\n\n  var def = opts.default || ''\n  if (def) {\n    if (silent) {\n      prompt += '(<default hidden>) '\n    } else if (opts.edit) {\n      editDef = true\n    } else {\n      prompt += '(' + def + ') '\n    }\n  }\n  var terminal = !!(opts.terminal || output.isTTY)\n\n  var m = new Mute({ replace: opts.replace, prompt: prompt })\n  m.pipe(output, {end: false})\n  output = m\n  var rlOpts = { input: input, output: output, terminal: terminal }\n\n  if (process.version.match(/^v0\\.6/)) {\n    var rl = readline.createInterface(rlOpts.input, rlOpts.output)\n  } else {\n    var rl = readline.createInterface(rlOpts)\n  }\n\n\n  output.unmute()\n  rl.setPrompt(prompt)\n  rl.prompt()\n  if (silent) {\n    output.mute()\n  } else if (editDef) {\n    rl.line = def\n    rl.cursor = def.length\n    rl._refreshLine()\n  }\n\n  var called = false\n  rl.on('line', onLine)\n  rl.on('error', onError)\n\n  rl.on('SIGINT', function () {\n    rl.close()\n    onError(new Error('canceled'))\n  })\n\n  var timer\n  if (timeout) {\n    timer = setTimeout(function () {\n      onError(new Error('timed out'))\n    }, timeout)\n  }\n\n  function done () {\n    called = true\n    rl.close()\n\n    if (process.version.match(/^v0\\.6/)) {\n      rl.input.removeAllListeners('data')\n      rl.input.removeAllListeners('keypress')\n      rl.input.pause()\n    }\n\n    clearTimeout(timer)\n    output.mute()\n    output.end()\n  }\n\n  function onError (er) {\n    if (called) return\n    done()\n    return cb(er)\n  }\n\n  function onLine (line) {\n    if (called) return\n    if (silent && terminal) {\n      output.unmute()\n      output.write('\\r\\n')\n    }\n    done()\n    // truncate the \\n at the end.\n    line = line.replace(/\\r?\\n$/, '')\n    var isDefault = !!(editDef && line === def)\n    if (def && !line) {\n      isDefault = true\n      line = def\n    }\n    cb(null, line, isDefault)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}