{"ast":null,"code":"const _idealTreePrune = Symbol.for('idealTreePrune');\n\nmodule.exports = cls => class Pruner extends cls {\n  async prune(options = {}) {\n    // allow the user to set options on the ctor as well.\n    // XXX: deprecate separate method options objects.\n    options = { ...this.options,\n      ...options\n    };\n    await this.buildIdealTree(options);\n\n    this[_idealTreePrune]();\n\n    return this.reify(options);\n  }\n\n};","map":{"version":3,"sources":["C:/Users/ghedi/Documents/GhedBlog/node_modules/npm/node_modules/@npmcli/arborist/lib/arborist/pruner.js"],"names":["_idealTreePrune","Symbol","for","module","exports","cls","Pruner","prune","options","buildIdealTree","reify"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,MAAM,CAACC,GAAP,CAAW,gBAAX,CAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,GAAG,IAAI,MAAMC,MAAN,SAAqBD,GAArB,CAAyB;AACpC,QAALE,KAAK,CAAEC,OAAO,GAAG,EAAZ,EAAgB;AACzB;AACA;AACAA,IAAAA,OAAO,GAAG,EAAE,GAAG,KAAKA,OAAV;AAAmB,SAAGA;AAAtB,KAAV;AAEA,UAAM,KAAKC,cAAL,CAAoBD,OAApB,CAAN;;AAEA,SAAKR,eAAL;;AAEA,WAAO,KAAKU,KAAL,CAAWF,OAAX,CAAP;AACD;;AAX8C,CAAjD","sourcesContent":["const _idealTreePrune = Symbol.for('idealTreePrune')\n\nmodule.exports = cls => class Pruner extends cls {\n  async prune (options = {}) {\n    // allow the user to set options on the ctor as well.\n    // XXX: deprecate separate method options objects.\n    options = { ...this.options, ...options }\n\n    await this.buildIdealTree(options)\n\n    this[_idealTreePrune]()\n\n    return this.reify(options)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}